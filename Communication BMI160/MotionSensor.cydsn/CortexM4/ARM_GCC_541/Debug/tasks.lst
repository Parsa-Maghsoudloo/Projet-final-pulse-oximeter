ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB522:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB94:
  38              	.LBB95:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 35


  43 0004 4FF0BF03 			mov r3, #191												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE95:
  56              	.LBE94:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE522:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB550:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE550:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB549:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 73


 185              	.LFE549:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB513:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8246     		mov	r10, r0
 210 0006 8946     		mov	r9, r1
 211 0008 1546     		mov	r5, r2
 212 000a 9846     		mov	r8, r3
 213 000c 089F     		ldr	r7, [sp, #32]
 214 000e 099E     		ldr	r6, [sp, #36]
 215 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0012 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0014 A521     		movs	r1, #165
 220              	.LVL17:
 221 0016 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 0018 FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001c 236B     		ldr	r3, [r4, #48]
 227 001e 05F18042 		add	r2, r5, #1073741824
 228 0022 013A     		subs	r2, r2, #1
 229 0024 03EB8205 		add	r5, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 0028 25F00705 		bic	r5, r5, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002c 0023     		movs	r3, #0
 236 002e 08E0     		b	.L24
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 245 003e 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 0040 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0042 0F2B     		cmp	r3, #15
 252 0044 F4D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0046 0023     		movs	r3, #0
 256              	.LVL24:
 257 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004c 132F     		cmp	r7, #19
 260 004e 00D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 1327     		movs	r7, #19
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 931 0
 268 0054 201D     		adds	r0, r4, #4
 269 0056 FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL26:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 271              		.loc 1 932 0
 272 005a 04F11800 		add	r0, r4, #24
 273 005e FFF7FEFF 		bl	vListInitialiseItem
 274              	.LVL27:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 275              		.loc 1 936 0
 276 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 277              		.loc 1 939 0
 278 0064 C7F11403 		rsb	r3, r7, #20
 279 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 280              		.loc 1 940 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 75


 281 006a 6462     		str	r4, [r4, #36]
 282              	.LVL28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 283              		.loc 1 973 0
 284 006c 0023     		movs	r3, #0
 285 006e 06E0     		b	.L28
 286              	.LVL29:
 287              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 288              		.loc 1 975 0 discriminator 3
 289 0070 03F11002 		add	r2, r3, #16
 290 0074 04EB8202 		add	r2, r4, r2, lsl #2
 291 0078 0021     		movs	r1, #0
 292 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 293              		.loc 1 973 0 discriminator 3
 294 007c 0133     		adds	r3, r3, #1
 295              	.LVL30:
 296              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 297              		.loc 1 973 0 is_stmt 0 discriminator 1
 298 007e 042B     		cmp	r3, #4
 299 0080 F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 300              		.loc 1 982 0 is_stmt 1
 301 0082 0023     		movs	r3, #0
 302              	.LVL31:
 303 0084 A365     		str	r3, [r4, #88]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 304              		.loc 1 983 0
 305 0086 84F85C30 		strb	r3, [r4, #92]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 306              		.loc 1 1010 0
 307 008a 4246     		mov	r2, r8
 308 008c 5146     		mov	r1, r10
 309 008e 2846     		mov	r0, r5
 310 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL32:
 312 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 313              		.loc 1 1014 0
 314 0096 06B1     		cbz	r6, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 315              		.loc 1 1018 0
 316 0098 3460     		str	r4, [r6]
 317              	.L23:
 318 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 319              		.cfi_endproc
 320              	.LFE513:
 321              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 322 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	prvInitialiseTaskLists, %function
 327              	prvInitialiseTaskLists:
 328              	.LFB547:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 76


3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 329              		.loc 1 3448 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 70B5     		push	{r4, r5, r6, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 4, -16
 336              		.cfi_offset 5, -12
 337              		.cfi_offset 6, -8
 338              		.cfi_offset 14, -4
 339              	.LVL33:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 340              		.loc 1 3451 0
 341 0002 0024     		movs	r4, #0
 342 0004 07E0     		b	.L34
 343              	.LVL34:
 344              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 345              		.loc 1 3453 0 discriminator 3
 346 0006 04EB8402 		add	r2, r4, r4, lsl #2
 347 000a 9300     		lsls	r3, r2, #2
 348 000c 1048     		ldr	r0, .L37
 349 000e 1844     		add	r0, r0, r3
 350 0010 FFF7FEFF 		bl	vListInitialise
 351              	.LVL35:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 352              		.loc 1 3451 0 discriminator 3
 353 0014 0134     		adds	r4, r4, #1
 354              	.LVL36:
 355              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 356              		.loc 1 3451 0 is_stmt 0 discriminator 1
 357 0016 132C     		cmp	r4, #19
 358 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 359              		.loc 1 3456 0 is_stmt 1
 360 001a 0E4C     		ldr	r4, .L37+4
 361              	.LVL37:
 362 001c 04F5E076 		add	r6, r4, #448
 363 0020 3046     		mov	r0, r6
 364 0022 FFF7FEFF 		bl	vListInitialise
 365              	.LVL38:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3457 0
 367 0026 04F5EA75 		add	r5, r4, #468
 368 002a 2846     		mov	r0, r5
 369 002c FFF7FEFF 		bl	vListInitialise
 370              	.LVL39:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371              		.loc 1 3458 0
 372 0030 04F11400 		add	r0, r4, #20
 373 0034 FFF7FEFF 		bl	vListInitialise
 374              	.LVL40:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 375              		.loc 1 3462 0
 376 0038 04F5F470 		add	r0, r4, #488
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 77


 377 003c FFF7FEFF 		bl	vListInitialise
 378              	.LVL41:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 379              		.loc 1 3468 0
 380 0040 2046     		mov	r0, r4
 381 0042 FFF7FEFF 		bl	vListInitialise
 382              	.LVL42:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3474 0
 384 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 385              		.loc 1 3475 0
 386 0048 C4F8FC51 		str	r5, [r4, #508]
 387 004c 70BD     		pop	{r4, r5, r6, pc}
 388              	.L38:
 389 004e 00BF     		.align	2
 390              	.L37:
 391 0050 30000000 		.word	.LANCHOR0+48
 392 0054 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE547:
 395              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 396              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 397              		.align	2
 398              		.thumb
 399              		.thumb_func
 400              		.type	prvAddNewTaskToReadyList, %function
 401              	prvAddNewTaskToReadyList:
 402              	.LFB514:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 403              		.loc 1 1028 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL43:
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 415              		.loc 1 1031 0
 416 0004 FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 418              		.loc 1 1033 0
 419 0008 264B     		ldr	r3, .L45
 420 000a D3F80022 		ldr	r2, [r3, #512]
 421 000e 0132     		adds	r2, r2, #1
 422 0010 C3F80022 		str	r2, [r3, #512]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 423              		.loc 1 1034 0
 424 0014 D3F80432 		ldr	r3, [r3, #516]
 425 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 78


 426              		.loc 1 1038 0
 427 001a 224B     		ldr	r3, .L45
 428 001c C3F80442 		str	r4, [r3, #516]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 429              		.loc 1 1040 0
 430 0020 D3F80032 		ldr	r3, [r3, #512]
 431 0024 012B     		cmp	r3, #1
 432 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 433              		.loc 1 1045 0
 434 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 435              	.LVL45:
 436 002c 0DE0     		b	.L41
 437              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 438              		.loc 1 1057 0
 439 002e 1D4B     		ldr	r3, .L45
 440 0030 D3F80832 		ldr	r3, [r3, #520]
 441 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 442              		.loc 1 1059 0
 443 0036 1B4B     		ldr	r3, .L45
 444 0038 D3F80432 		ldr	r3, [r3, #516]
 445 003c DA6A     		ldr	r2, [r3, #44]
 446 003e E36A     		ldr	r3, [r4, #44]
 447 0040 9A42     		cmp	r2, r3
 448 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 449              		.loc 1 1061 0
 450 0044 174B     		ldr	r3, .L45
 451 0046 C3F80442 		str	r4, [r3, #516]
 452              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 453              		.loc 1 1074 0
 454 004a 164A     		ldr	r2, .L45
 455 004c D2F80C32 		ldr	r3, [r2, #524]
 456 0050 0133     		adds	r3, r3, #1
 457 0052 C2F80C32 		str	r3, [r2, #524]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 458              		.loc 1 1084 0
 459 0056 E36A     		ldr	r3, [r4, #44]
 460 0058 D2F81022 		ldr	r2, [r2, #528]
 461 005c 9342     		cmp	r3, r2
 462 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 463              		.loc 1 1084 0 is_stmt 0 discriminator 1
 464 0060 104A     		ldr	r2, .L45
 465 0062 C2F81032 		str	r3, [r2, #528]
 466              	.L42:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 467              		.loc 1 1084 0 discriminator 3
 468 0066 0F4D     		ldr	r5, .L45
 469 0068 05F13000 		add	r0, r5, #48
 470 006c 03EB8303 		add	r3, r3, r3, lsl #2
 471 0070 9A00     		lsls	r2, r3, #2
 472 0072 211D     		adds	r1, r4, #4
 473 0074 1044     		add	r0, r0, r2
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 79


 474 0076 FFF7FEFF 		bl	vListInsertEnd
 475              	.LVL46:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 476              		.loc 1 1088 0 is_stmt 1 discriminator 3
 477 007a FFF7FEFF 		bl	vPortExitCritical
 478              	.LVL47:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 479              		.loc 1 1090 0 discriminator 3
 480 007e D5F80832 		ldr	r3, [r5, #520]
 481 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 482              		.loc 1 1094 0
 483 0084 D5F80432 		ldr	r3, [r5, #516]
 484 0088 DA6A     		ldr	r2, [r3, #44]
 485 008a E36A     		ldr	r3, [r4, #44]
 486 008c 9A42     		cmp	r2, r3
 487 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 488              		.loc 1 1096 0
 489 0090 4FF08052 		mov	r2, #268435456
 490 0094 044B     		ldr	r3, .L45+4
 491 0096 1A60     		str	r2, [r3]
 492              		.syntax unified
 493              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 494 0098 BFF34F8F 		dsb
 495              	@ 0 "" 2
 496              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 497 009c BFF36F8F 		isb
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.L39:
 502 00a0 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL48:
 504              	.L46:
 505 00a2 00BF     		.align	2
 506              	.L45:
 507 00a4 00000000 		.word	.LANCHOR0
 508 00a8 04ED00E0 		.word	-536810236
 509              		.cfi_endproc
 510              	.LFE514:
 511              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 512              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 516              		.type	prvCheckTasksWaitingTermination, %function
 517              	prvCheckTasksWaitingTermination:
 518              	.LFB548:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 519              		.loc 1 3480 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 80


 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529              	.LBB96:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 530              		.loc 1 3490 0
 531 0002 17E0     		b	.L48
 532              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 533              		.loc 1 3492 0
 534 0004 FFF7FEFF 		bl	vPortEnterCritical
 535              	.LVL49:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 536              		.loc 1 3494 0
 537 0008 0D4C     		ldr	r4, .L51
 538 000a D4F8F431 		ldr	r3, [r4, #500]
 539 000e DD68     		ldr	r5, [r3, #12]
 540              	.LVL50:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 541              		.loc 1 3495 0
 542 0010 281D     		adds	r0, r5, #4
 543 0012 FFF7FEFF 		bl	uxListRemove
 544              	.LVL51:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 545              		.loc 1 3496 0
 546 0016 D4F80032 		ldr	r3, [r4, #512]
 547 001a 013B     		subs	r3, r3, #1
 548 001c C4F80032 		str	r3, [r4, #512]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 549              		.loc 1 3497 0
 550 0020 D4F81432 		ldr	r3, [r4, #532]
 551 0024 013B     		subs	r3, r3, #1
 552 0026 C4F81432 		str	r3, [r4, #532]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 553              		.loc 1 3499 0
 554 002a FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL52:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 556              		.loc 1 3501 0
 557 002e 2846     		mov	r0, r5
 558 0030 FFF7FEFF 		bl	prvDeleteTCB
 559              	.LVL53:
 560              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 561              		.loc 1 3490 0
 562 0034 024B     		ldr	r3, .L51
 563 0036 D3F81432 		ldr	r3, [r3, #532]
 564 003a 002B     		cmp	r3, #0
 565 003c E2D1     		bne	.L49
 566              	.LBE96:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 3505 0
 568 003e 38BD     		pop	{r3, r4, r5, pc}
 569              	.L52:
 570              		.align	2
 571              	.L51:
 572 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 81


 573              		.cfi_endproc
 574              	.LFE548:
 575              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 576              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 577              		.align	2
 578              		.thumb
 579              		.thumb_func
 580              		.type	prvAddCurrentTaskToDelayedList, %function
 581              	prvAddCurrentTaskToDelayedList:
 582              	.LFB560:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 82


3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 83


3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 84


3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 85


3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 86


4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 87


4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 88


4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 89


4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 90


4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 91


4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 92


4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 93


4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 94


4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 95


4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 96


4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 97


4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 98


4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 99


4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 100


4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 101


4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 583              		.loc 1 4924 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL54:
 588 0000 70B5     		push	{r4, r5, r6, lr}
 589              		.cfi_def_cfa_offset 16
 590              		.cfi_offset 4, -16
 591              		.cfi_offset 5, -12
 592              		.cfi_offset 6, -8
 593              		.cfi_offset 14, -4
 594 0002 0446     		mov	r4, r0
 595 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 596              		.loc 1 4926 0
 597 0006 174B     		ldr	r3, .L58
 598 0008 D3F81852 		ldr	r5, [r3, #536]
 599              	.LVL55:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 102


4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 600              		.loc 1 4939 0
 601 000c D3F80402 		ldr	r0, [r3, #516]
 602              	.LVL56:
 603 0010 0430     		adds	r0, r0, #4
 604 0012 FFF7FEFF 		bl	uxListRemove
 605              	.LVL57:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 606              		.loc 1 4952 0
 607 0016 B4F1FF3F 		cmp	r4, #-1
 608 001a 07D1     		bne	.L54
 609              		.loc 1 4952 0 is_stmt 0 discriminator 1
 610 001c 36B1     		cbz	r6, .L54
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 611              		.loc 1 4957 0 is_stmt 1
 612 001e 1148     		ldr	r0, .L58
 613 0020 D0F80412 		ldr	r1, [r0, #516]
 614 0024 0431     		adds	r1, r1, #4
 615 0026 FFF7FEFF 		bl	vListInsertEnd
 616              	.LVL58:
 617 002a 70BD     		pop	{r4, r5, r6, pc}
 618              	.LVL59:
 619              	.L54:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 620              		.loc 1 4964 0
 621 002c 2C44     		add	r4, r4, r5
 622              	.LVL60:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 103


4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 623              		.loc 1 4967 0
 624 002e 0D4B     		ldr	r3, .L58
 625 0030 D3F80432 		ldr	r3, [r3, #516]
 626 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 627              		.loc 1 4969 0
 628 0036 A542     		cmp	r5, r4
 629 0038 08D9     		bls	.L56
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 630              		.loc 1 4973 0
 631 003a 0A4B     		ldr	r3, .L58
 632 003c D3F8FC01 		ldr	r0, [r3, #508]
 633 0040 D3F80412 		ldr	r1, [r3, #516]
 634 0044 0431     		adds	r1, r1, #4
 635 0046 FFF7FEFF 		bl	vListInsert
 636              	.LVL61:
 637 004a 70BD     		pop	{r4, r5, r6, pc}
 638              	.LVL62:
 639              	.L56:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 640              		.loc 1 4979 0
 641 004c 054D     		ldr	r5, .L58
 642              	.LVL63:
 643 004e A86A     		ldr	r0, [r5, #40]
 644 0050 D5F80412 		ldr	r1, [r5, #516]
 645 0054 0431     		adds	r1, r1, #4
 646 0056 FFF7FEFF 		bl	vListInsert
 647              	.LVL64:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 648              		.loc 1 4984 0
 649 005a EB6A     		ldr	r3, [r5, #44]
 650 005c 9C42     		cmp	r4, r3
 651 005e 00D2     		bcs	.L53
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 652              		.loc 1 4986 0
 653 0060 EC62     		str	r4, [r5, #44]
 654              	.L53:
 655 0062 70BD     		pop	{r4, r5, r6, pc}
 656              	.LVL65:
 657              	.L59:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 104


 658              		.align	2
 659              	.L58:
 660 0064 00000000 		.word	.LANCHOR0
 661              		.cfi_endproc
 662              	.LFE560:
 663              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 664              		.section	.text.prvIdleTask,"ax",%progbits
 665              		.align	2
 666              		.thumb
 667              		.thumb_func
 668              		.type	prvIdleTask, %function
 669              	prvIdleTask:
 670              	.LFB544:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 671              		.loc 1 3236 0
 672              		.cfi_startproc
 673              		@ Volatile: function does not return.
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              	.LVL66:
 677 0000 08B5     		push	{r3, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 3, -8
 680              		.cfi_offset 14, -4
 681              	.LVL67:
 682              	.L62:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683              		.loc 1 3252 0
 684 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 685              	.LVL68:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 686              		.loc 1 3275 0
 687 0006 074B     		ldr	r3, .L64
 688 0008 1B6B     		ldr	r3, [r3, #48]
 689 000a 012B     		cmp	r3, #1
 690 000c 07D9     		bls	.L61
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 691              		.loc 1 3277 0
 692 000e 4FF08052 		mov	r2, #268435456
 693 0012 054B     		ldr	r3, .L64+4
 694 0014 1A60     		str	r2, [r3]
 695              		.syntax unified
 696              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 697 0016 BFF34F8F 		dsb
 698              	@ 0 "" 2
 699              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 700 001a BFF36F8F 		isb
 701              	@ 0 "" 2
 702              		.thumb
 703              		.syntax unified
 704              	.L61:
 705              	.LBB97:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 706              		.loc 1 3295 0
 707 001e FFF7FEFF 		bl	vApplicationIdleHook
 708              	.LVL69:
 709              	.LBE97:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 105


3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 710              		.loc 1 3348 0
 711 0022 EEE7     		b	.L62
 712              	.L65:
 713              		.align	2
 714              	.L64:
 715 0024 00000000 		.word	.LANCHOR0
 716 0028 04ED00E0 		.word	-536810236
 717              		.cfi_endproc
 718              	.LFE544:
 719              		.size	prvIdleTask, .-prvIdleTask
 720              		.section	.text.xTaskCreate,"ax",%progbits
 721              		.align	2
 722              		.global	xTaskCreate
 723              		.thumb
 724              		.thumb_func
 725              		.type	xTaskCreate, %function
 726              	xTaskCreate:
 727              	.LFB512:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 728              		.loc 1 738 0
 729              		.cfi_startproc
 730              		@ args = 8, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              	.LVL70:
 733 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 734              		.cfi_def_cfa_offset 28
 735              		.cfi_offset 4, -28
 736              		.cfi_offset 5, -24
 737              		.cfi_offset 6, -20
 738              		.cfi_offset 7, -16
 739              		.cfi_offset 8, -12
 740              		.cfi_offset 9, -8
 741              		.cfi_offset 14, -4
 742 0004 85B0     		sub	sp, sp, #20
 743              		.cfi_def_cfa_offset 48
 744 0006 0646     		mov	r6, r0
 745 0008 0F46     		mov	r7, r1
 746 000a 1546     		mov	r5, r2
 747 000c 9846     		mov	r8, r3
 748              	.LBB98:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 749              		.loc 1 772 0
 750 000e 9000     		lsls	r0, r2, #2
 751              	.LVL71:
 752 0010 FFF7FEFF 		bl	pvPortMalloc
 753              	.LVL72:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754              		.loc 1 774 0
 755 0014 60B1     		cbz	r0, .L70
 756 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 757              		.loc 1 777 0
 758 0018 6020     		movs	r0, #96
 759              	.LVL73:
 760 001a FFF7FEFF 		bl	pvPortMalloc
 761              	.LVL74:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 106


 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 762              		.loc 1 779 0
 763 001e 0446     		mov	r4, r0
 764 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765              		.loc 1 782 0
 766 0022 C0F83090 		str	r9, [r0, #48]
 767 0026 04E0     		b	.L67
 768              	.L68:
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 769              		.loc 1 788 0
 770 0028 4846     		mov	r0, r9
 771              	.LVL75:
 772 002a FFF7FEFF 		bl	vPortFree
 773              	.LVL76:
 774 002e 00E0     		b	.L67
 775              	.LVL77:
 776              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 777              		.loc 1 793 0
 778 0030 0024     		movs	r4, #0
 779              	.LVL78:
 780              	.L67:
 781              	.LBE98:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 782              		.loc 1 798 0
 783 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 784              		.loc 1 808 0
 785 0034 0023     		movs	r3, #0
 786 0036 0393     		str	r3, [sp, #12]
 787 0038 0294     		str	r4, [sp, #8]
 788 003a 0D9B     		ldr	r3, [sp, #52]
 789 003c 0193     		str	r3, [sp, #4]
 790 003e 0C9B     		ldr	r3, [sp, #48]
 791 0040 0093     		str	r3, [sp]
 792 0042 4346     		mov	r3, r8
 793 0044 2A46     		mov	r2, r5
 794 0046 3946     		mov	r1, r7
 795 0048 3046     		mov	r0, r6
 796 004a FFF7FEFF 		bl	prvInitialiseNewTask
 797              	.LVL79:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 798              		.loc 1 809 0
 799 004e 2046     		mov	r0, r4
 800 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 801              	.LVL80:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 802              		.loc 1 810 0
 803 0054 0120     		movs	r0, #1
 804 0056 01E0     		b	.L69
 805              	.LVL81:
 806              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 807              		.loc 1 814 0
 808 0058 4FF0FF30 		mov	r0, #-1
 809              	.L69:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 107


 810              	.LVL82:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 811              		.loc 1 818 0
 812 005c 05B0     		add	sp, sp, #20
 813              		.cfi_def_cfa_offset 28
 814              		@ sp needed
 815 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 816              		.cfi_endproc
 817              	.LFE512:
 818              		.size	xTaskCreate, .-xTaskCreate
 819 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 820              		.align	2
 821              		.global	vTaskDelete
 822              		.thumb
 823              		.thumb_func
 824              		.type	vTaskDelete, %function
 825              	vTaskDelete:
 826              	.LFB515:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 827              		.loc 1 1113 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL83:
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
 838 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 839              		.loc 1 1116 0
 840 0004 FFF7FEFF 		bl	vPortEnterCritical
 841              	.LVL84:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 842              		.loc 1 1120 0
 843 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 844              		.loc 1 1120 0 is_stmt 0 discriminator 1
 845 000a 274B     		ldr	r3, .L82
 846 000c D3F80442 		ldr	r4, [r3, #516]
 847              	.LVL85:
 848              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 849              		.loc 1 1123 0 is_stmt 1 discriminator 4
 850 0010 261D     		adds	r6, r4, #4
 851 0012 3046     		mov	r0, r6
 852 0014 FFF7FEFF 		bl	uxListRemove
 853              	.LVL86:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 854              		.loc 1 1133 0 discriminator 4
 855 0018 A36A     		ldr	r3, [r4, #40]
 856 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 857              		.loc 1 1135 0
 858 001c 04F11800 		add	r0, r4, #24
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 108


 859 0020 FFF7FEFF 		bl	uxListRemove
 860              	.LVL87:
 861              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 862              		.loc 1 1146 0
 863 0024 204B     		ldr	r3, .L82
 864 0026 D3F80C22 		ldr	r2, [r3, #524]
 865 002a 0132     		adds	r2, r2, #1
 866 002c C3F80C22 		str	r2, [r3, #524]
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 867              		.loc 1 1148 0
 868 0030 D3F80432 		ldr	r3, [r3, #516]
 869 0034 9C42     		cmp	r4, r3
 870 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 871              		.loc 1 1155 0
 872 0038 1B4D     		ldr	r5, .L82
 873 003a 3146     		mov	r1, r6
 874 003c 05F5F470 		add	r0, r5, #488
 875 0040 FFF7FEFF 		bl	vListInsertEnd
 876              	.LVL88:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 877              		.loc 1 1160 0
 878 0044 D5F81432 		ldr	r3, [r5, #532]
 879 0048 0133     		adds	r3, r3, #1
 880 004a C5F81432 		str	r3, [r5, #532]
 881 004e 0AE0     		b	.L77
 882              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 883              		.loc 1 1171 0
 884 0050 154A     		ldr	r2, .L82
 885 0052 D2F80032 		ldr	r3, [r2, #512]
 886 0056 013B     		subs	r3, r3, #1
 887 0058 C2F80032 		str	r3, [r2, #512]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 888              		.loc 1 1172 0
 889 005c 2046     		mov	r0, r4
 890 005e FFF7FEFF 		bl	prvDeleteTCB
 891              	.LVL89:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 892              		.loc 1 1176 0
 893 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 894              	.LVL90:
 895              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 896              		.loc 1 1181 0
 897 0066 FFF7FEFF 		bl	vPortExitCritical
 898              	.LVL91:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 899              		.loc 1 1185 0
 900 006a 0F4B     		ldr	r3, .L82
 901 006c D3F80832 		ldr	r3, [r3, #520]
 902 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 903              		.loc 1 1187 0
 904 0072 0D4B     		ldr	r3, .L82
 905 0074 D3F80432 		ldr	r3, [r3, #516]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 109


 906 0078 9C42     		cmp	r4, r3
 907 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 908              		.loc 1 1189 0
 909 007c 0A4B     		ldr	r3, .L82
 910 007e D3F81C32 		ldr	r3, [r3, #540]
 911 0082 43B1     		cbz	r3, .L79
 912              	.LBB99:
 913              	.LBB100:
 914              		.loc 2 156 0
 915              		.syntax unified
 916              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 917 0084 4FF0BF03 			mov r3, #191												
 918 0088 83F31188 		msr basepri, r3											
 919 008c BFF36F8F 		isb														
 920 0090 BFF34F8F 		dsb														
 921              	
 922              	@ 0 "" 2
 923              	.LVL92:
 924              		.thumb
 925              		.syntax unified
 926              	.L80:
 927 0094 FEE7     		b	.L80
 928              	.L79:
 929              	.LBE100:
 930              	.LBE99:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 931              		.loc 1 1190 0
 932 0096 4FF08052 		mov	r2, #268435456
 933 009a 044B     		ldr	r3, .L82+4
 934 009c 1A60     		str	r2, [r3]
 935              		.syntax unified
 936              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 937 009e BFF34F8F 		dsb
 938              	@ 0 "" 2
 939              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 940 00a2 BFF36F8F 		isb
 941              	@ 0 "" 2
 942              		.thumb
 943              		.syntax unified
 944              	.L73:
 945 00a6 70BD     		pop	{r4, r5, r6, pc}
 946              	.LVL93:
 947              	.L83:
 948              		.align	2
 949              	.L82:
 950 00a8 00000000 		.word	.LANCHOR0
 951 00ac 04ED00E0 		.word	-536810236
 952              		.cfi_endproc
 953              	.LFE515:
 954              		.size	vTaskDelete, .-vTaskDelete
 955              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 956              		.align	2
 957              		.global	uxTaskPriorityGet
 958              		.thumb
 959              		.thumb_func
 960              		.type	uxTaskPriorityGet, %function
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 110


 961              	uxTaskPriorityGet:
 962              	.LFB518:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 963              		.loc 1 1405 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL94:
 968 0000 10B5     		push	{r4, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 4, -8
 971              		.cfi_offset 14, -4
 972 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 973              		.loc 1 1409 0
 974 0004 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL95:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 976              		.loc 1 1413 0
 977 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 978              		.loc 1 1413 0 is_stmt 0 discriminator 1
 979 000a 044B     		ldr	r3, .L87
 980 000c D3F80442 		ldr	r4, [r3, #516]
 981              	.LVL96:
 982              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 983              		.loc 1 1414 0 is_stmt 1 discriminator 4
 984 0010 E46A     		ldr	r4, [r4, #44]
 985              	.LVL97:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 986              		.loc 1 1416 0 discriminator 4
 987 0012 FFF7FEFF 		bl	vPortExitCritical
 988              	.LVL98:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 989              		.loc 1 1419 0 discriminator 4
 990 0016 2046     		mov	r0, r4
 991 0018 10BD     		pop	{r4, pc}
 992              	.LVL99:
 993              	.L88:
 994 001a 00BF     		.align	2
 995              	.L87:
 996 001c 00000000 		.word	.LANCHOR0
 997              		.cfi_endproc
 998              	.LFE518:
 999              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 1000              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1001              		.align	2
 1002              		.global	uxTaskPriorityGetFromISR
 1003              		.thumb
 1004              		.thumb_func
 1005              		.type	uxTaskPriorityGetFromISR, %function
 1006              	uxTaskPriorityGetFromISR:
 1007              	.LFB519:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1008              		.loc 1 1427 0
 1009              		.cfi_startproc
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 111


 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              	.LVL100:
 1013 0000 10B5     		push	{r4, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 4, -8
 1016              		.cfi_offset 14, -4
 1017 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1018              		.loc 1 1447 0
 1019 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1020              	.LVL101:
 1021              	.LBB101:
 1022              	.LBB102:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1023              		.loc 2 172 0
 1024              		.syntax unified
 1025              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1026 0008 EFF31183 			mrs r3, basepri											
 1027 000c 4FF0BF02 		mov r2, #191												
 1028 0010 82F31188 		msr basepri, r2											
 1029 0014 BFF36F8F 		isb														
 1030 0018 BFF34F8F 		dsb														
 1031              	
 1032              	@ 0 "" 2
 1033              		.thumb
 1034              		.syntax unified
 1035              	.LBE102:
 1036              	.LBE101:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1037              		.loc 1 1453 0
 1038 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1039              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1040 001e 034A     		ldr	r2, .L92
 1041 0020 D2F80442 		ldr	r4, [r2, #516]
 1042              	.LVL102:
 1043              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1044              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1045 0024 E06A     		ldr	r0, [r4, #44]
 1046              	.LVL103:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 112


 1047              	.LBB103:
 1048              	.LBB104:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1049              		.loc 2 190 0 discriminator 4
 1050              		.syntax unified
 1051              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1052 0026 83F31188 			msr basepri, r3	
 1053              	@ 0 "" 2
 1054              	.LVL104:
 1055              		.thumb
 1056              		.syntax unified
 1057              	.LBE104:
 1058              	.LBE103:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1059              		.loc 1 1459 0 discriminator 4
 1060 002a 10BD     		pop	{r4, pc}
 1061              	.LVL105:
 1062              	.L93:
 1063              		.align	2
 1064              	.L92:
 1065 002c 00000000 		.word	.LANCHOR0
 1066              		.cfi_endproc
 1067              	.LFE519:
 1068              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1069              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1070              		.align	2
 1071              		.global	vTaskPrioritySet
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	vTaskPrioritySet, %function
 1075              	vTaskPrioritySet:
 1076              	.LFB520:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1077              		.loc 1 1467 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL106:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1082              		.loc 1 1472 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 113


 1083 0000 1329     		cmp	r1, #19
 1084 0002 08D9     		bls	.L95
 1085              	.LBB105:
 1086              	.LBB106:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1087              		.loc 2 156 0
 1088              		.syntax unified
 1089              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1090 0004 4FF0BF03 			mov r3, #191												
 1091 0008 83F31188 		msr basepri, r3											
 1092 000c BFF36F8F 		isb														
 1093 0010 BFF34F8F 		dsb														
 1094              	
 1095              	@ 0 "" 2
 1096              	.LVL107:
 1097              		.thumb
 1098              		.syntax unified
 1099              	.L96:
 1100 0014 FEE7     		b	.L96
 1101              	.L95:
 1102              	.LBE106:
 1103              	.LBE105:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1104              		.loc 1 1467 0
 1105 0016 70B5     		push	{r4, r5, r6, lr}
 1106              		.cfi_def_cfa_offset 16
 1107              		.cfi_offset 4, -16
 1108              		.cfi_offset 5, -12
 1109              		.cfi_offset 6, -8
 1110              		.cfi_offset 14, -4
 1111 0018 0446     		mov	r4, r0
 1112 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1113              		.loc 1 1475 0
 1114 001c 1329     		cmp	r1, #19
 1115 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1116              		.loc 1 1477 0
 1117 0020 1325     		movs	r5, #19
 1118              	.L97:
 1119              	.LVL108:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1120              		.loc 1 1484 0
 1121 0022 FFF7FEFF 		bl	vPortEnterCritical
 1122              	.LVL109:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1123              		.loc 1 1488 0
 1124 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1125              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1126 0028 294B     		ldr	r3, .L112
 1127 002a D3F80442 		ldr	r4, [r3, #516]
 1128              	.LVL110:
 1129              	.L98:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1130              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1131 002e E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 114


 1132              	.LVL111:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1133              		.loc 1 1502 0 discriminator 4
 1134 0030 9D42     		cmp	r5, r3
 1135 0032 4AD0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1136              		.loc 1 1506 0
 1137 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1138              		.loc 1 1508 0
 1139 0036 264A     		ldr	r2, .L112
 1140 0038 D2F80422 		ldr	r2, [r2, #516]
 1141 003c 9442     		cmp	r4, r2
 1142 003e 0ED0     		beq	.L107
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1143              		.loc 1 1513 0
 1144 0040 234A     		ldr	r2, .L112
 1145 0042 D2F80422 		ldr	r2, [r2, #516]
 1146 0046 D26A     		ldr	r2, [r2, #44]
 1147 0048 9542     		cmp	r5, r2
 1148 004a 0AD2     		bcs	.L108
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1149              		.loc 1 1470 0
 1150 004c 0026     		movs	r6, #0
 1151 004e 0BE0     		b	.L101
 1152              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1153              		.loc 1 1529 0
 1154 0050 1F4A     		ldr	r2, .L112
 1155 0052 D2F80422 		ldr	r2, [r2, #516]
 1156 0056 9442     		cmp	r4, r2
 1157 0058 05D0     		beq	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1158              		.loc 1 1470 0
 1159 005a 0026     		movs	r6, #0
 1160 005c 04E0     		b	.L101
 1161              	.L107:
 1162 005e 0026     		movs	r6, #0
 1163 0060 02E0     		b	.L101
 1164              	.L108:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1165              		.loc 1 1515 0
 1166 0062 0126     		movs	r6, #1
 1167 0064 00E0     		b	.L101
 1168              	.L109:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1169              		.loc 1 1534 0
 1170 0066 0126     		movs	r6, #1
 1171              	.L101:
 1172              	.LVL112:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1173              		.loc 1 1566 0
 1174 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1175              		.loc 1 1572 0
 1176 006a A269     		ldr	r2, [r4, #24]
 1177 006c 002A     		cmp	r2, #0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 115


 1178 006e 02DB     		blt	.L102
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1179              		.loc 1 1574 0
 1180 0070 C5F11405 		rsb	r5, r5, #20
 1181              	.LVL113:
 1182 0074 A561     		str	r5, [r4, #24]
 1183              	.L102:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1184              		.loc 1 1585 0
 1185 0076 6169     		ldr	r1, [r4, #20]
 1186 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1187              	.LVL114:
 1188 007c 9A00     		lsls	r2, r3, #2
 1189 007e 154B     		ldr	r3, .L112+4
 1190 0080 1A44     		add	r2, r2, r3
 1191 0082 9142     		cmp	r1, r2
 1192 0084 01D1     		bne	.L110
 1193 0086 0123     		movs	r3, #1
 1194 0088 00E0     		b	.L103
 1195              	.L110:
 1196 008a 0023     		movs	r3, #0
 1197              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1198              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1199 008c A3B1     		cbz	r3, .L104
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1200              		.loc 1 1590 0 is_stmt 1
 1201 008e 251D     		adds	r5, r4, #4
 1202 0090 2846     		mov	r0, r5
 1203 0092 FFF7FEFF 		bl	uxListRemove
 1204              	.LVL115:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1205              		.loc 1 1601 0
 1206 0096 E36A     		ldr	r3, [r4, #44]
 1207 0098 0D4A     		ldr	r2, .L112
 1208 009a D2F81022 		ldr	r2, [r2, #528]
 1209 009e 9342     		cmp	r3, r2
 1210 00a0 02D9     		bls	.L105
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1211              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1212 00a2 0B4A     		ldr	r2, .L112
 1213 00a4 C2F81032 		str	r3, [r2, #528]
 1214              	.L105:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1215              		.loc 1 1601 0 discriminator 3
 1216 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1217 00ac 9A00     		lsls	r2, r3, #2
 1218 00ae 2946     		mov	r1, r5
 1219 00b0 0848     		ldr	r0, .L112+4
 1220 00b2 1044     		add	r0, r0, r2
 1221 00b4 FFF7FEFF 		bl	vListInsertEnd
 1222              	.LVL116:
 1223              	.L104:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1224              		.loc 1 1608 0 is_stmt 1
 1225 00b8 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 116


 1226              		.loc 1 1610 0
 1227 00ba 4FF08052 		mov	r2, #268435456
 1228 00be 064B     		ldr	r3, .L112+8
 1229 00c0 1A60     		str	r2, [r3]
 1230              		.syntax unified
 1231              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1232 00c2 BFF34F8F 		dsb
 1233              	@ 0 "" 2
 1234              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1235 00c6 BFF36F8F 		isb
 1236              	@ 0 "" 2
 1237              	.LVL117:
 1238              		.thumb
 1239              		.syntax unified
 1240              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1241              		.loc 1 1622 0
 1242 00ca FFF7FEFF 		bl	vPortExitCritical
 1243              	.LVL118:
 1244 00ce 70BD     		pop	{r4, r5, r6, pc}
 1245              	.LVL119:
 1246              	.L113:
 1247              		.align	2
 1248              	.L112:
 1249 00d0 00000000 		.word	.LANCHOR0
 1250 00d4 30000000 		.word	.LANCHOR0+48
 1251 00d8 04ED00E0 		.word	-536810236
 1252              		.cfi_endproc
 1253              	.LFE520:
 1254              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1255              		.section	.text.vTaskResume,"ax",%progbits
 1256              		.align	2
 1257              		.global	vTaskResume
 1258              		.thumb
 1259              		.thumb_func
 1260              		.type	vTaskResume, %function
 1261              	vTaskResume:
 1262              	.LFB523:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1263              		.loc 1 1778 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL120:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1268              		.loc 1 1782 0
 1269 0000 40B9     		cbnz	r0, .L115
 1270              	.LBB107:
 1271              	.LBB108:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1272              		.loc 2 156 0
 1273              		.syntax unified
 1274              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1275 0002 4FF0BF03 			mov r3, #191												
 1276 0006 83F31188 		msr basepri, r3											
 1277 000a BFF36F8F 		isb														
 1278 000e BFF34F8F 		dsb														
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 117


 1279              	
 1280              	@ 0 "" 2
 1281              	.LVL121:
 1282              		.thumb
 1283              		.syntax unified
 1284              	.L116:
 1285 0012 FEE7     		b	.L116
 1286              	.L115:
 1287              	.LBE108:
 1288              	.LBE107:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1289              		.loc 1 1778 0
 1290 0014 70B5     		push	{r4, r5, r6, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 6, -8
 1295              		.cfi_offset 14, -4
 1296 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1297              		.loc 1 1786 0
 1298 0018 88B3     		cbz	r0, .L114
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1299              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1300 001a 194B     		ldr	r3, .L121
 1301 001c D3F80432 		ldr	r3, [r3, #516]
 1302 0020 9842     		cmp	r0, r3
 1303 0022 2CD0     		beq	.L114
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1304              		.loc 1 1788 0 is_stmt 1
 1305 0024 FFF7FEFF 		bl	vPortEnterCritical
 1306              	.LVL122:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1307              		.loc 1 1790 0
 1308 0028 2046     		mov	r0, r4
 1309 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1310              	.LVL123:
 1311 002e 20B3     		cbz	r0, .L118
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1312              		.loc 1 1796 0
 1313 0030 261D     		adds	r6, r4, #4
 1314 0032 3046     		mov	r0, r6
 1315 0034 FFF7FEFF 		bl	uxListRemove
 1316              	.LVL124:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1317              		.loc 1 1797 0
 1318 0038 E36A     		ldr	r3, [r4, #44]
 1319 003a 114A     		ldr	r2, .L121
 1320 003c D2F81022 		ldr	r2, [r2, #528]
 1321 0040 9342     		cmp	r3, r2
 1322 0042 02D9     		bls	.L119
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1323              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1324 0044 0E4A     		ldr	r2, .L121
 1325 0046 C2F81032 		str	r3, [r2, #528]
 1326              	.L119:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 118


 1327              		.loc 1 1797 0 discriminator 3
 1328 004a 0D4D     		ldr	r5, .L121
 1329 004c 05F13000 		add	r0, r5, #48
 1330 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1331 0054 9A00     		lsls	r2, r3, #2
 1332 0056 3146     		mov	r1, r6
 1333 0058 1044     		add	r0, r0, r2
 1334 005a FFF7FEFF 		bl	vListInsertEnd
 1335              	.LVL125:
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1336              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1337 005e E26A     		ldr	r2, [r4, #44]
 1338 0060 D5F80432 		ldr	r3, [r5, #516]
 1339 0064 DB6A     		ldr	r3, [r3, #44]
 1340 0066 9A42     		cmp	r2, r3
 1341 0068 07D3     		bcc	.L118
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1342              		.loc 1 1805 0
 1343 006a 4FF08052 		mov	r2, #268435456
 1344 006e 054B     		ldr	r3, .L121+4
 1345 0070 1A60     		str	r2, [r3]
 1346              		.syntax unified
 1347              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1348 0072 BFF34F8F 		dsb
 1349              	@ 0 "" 2
 1350              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1351 0076 BFF36F8F 		isb
 1352              	@ 0 "" 2
 1353              		.thumb
 1354              		.syntax unified
 1355              	.L118:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1356              		.loc 1 1817 0
 1357 007a FFF7FEFF 		bl	vPortExitCritical
 1358              	.LVL126:
 1359              	.L114:
 1360 007e 70BD     		pop	{r4, r5, r6, pc}
 1361              	.LVL127:
 1362              	.L122:
 1363              		.align	2
 1364              	.L121:
 1365 0080 00000000 		.word	.LANCHOR0
 1366 0084 04ED00E0 		.word	-536810236
 1367              		.cfi_endproc
 1368              	.LFE523:
 1369              		.size	vTaskResume, .-vTaskResume
 1370              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1371              		.align	2
 1372              		.global	xTaskResumeFromISR
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	xTaskResumeFromISR, %function
 1376              	xTaskResumeFromISR:
 1377              	.LFB524:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1378              		.loc 1 1832 0
 1379              		.cfi_startproc
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 119


 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382              	.LVL128:
 1383 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1384              		.cfi_def_cfa_offset 24
 1385              		.cfi_offset 3, -24
 1386              		.cfi_offset 4, -20
 1387              		.cfi_offset 5, -16
 1388              		.cfi_offset 6, -12
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391              	.LVL129:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1392              		.loc 1 1837 0
 1393 0002 40B9     		cbnz	r0, .L124
 1394              	.LBB109:
 1395              	.LBB110:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1396              		.loc 2 156 0
 1397              		.syntax unified
 1398              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1399 0004 4FF0BF03 			mov r3, #191												
 1400 0008 83F31188 		msr basepri, r3											
 1401 000c BFF36F8F 		isb														
 1402 0010 BFF34F8F 		dsb														
 1403              	
 1404              	@ 0 "" 2
 1405              	.LVL130:
 1406              		.thumb
 1407              		.syntax unified
 1408              	.L125:
 1409 0014 FEE7     		b	.L125
 1410              	.L124:
 1411 0016 0446     		mov	r4, r0
 1412              	.LBE110:
 1413              	.LBE109:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1414              		.loc 1 1855 0
 1415 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1416              	.LVL131:
 1417              	.LBB111:
 1418              	.LBB112:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1419              		.loc 2 172 0
 1420              		.syntax unified
 1421              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1422 001c EFF31187 			mrs r7, basepri											
 1423 0020 4FF0BF03 		mov r3, #191												
 1424 0024 83F31188 		msr basepri, r3											
 1425 0028 BFF36F8F 		isb														
 1426 002c BFF34F8F 		dsb														
 1427              	
 1428              	@ 0 "" 2
 1429              		.thumb
 1430              		.syntax unified
 1431              	.LBE112:
 1432              	.LBE111:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 120


1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1433              		.loc 1 1859 0
 1434 0030 2046     		mov	r0, r4
 1435 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1436              	.LVL132:
 1437 0036 50B3     		cbz	r0, .L130
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1438              		.loc 1 1864 0
 1439 0038 174B     		ldr	r3, .L133
 1440 003a D3F81C32 		ldr	r3, [r3, #540]
 1441 003e FBB9     		cbnz	r3, .L127
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1442              		.loc 1 1868 0
 1443 0040 E26A     		ldr	r2, [r4, #44]
 1444 0042 154B     		ldr	r3, .L133
 1445 0044 D3F80432 		ldr	r3, [r3, #516]
 1446 0048 DB6A     		ldr	r3, [r3, #44]
 1447 004a 9A42     		cmp	r2, r3
 1448 004c 01D2     		bcs	.L131
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1449              		.loc 1 1833 0
 1450 004e 0025     		movs	r5, #0
 1451 0050 00E0     		b	.L128
 1452              	.L131:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1453              		.loc 1 1870 0
 1454 0052 0125     		movs	r5, #1
 1455              	.L128:
 1456              	.LVL133:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1457              		.loc 1 1877 0
 1458 0054 261D     		adds	r6, r4, #4
 1459 0056 3046     		mov	r0, r6
 1460 0058 FFF7FEFF 		bl	uxListRemove
 1461              	.LVL134:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1462              		.loc 1 1878 0
 1463 005c E36A     		ldr	r3, [r4, #44]
 1464 005e 0E4A     		ldr	r2, .L133
 1465 0060 D2F81022 		ldr	r2, [r2, #528]
 1466 0064 9342     		cmp	r3, r2
 1467 0066 02D9     		bls	.L129
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1468              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1469 0068 0B4A     		ldr	r2, .L133
 1470 006a C2F81032 		str	r3, [r2, #528]
 1471              	.L129:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1472              		.loc 1 1878 0 discriminator 3
 1473 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1474 0072 9A00     		lsls	r2, r3, #2
 1475 0074 3146     		mov	r1, r6
 1476 0076 0948     		ldr	r0, .L133+4
 1477 0078 1044     		add	r0, r0, r2
 1478 007a FFF7FEFF 		bl	vListInsertEnd
 1479              	.LVL135:
 1480 007e 07E0     		b	.L126
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 121


 1481              	.LVL136:
 1482              	.L127:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1483              		.loc 1 1885 0 is_stmt 1
 1484 0080 04F11801 		add	r1, r4, #24
 1485 0084 0648     		ldr	r0, .L133+8
 1486 0086 FFF7FEFF 		bl	vListInsertEnd
 1487              	.LVL137:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1488              		.loc 1 1833 0
 1489 008a 0025     		movs	r5, #0
 1490 008c 00E0     		b	.L126
 1491              	.L130:
 1492 008e 0025     		movs	r5, #0
 1493              	.LVL138:
 1494              	.L126:
 1495              	.LBB113:
 1496              	.LBB114:
 1497              		.loc 2 190 0
 1498              		.syntax unified
 1499              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1500 0090 87F31188 			msr basepri, r7	
 1501              	@ 0 "" 2
 1502              	.LVL139:
 1503              		.thumb
 1504              		.syntax unified
 1505              	.LBE114:
 1506              	.LBE113:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1507              		.loc 1 1896 0
 1508 0094 2846     		mov	r0, r5
 1509 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1510              	.LVL140:
 1511              	.L134:
 1512              		.align	2
 1513              	.L133:
 1514 0098 00000000 		.word	.LANCHOR0
 1515 009c 30000000 		.word	.LANCHOR0+48
 1516 00a0 14000000 		.word	.LANCHOR0+20
 1517              		.cfi_endproc
 1518              	.LFE524:
 1519              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1520              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1521              		.align	2
 1522              		.global	vTaskStartScheduler
 1523              		.thumb
 1524              		.thumb_func
 1525              		.type	vTaskStartScheduler, %function
 1526              	vTaskStartScheduler:
 1527              	.LFB525:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1528              		.loc 1 1902 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532 0000 00B5     		push	{lr}
 1533              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 122


 1534              		.cfi_offset 14, -4
 1535 0002 83B0     		sub	sp, sp, #12
 1536              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1537              		.loc 1 1935 0
 1538 0004 194B     		ldr	r3, .L141
 1539 0006 0193     		str	r3, [sp, #4]
 1540 0008 0023     		movs	r3, #0
 1541 000a 0093     		str	r3, [sp]
 1542 000c 8022     		movs	r2, #128
 1543 000e 1849     		ldr	r1, .L141+4
 1544 0010 1848     		ldr	r0, .L141+8
 1545 0012 FFF7FEFF 		bl	xTaskCreate
 1546              	.LVL141:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1547              		.loc 1 1946 0
 1548 0016 0128     		cmp	r0, #1
 1549 0018 01D1     		bne	.L136
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1550              		.loc 1 1948 0
 1551 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1552              	.LVL142:
 1553              	.L136:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1554              		.loc 1 1957 0
 1555 001e 0128     		cmp	r0, #1
 1556 0020 14D1     		bne	.L137
 1557              	.LBB115:
 1558              	.LBB116:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1559              		.loc 2 156 0
 1560              		.syntax unified
 1561              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1562 0022 4FF0BF03 			mov r3, #191												
 1563 0026 83F31188 		msr basepri, r3											
 1564 002a BFF36F8F 		isb														
 1565 002e BFF34F8F 		dsb														
 1566              	
 1567              	@ 0 "" 2
 1568              		.thumb
 1569              		.syntax unified
 1570              	.LBE116:
 1571              	.LBE115:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1572              		.loc 1 1983 0
 1573 0032 114B     		ldr	r3, .L141+12
 1574 0034 4FF0FF32 		mov	r2, #-1
 1575 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1576              		.loc 1 1984 0
 1577 003a 0122     		movs	r2, #1
 1578 003c C3F80822 		str	r2, [r3, #520]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1579              		.loc 1 1985 0
 1580 0040 0022     		movs	r2, #0
 1581 0042 C3F81822 		str	r2, [r3, #536]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 123


 1582              		.loc 1 1997 0
 1583 0046 FFF7FEFF 		bl	xPortStartScheduler
 1584              	.LVL143:
 1585 004a 0BE0     		b	.L135
 1586              	.LVL144:
 1587              	.L137:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1588              		.loc 1 2012 0
 1589 004c B0F1FF3F 		cmp	r0, #-1
 1590 0050 08D1     		bne	.L135
 1591              	.LBB117:
 1592              	.LBB118:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1593              		.loc 2 156 0
 1594              		.syntax unified
 1595              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1596 0052 4FF0BF03 			mov r3, #191												
 1597 0056 83F31188 		msr basepri, r3											
 1598 005a BFF36F8F 		isb														
 1599 005e BFF34F8F 		dsb														
 1600              	
 1601              	@ 0 "" 2
 1602              	.LVL145:
 1603              		.thumb
 1604              		.syntax unified
 1605              	.L139:
 1606 0062 FEE7     		b	.L139
 1607              	.LVL146:
 1608              	.L135:
 1609              	.LBE118:
 1610              	.LBE117:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1611              		.loc 1 2018 0
 1612 0064 03B0     		add	sp, sp, #12
 1613              		.cfi_def_cfa_offset 4
 1614              		@ sp needed
 1615 0066 5DF804FB 		ldr	pc, [sp], #4
 1616              	.L142:
 1617 006a 00BF     		.align	2
 1618              	.L141:
 1619 006c 20020000 		.word	.LANCHOR0+544
 1620 0070 00000000 		.word	.LC0
 1621 0074 00000000 		.word	prvIdleTask
 1622 0078 00000000 		.word	.LANCHOR0
 1623              		.cfi_endproc
 1624              	.LFE525:
 1625              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1626              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1627              		.align	2
 1628              		.global	vTaskEndScheduler
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	vTaskEndScheduler, %function
 1632              	vTaskEndScheduler:
 1633              	.LFB526:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1634              		.loc 1 2022 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 124


 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638 0000 08B5     		push	{r3, lr}
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 3, -8
 1641              		.cfi_offset 14, -4
 1642              	.LBB119:
 1643              	.LBB120:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1644              		.loc 2 156 0
 1645              		.syntax unified
 1646              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1647 0002 4FF0BF03 			mov r3, #191												
 1648 0006 83F31188 		msr basepri, r3											
 1649 000a BFF36F8F 		isb														
 1650 000e BFF34F8F 		dsb														
 1651              	
 1652              	@ 0 "" 2
 1653              		.thumb
 1654              		.syntax unified
 1655              	.LBE120:
 1656              	.LBE119:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1657              		.loc 1 2027 0
 1658 0012 0022     		movs	r2, #0
 1659 0014 024B     		ldr	r3, .L145
 1660 0016 C3F80822 		str	r2, [r3, #520]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1661              		.loc 1 2028 0
 1662 001a FFF7FEFF 		bl	vPortEndScheduler
 1663              	.LVL147:
 1664 001e 08BD     		pop	{r3, pc}
 1665              	.L146:
 1666              		.align	2
 1667              	.L145:
 1668 0020 00000000 		.word	.LANCHOR0
 1669              		.cfi_endproc
 1670              	.LFE526:
 1671              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1672              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1673              		.align	2
 1674              		.global	vTaskSuspendAll
 1675              		.thumb
 1676              		.thumb_func
 1677              		.type	vTaskSuspendAll, %function
 1678              	vTaskSuspendAll:
 1679              	.LFB527:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1680              		.loc 1 2033 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1685              		.loc 1 2038 0
 1686 0000 034A     		ldr	r2, .L148
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 125


 1687 0002 D2F81C32 		ldr	r3, [r2, #540]
 1688 0006 0133     		adds	r3, r3, #1
 1689 0008 C2F81C32 		str	r3, [r2, #540]
 1690 000c 7047     		bx	lr
 1691              	.L149:
 1692 000e 00BF     		.align	2
 1693              	.L148:
 1694 0010 00000000 		.word	.LANCHOR0
 1695              		.cfi_endproc
 1696              	.LFE527:
 1697              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1698              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1699              		.align	2
 1700              		.global	xTaskGetTickCount
 1701              		.thumb
 1702              		.thumb_func
 1703              		.type	xTaskGetTickCount, %function
 1704              	xTaskGetTickCount:
 1705              	.LFB529:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1706              		.loc 1 2216 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1711              		.loc 1 2222 0
 1712 0000 014B     		ldr	r3, .L151
 1713 0002 D3F81802 		ldr	r0, [r3, #536]
 1714              	.LVL148:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1715              		.loc 1 2227 0
 1716 0006 7047     		bx	lr
 1717              	.L152:
 1718              		.align	2
 1719              	.L151:
 1720 0008 00000000 		.word	.LANCHOR0
 1721              		.cfi_endproc
 1722              	.LFE529:
 1723              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1724              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1725              		.align	2
 1726              		.global	xTaskGetTickCountFromISR
 1727              		.thumb
 1728              		.thumb_func
 1729              		.type	xTaskGetTickCountFromISR, %function
 1730              	xTaskGetTickCountFromISR:
 1731              	.LFB530:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1732              		.loc 1 2231 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736 0000 08B5     		push	{r3, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 3, -8
 1739              		.cfi_offset 14, -4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 126


2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1740              		.loc 1 2249 0
 1741 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1742              	.LVL149:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1743              		.loc 1 2253 0
 1744 0006 024B     		ldr	r3, .L155
 1745 0008 D3F81802 		ldr	r0, [r3, #536]
 1746              	.LVL150:
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1747              		.loc 1 2258 0
 1748 000c 08BD     		pop	{r3, pc}
 1749              	.L156:
 1750 000e 00BF     		.align	2
 1751              	.L155:
 1752 0010 00000000 		.word	.LANCHOR0
 1753              		.cfi_endproc
 1754              	.LFE530:
 1755              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1756              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1757              		.align	2
 1758              		.global	uxTaskGetNumberOfTasks
 1759              		.thumb
 1760              		.thumb_func
 1761              		.type	uxTaskGetNumberOfTasks, %function
 1762              	uxTaskGetNumberOfTasks:
 1763              	.LFB531:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1764              		.loc 1 2262 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1769              		.loc 1 2265 0
 1770 0000 014B     		ldr	r3, .L158
 1771 0002 D3F80002 		ldr	r0, [r3, #512]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1772              		.loc 1 2266 0
 1773 0006 7047     		bx	lr
 1774              	.L159:
 1775              		.align	2
 1776              	.L158:
 1777 0008 00000000 		.word	.LANCHOR0
 1778              		.cfi_endproc
 1779              	.LFE531:
 1780              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1781              		.section	.text.pcTaskGetName,"ax",%progbits
 1782              		.align	2
 1783              		.global	pcTaskGetName
 1784              		.thumb
 1785              		.thumb_func
 1786              		.type	pcTaskGetName, %function
 1787              	pcTaskGetName:
 1788              	.LFB532:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1789              		.loc 1 2270 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 127


 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 1794              	.LVL151:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1795              		.loc 1 2275 0
 1796 0000 0346     		mov	r3, r0
 1797 0002 10B9     		cbnz	r0, .L161
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1798              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1799 0004 074B     		ldr	r3, .L164
 1800 0006 D3F80432 		ldr	r3, [r3, #516]
 1801              	.LVL152:
 1802              	.L161:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1803              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1804 000a 43B9     		cbnz	r3, .L162
 1805              	.LBB121:
 1806              	.LBB122:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1807              		.loc 2 156 0
 1808              		.syntax unified
 1809              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1810 000c 4FF0BF03 			mov r3, #191												
 1811 0010 83F31188 		msr basepri, r3											
 1812 0014 BFF36F8F 		isb														
 1813 0018 BFF34F8F 		dsb														
 1814              	
 1815              	@ 0 "" 2
 1816              	.LVL153:
 1817              		.thumb
 1818              		.syntax unified
 1819              	.L163:
 1820 001c FEE7     		b	.L163
 1821              	.LVL154:
 1822              	.L162:
 1823              	.LBE122:
 1824              	.LBE121:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1825              		.loc 1 2278 0
 1826 001e 03F13400 		add	r0, r3, #52
 1827 0022 7047     		bx	lr
 1828              	.L165:
 1829              		.align	2
 1830              	.L164:
 1831 0024 00000000 		.word	.LANCHOR0
 1832              		.cfi_endproc
 1833              	.LFE532:
 1834              		.size	pcTaskGetName, .-pcTaskGetName
 1835              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1836              		.align	2
 1837              		.global	xTaskIncrementTick
 1838              		.thumb
 1839              		.thumb_func
 1840              		.type	xTaskIncrementTick, %function
 1841              	xTaskIncrementTick:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 128


 1842              	.LFB533:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1843              		.loc 1 2590 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1848              		.cfi_def_cfa_offset 24
 1849              		.cfi_offset 4, -24
 1850              		.cfi_offset 5, -20
 1851              		.cfi_offset 6, -16
 1852              		.cfi_offset 7, -12
 1853              		.cfi_offset 8, -8
 1854              		.cfi_offset 14, -4
 1855              	.LVL155:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1856              		.loc 1 2599 0
 1857 0004 3C4B     		ldr	r3, .L186
 1858 0006 D3F81C32 		ldr	r3, [r3, #540]
 1859 000a 002B     		cmp	r3, #0
 1860 000c 65D1     		bne	.L167
 1861              	.LBB123:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1862              		.loc 1 2603 0
 1863 000e 3A4B     		ldr	r3, .L186
 1864 0010 D3F81842 		ldr	r4, [r3, #536]
 1865 0014 0134     		adds	r4, r4, #1
 1866              	.LVL156:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1867              		.loc 1 2607 0
 1868 0016 C3F81842 		str	r4, [r3, #536]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1869              		.loc 1 2609 0
 1870 001a CCB9     		cbnz	r4, .L168
 1871              	.LBB124:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1872              		.loc 1 2611 0
 1873 001c 9B6A     		ldr	r3, [r3, #40]
 1874 001e 1B68     		ldr	r3, [r3]
 1875 0020 43B1     		cbz	r3, .L169
 1876              	.LBB125:
 1877              	.LBB126:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1878              		.loc 2 156 0
 1879              		.syntax unified
 1880              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1881 0022 4FF0BF03 			mov r3, #191												
 1882 0026 83F31188 		msr basepri, r3											
 1883 002a BFF36F8F 		isb														
 1884 002e BFF34F8F 		dsb														
 1885              	
 1886              	@ 0 "" 2
 1887              	.LVL157:
 1888              		.thumb
 1889              		.syntax unified
 1890              	.L170:
 1891 0032 FEE7     		b	.L170
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 129


 1892              	.L169:
 1893              	.LBE126:
 1894              	.LBE125:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1895              		.loc 1 2611 0 discriminator 2
 1896 0034 304B     		ldr	r3, .L186
 1897 0036 9A6A     		ldr	r2, [r3, #40]
 1898              	.LVL158:
 1899 0038 D3F8FC11 		ldr	r1, [r3, #508]
 1900 003c 9962     		str	r1, [r3, #40]
 1901 003e C3F8FC21 		str	r2, [r3, #508]
 1902 0042 D3F82422 		ldr	r2, [r3, #548]
 1903              	.LVL159:
 1904 0046 0132     		adds	r2, r2, #1
 1905 0048 C3F82422 		str	r2, [r3, #548]
 1906              	.LVL160:
 1907 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1908              	.LVL161:
 1909              	.L168:
 1910              	.LBE124:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1911              		.loc 1 2622 0
 1912 0050 294B     		ldr	r3, .L186
 1913 0052 DB6A     		ldr	r3, [r3, #44]
 1914 0054 9C42     		cmp	r4, r3
 1915 0056 03D2     		bcs	.L181
 1916              	.LBE123:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1917              		.loc 1 2593 0
 1918 0058 0026     		movs	r6, #0
 1919 005a 45E0     		b	.L172
 1920              	.LVL162:
 1921              	.L183:
 1922              	.LBB127:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1923              		.loc 1 2688 0
 1924 005c 0126     		movs	r6, #1
 1925              	.LVL163:
 1926 005e 00E0     		b	.L171
 1927              	.LVL164:
 1928              	.L181:
 1929 0060 0026     		movs	r6, #0
 1930              	.LVL165:
 1931              	.L171:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1932              		.loc 1 2626 0
 1933 0062 254B     		ldr	r3, .L186
 1934 0064 9B6A     		ldr	r3, [r3, #40]
 1935 0066 1B68     		ldr	r3, [r3]
 1936 0068 0BB9     		cbnz	r3, .L182
 1937 006a 0123     		movs	r3, #1
 1938 006c 00E0     		b	.L173
 1939              	.L182:
 1940 006e 0023     		movs	r3, #0
 1941              	.L173:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1942              		.loc 1 2626 0 is_stmt 0 discriminator 4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 130


 1943 0070 23B1     		cbz	r3, .L174
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1944              		.loc 1 2633 0 is_stmt 1
 1945 0072 4FF0FF32 		mov	r2, #-1
 1946 0076 204B     		ldr	r3, .L186
 1947 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1948              		.loc 1 2634 0
 1949 007a 35E0     		b	.L172
 1950              	.L174:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1951              		.loc 1 2642 0
 1952 007c 1E4B     		ldr	r3, .L186
 1953 007e 9B6A     		ldr	r3, [r3, #40]
 1954 0080 DB68     		ldr	r3, [r3, #12]
 1955 0082 DD68     		ldr	r5, [r3, #12]
 1956              	.LVL166:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1957              		.loc 1 2643 0
 1958 0084 6B68     		ldr	r3, [r5, #4]
 1959              	.LVL167:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1960              		.loc 1 2645 0
 1961 0086 9C42     		cmp	r4, r3
 1962 0088 02D2     		bcs	.L175
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1963              		.loc 1 2652 0
 1964 008a 1B4A     		ldr	r2, .L186
 1965 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1966              		.loc 1 2653 0
 1967 008e 2BE0     		b	.L172
 1968              	.L175:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1969              		.loc 1 2661 0
 1970 0090 05F10408 		add	r8, r5, #4
 1971 0094 4046     		mov	r0, r8
 1972 0096 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL168:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1974              		.loc 1 2665 0
 1975 009a AB6A     		ldr	r3, [r5, #40]
 1976 009c 1BB1     		cbz	r3, .L176
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1977              		.loc 1 2667 0
 1978 009e 05F11800 		add	r0, r5, #24
 1979 00a2 FFF7FEFF 		bl	uxListRemove
 1980              	.LVL169:
 1981              	.L176:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1982              		.loc 1 2676 0
 1983 00a6 EB6A     		ldr	r3, [r5, #44]
 1984 00a8 134A     		ldr	r2, .L186
 1985 00aa D2F81022 		ldr	r2, [r2, #528]
 1986 00ae 9342     		cmp	r3, r2
 1987 00b0 02D9     		bls	.L177
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 131


 1988              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1989 00b2 114A     		ldr	r2, .L186
 1990 00b4 C2F81032 		str	r3, [r2, #528]
 1991              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1992              		.loc 1 2676 0 discriminator 3
 1993 00b8 0F4F     		ldr	r7, .L186
 1994 00ba 07F13000 		add	r0, r7, #48
 1995 00be 03EB8303 		add	r3, r3, r3, lsl #2
 1996 00c2 9A00     		lsls	r2, r3, #2
 1997 00c4 4146     		mov	r1, r8
 1998 00c6 1044     		add	r0, r0, r2
 1999 00c8 FFF7FEFF 		bl	vListInsertEnd
 2000              	.LVL170:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 2001              		.loc 1 2686 0 is_stmt 1 discriminator 3
 2002 00cc EA6A     		ldr	r2, [r5, #44]
 2003 00ce D7F80432 		ldr	r3, [r7, #516]
 2004 00d2 DB6A     		ldr	r3, [r3, #44]
 2005 00d4 9A42     		cmp	r2, r3
 2006 00d6 C1D2     		bcs	.L183
 2007 00d8 C3E7     		b	.L171
 2008              	.LVL171:
 2009              	.L167:
 2010              	.LBE127:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2011              		.loc 1 2733 0
 2012 00da 074A     		ldr	r2, .L186
 2013 00dc D2F82832 		ldr	r3, [r2, #552]
 2014 00e0 0133     		adds	r3, r3, #1
 2015 00e2 C2F82832 		str	r3, [r2, #552]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2016              		.loc 1 2593 0
 2017 00e6 0026     		movs	r6, #0
 2018              	.LVL172:
 2019              	.L172:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2020              		.loc 1 2746 0
 2021 00e8 034B     		ldr	r3, .L186
 2022 00ea D3F82C32 		ldr	r3, [r3, #556]
 2023 00ee 03B1     		cbz	r3, .L180
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2024              		.loc 1 2748 0
 2025 00f0 0126     		movs	r6, #1
 2026              	.LVL173:
 2027              	.L180:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2028              		.loc 1 2758 0
 2029 00f2 3046     		mov	r0, r6
 2030 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2031              	.LVL174:
 2032              	.L187:
 2033              		.align	2
 2034              	.L186:
 2035 00f8 00000000 		.word	.LANCHOR0
 2036              		.cfi_endproc
 2037              	.LFE533:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 132


 2038              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2039              		.section	.text.xTaskResumeAll,"ax",%progbits
 2040              		.align	2
 2041              		.global	xTaskResumeAll
 2042              		.thumb
 2043              		.thumb_func
 2044              		.type	xTaskResumeAll, %function
 2045              	xTaskResumeAll:
 2046              	.LFB528:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2047              		.loc 1 2106 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              	.LVL175:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2052              		.loc 1 2112 0
 2053 0000 394B     		ldr	r3, .L204
 2054 0002 D3F81C32 		ldr	r3, [r3, #540]
 2055 0006 43B9     		cbnz	r3, .L189
 2056              	.LBB128:
 2057              	.LBB129:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2058              		.loc 2 156 0
 2059              		.syntax unified
 2060              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2061 0008 4FF0BF03 			mov r3, #191												
 2062 000c 83F31188 		msr basepri, r3											
 2063 0010 BFF36F8F 		isb														
 2064 0014 BFF34F8F 		dsb														
 2065              	
 2066              	@ 0 "" 2
 2067              	.LVL176:
 2068              		.thumb
 2069              		.syntax unified
 2070              	.L190:
 2071 0018 FEE7     		b	.L190
 2072              	.L189:
 2073              	.LBE129:
 2074              	.LBE128:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2075              		.loc 1 2106 0
 2076 001a 70B5     		push	{r4, r5, r6, lr}
 2077              		.cfi_def_cfa_offset 16
 2078              		.cfi_offset 4, -16
 2079              		.cfi_offset 5, -12
 2080              		.cfi_offset 6, -8
 2081              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2082              		.loc 1 2119 0
 2083 001c FFF7FEFF 		bl	vPortEnterCritical
 2084              	.LVL177:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2085              		.loc 1 2121 0
 2086 0020 314B     		ldr	r3, .L204
 2087 0022 D3F81C22 		ldr	r2, [r3, #540]
 2088 0026 013A     		subs	r2, r2, #1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 133


 2089 0028 C3F81C22 		str	r2, [r3, #540]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2090              		.loc 1 2123 0
 2091 002c D3F81C32 		ldr	r3, [r3, #540]
 2092 0030 002B     		cmp	r3, #0
 2093 0032 52D1     		bne	.L200
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2094              		.loc 1 2125 0
 2095 0034 2C4B     		ldr	r3, .L204
 2096 0036 D3F80032 		ldr	r3, [r3, #512]
 2097 003a 3BBB     		cbnz	r3, .L201
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2098              		.loc 1 2108 0
 2099 003c 0024     		movs	r4, #0
 2100 003e 4FE0     		b	.L191
 2101              	.LVL178:
 2102              	.L195:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2103              		.loc 1 2131 0
 2104 0040 294D     		ldr	r5, .L204
 2105 0042 2B6A     		ldr	r3, [r5, #32]
 2106 0044 DC68     		ldr	r4, [r3, #12]
 2107              	.LVL179:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2108              		.loc 1 2132 0
 2109 0046 04F11800 		add	r0, r4, #24
 2110 004a FFF7FEFF 		bl	uxListRemove
 2111              	.LVL180:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2112              		.loc 1 2133 0
 2113 004e 261D     		adds	r6, r4, #4
 2114 0050 3046     		mov	r0, r6
 2115 0052 FFF7FEFF 		bl	uxListRemove
 2116              	.LVL181:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2117              		.loc 1 2134 0
 2118 0056 E36A     		ldr	r3, [r4, #44]
 2119 0058 D5F81022 		ldr	r2, [r5, #528]
 2120 005c 9342     		cmp	r3, r2
 2121 005e 01D9     		bls	.L193
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2122              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2123 0060 C5F81032 		str	r3, [r5, #528]
 2124              	.L193:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2125              		.loc 1 2134 0 discriminator 3
 2126 0064 204D     		ldr	r5, .L204
 2127 0066 05F13000 		add	r0, r5, #48
 2128 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2129 006e 9A00     		lsls	r2, r3, #2
 2130 0070 3146     		mov	r1, r6
 2131 0072 1044     		add	r0, r0, r2
 2132 0074 FFF7FEFF 		bl	vListInsertEnd
 2133              	.LVL182:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2134              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2135 0078 E26A     		ldr	r2, [r4, #44]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 134


 2136 007a D5F80432 		ldr	r3, [r5, #516]
 2137 007e DB6A     		ldr	r3, [r3, #44]
 2138 0080 9A42     		cmp	r2, r3
 2139 0082 04D3     		bcc	.L192
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2140              		.loc 1 2140 0
 2141 0084 0122     		movs	r2, #1
 2142 0086 C5F82C22 		str	r2, [r5, #556]
 2143 008a 00E0     		b	.L192
 2144              	.LVL183:
 2145              	.L201:
 2146 008c 0024     		movs	r4, #0
 2147              	.LVL184:
 2148              	.L192:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2149              		.loc 1 2129 0
 2150 008e 164B     		ldr	r3, .L204
 2151 0090 5B69     		ldr	r3, [r3, #20]
 2152 0092 002B     		cmp	r3, #0
 2153 0094 D4D1     		bne	.L195
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2154              		.loc 1 2148 0
 2155 0096 0CB1     		cbz	r4, .L196
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2156              		.loc 1 2156 0
 2157 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2158              	.LVL185:
 2159              	.L196:
 2160              	.LBB130:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2161              		.loc 1 2164 0
 2162 009c 124B     		ldr	r3, .L204
 2163 009e D3F82842 		ldr	r4, [r3, #552]
 2164              	.LVL186:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2165              		.loc 1 2166 0
 2166 00a2 64B1     		cbz	r4, .L197
 2167              	.L199:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2168              		.loc 1 2170 0
 2169 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2170              	.LVL187:
 2171 00a8 18B1     		cbz	r0, .L198
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2172              		.loc 1 2172 0
 2173 00aa 0122     		movs	r2, #1
 2174 00ac 0E4B     		ldr	r3, .L204
 2175 00ae C3F82C22 		str	r2, [r3, #556]
 2176              	.L198:
 2177              	.LVL188:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2178              		.loc 1 2179 0
 2179 00b2 013C     		subs	r4, r4, #1
 2180              	.LVL189:
 2181 00b4 F6D1     		bne	.L199
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2182              		.loc 1 2181 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 135


 2183 00b6 0022     		movs	r2, #0
 2184 00b8 0B4B     		ldr	r3, .L204
 2185 00ba C3F82822 		str	r2, [r3, #552]
 2186              	.L197:
 2187              	.LBE130:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2188              		.loc 1 2189 0
 2189 00be 0A4B     		ldr	r3, .L204
 2190 00c0 D3F82C32 		ldr	r3, [r3, #556]
 2191 00c4 5BB1     		cbz	r3, .L202
 2192              	.LVL190:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2193              		.loc 1 2196 0
 2194 00c6 4FF08052 		mov	r2, #268435456
 2195 00ca 084B     		ldr	r3, .L204+4
 2196 00cc 1A60     		str	r2, [r3]
 2197              		.syntax unified
 2198              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2199 00ce BFF34F8F 		dsb
 2200              	@ 0 "" 2
 2201              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2202 00d2 BFF36F8F 		isb
 2203              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2204              		.loc 1 2193 0
 2205              		.thumb
 2206              		.syntax unified
 2207 00d6 0124     		movs	r4, #1
 2208              	.LVL191:
 2209 00d8 02E0     		b	.L191
 2210              	.LVL192:
 2211              	.L200:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2212              		.loc 1 2108 0
 2213 00da 0024     		movs	r4, #0
 2214 00dc 00E0     		b	.L191
 2215              	.LVL193:
 2216              	.L202:
 2217 00de 0024     		movs	r4, #0
 2218              	.LVL194:
 2219              	.L191:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2220              		.loc 1 2209 0
 2221 00e0 FFF7FEFF 		bl	vPortExitCritical
 2222              	.LVL195:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2223              		.loc 1 2212 0
 2224 00e4 2046     		mov	r0, r4
 2225 00e6 70BD     		pop	{r4, r5, r6, pc}
 2226              	.LVL196:
 2227              	.L205:
 2228              		.align	2
 2229              	.L204:
 2230 00e8 00000000 		.word	.LANCHOR0
 2231 00ec 04ED00E0 		.word	-536810236
 2232              		.cfi_endproc
 2233              	.LFE528:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 136


 2234              		.size	xTaskResumeAll, .-xTaskResumeAll
 2235              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2236              		.align	2
 2237              		.global	vTaskDelayUntil
 2238              		.thumb
 2239              		.thumb_func
 2240              		.type	vTaskDelayUntil, %function
 2241              	vTaskDelayUntil:
 2242              	.LFB516:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2243              		.loc 1 1205 0
 2244              		.cfi_startproc
 2245              		@ args = 0, pretend = 0, frame = 0
 2246              		@ frame_needed = 0, uses_anonymous_args = 0
 2247              	.LVL197:
 2248 0000 38B5     		push	{r3, r4, r5, lr}
 2249              		.cfi_def_cfa_offset 16
 2250              		.cfi_offset 3, -16
 2251              		.cfi_offset 4, -12
 2252              		.cfi_offset 5, -8
 2253              		.cfi_offset 14, -4
 2254              	.LVL198:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2255              		.loc 1 1209 0
 2256 0002 40B9     		cbnz	r0, .L207
 2257              	.LBB131:
 2258              	.LBB132:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2259              		.loc 2 156 0
 2260              		.syntax unified
 2261              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2262 0004 4FF0BF03 			mov r3, #191												
 2263 0008 83F31188 		msr basepri, r3											
 2264 000c BFF36F8F 		isb														
 2265 0010 BFF34F8F 		dsb														
 2266              	
 2267              	@ 0 "" 2
 2268              	.LVL199:
 2269              		.thumb
 2270              		.syntax unified
 2271              	.L208:
 2272 0014 FEE7     		b	.L208
 2273              	.L207:
 2274 0016 0546     		mov	r5, r0
 2275              	.LBE132:
 2276              	.LBE131:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2277              		.loc 1 1210 0
 2278 0018 41B9     		cbnz	r1, .L209
 2279              	.LBB133:
 2280              	.LBB134:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2281              		.loc 2 156 0
 2282              		.syntax unified
 2283              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2284 001a 4FF0BF03 			mov r3, #191												
 2285 001e 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 137


 2286 0022 BFF36F8F 		isb														
 2287 0026 BFF34F8F 		dsb														
 2288              	
 2289              	@ 0 "" 2
 2290              	.LVL200:
 2291              		.thumb
 2292              		.syntax unified
 2293              	.L210:
 2294 002a FEE7     		b	.L210
 2295              	.L209:
 2296              	.LBE134:
 2297              	.LBE133:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2298              		.loc 1 1211 0
 2299 002c 1D4B     		ldr	r3, .L222
 2300 002e D3F81C32 		ldr	r3, [r3, #540]
 2301 0032 43B1     		cbz	r3, .L211
 2302              	.LBB135:
 2303              	.LBB136:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2304              		.loc 2 156 0
 2305              		.syntax unified
 2306              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2307 0034 4FF0BF03 			mov r3, #191												
 2308 0038 83F31188 		msr basepri, r3											
 2309 003c BFF36F8F 		isb														
 2310 0040 BFF34F8F 		dsb														
 2311              	
 2312              	@ 0 "" 2
 2313              	.LVL201:
 2314              		.thumb
 2315              		.syntax unified
 2316              	.L212:
 2317 0044 FEE7     		b	.L212
 2318              	.L211:
 2319 0046 0C46     		mov	r4, r1
 2320              	.LBE136:
 2321              	.LBE135:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2322              		.loc 1 1213 0
 2323 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2324              	.LVL202:
 2325              	.LBB137:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2326              		.loc 1 1217 0
 2327 004c 154B     		ldr	r3, .L222
 2328 004e D3F81802 		ldr	r0, [r3, #536]
 2329              	.LVL203:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2330              		.loc 1 1220 0
 2331 0052 2A68     		ldr	r2, [r5]
 2332 0054 A318     		adds	r3, r4, r2
 2333              	.LVL204:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2334              		.loc 1 1222 0
 2335 0056 9042     		cmp	r0, r2
 2336 0058 05D2     		bcs	.L213
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 138


1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2337              		.loc 1 1229 0
 2338 005a 9A42     		cmp	r2, r3
 2339 005c 09D9     		bls	.L217
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2340              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2341 005e 9842     		cmp	r0, r3
 2342 0060 09D3     		bcc	.L218
 2343              	.LBE137:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2344              		.loc 1 1207 0 is_stmt 1
 2345 0062 0022     		movs	r2, #0
 2346 0064 0CE0     		b	.L214
 2347              	.L213:
 2348              	.LBB138:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2349              		.loc 1 1243 0
 2350 0066 9A42     		cmp	r2, r3
 2351 0068 07D8     		bhi	.L219
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2352              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2353 006a 9842     		cmp	r0, r3
 2354 006c 07D3     		bcc	.L220
 2355              	.LBE138:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2356              		.loc 1 1207 0 is_stmt 1
 2357 006e 0022     		movs	r2, #0
 2358 0070 06E0     		b	.L214
 2359              	.L217:
 2360 0072 0022     		movs	r2, #0
 2361 0074 04E0     		b	.L214
 2362              	.L218:
 2363              	.LBB139:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2364              		.loc 1 1231 0
 2365 0076 0122     		movs	r2, #1
 2366 0078 02E0     		b	.L214
 2367              	.L219:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2368              		.loc 1 1245 0
 2369 007a 0122     		movs	r2, #1
 2370 007c 00E0     		b	.L214
 2371              	.L220:
 2372 007e 0122     		movs	r2, #1
 2373              	.L214:
 2374              	.LVL205:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2375              		.loc 1 1254 0
 2376 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2377              		.loc 1 1256 0
 2378 0082 1AB1     		cbz	r2, .L215
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2379              		.loc 1 1262 0
 2380 0084 0021     		movs	r1, #0
 2381 0086 181A     		subs	r0, r3, r0
 2382              	.LVL206:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 139


 2383 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2384              	.LVL207:
 2385              	.L215:
 2386              	.LBE139:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2387              		.loc 1 1269 0
 2388 008c FFF7FEFF 		bl	xTaskResumeAll
 2389              	.LVL208:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2390              		.loc 1 1273 0
 2391 0090 38B9     		cbnz	r0, .L206
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2392              		.loc 1 1275 0
 2393 0092 4FF08052 		mov	r2, #268435456
 2394 0096 044B     		ldr	r3, .L222+4
 2395 0098 1A60     		str	r2, [r3]
 2396              		.syntax unified
 2397              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2398 009a BFF34F8F 		dsb
 2399              	@ 0 "" 2
 2400              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2401 009e BFF36F8F 		isb
 2402              	@ 0 "" 2
 2403              		.thumb
 2404              		.syntax unified
 2405              	.L206:
 2406 00a2 38BD     		pop	{r3, r4, r5, pc}
 2407              	.LVL209:
 2408              	.L223:
 2409              		.align	2
 2410              	.L222:
 2411 00a4 00000000 		.word	.LANCHOR0
 2412 00a8 04ED00E0 		.word	-536810236
 2413              		.cfi_endproc
 2414              	.LFE516:
 2415              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2416              		.section	.text.vTaskDelay,"ax",%progbits
 2417              		.align	2
 2418              		.global	vTaskDelay
 2419              		.thumb
 2420              		.thumb_func
 2421              		.type	vTaskDelay, %function
 2422              	vTaskDelay:
 2423              	.LFB517:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2424              		.loc 1 1289 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 0
 2427              		@ frame_needed = 0, uses_anonymous_args = 0
 2428              	.LVL210:
 2429 0000 10B5     		push	{r4, lr}
 2430              		.cfi_def_cfa_offset 8
 2431              		.cfi_offset 4, -8
 2432              		.cfi_offset 14, -4
 2433              	.LVL211:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2434              		.loc 1 1293 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 140


 2435 0002 B0B1     		cbz	r0, .L229
 2436 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2437              		.loc 1 1295 0
 2438 0006 104B     		ldr	r3, .L231
 2439 0008 D3F81C32 		ldr	r3, [r3, #540]
 2440 000c 43B1     		cbz	r3, .L226
 2441              	.LBB140:
 2442              	.LBB141:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2443              		.loc 2 156 0
 2444              		.syntax unified
 2445              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2446 000e 4FF0BF03 			mov r3, #191												
 2447 0012 83F31188 		msr basepri, r3											
 2448 0016 BFF36F8F 		isb														
 2449 001a BFF34F8F 		dsb														
 2450              	
 2451              	@ 0 "" 2
 2452              	.LVL212:
 2453              		.thumb
 2454              		.syntax unified
 2455              	.L227:
 2456 001e FEE7     		b	.L227
 2457              	.L226:
 2458              	.LBE141:
 2459              	.LBE140:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2460              		.loc 1 1296 0
 2461 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2462              	.LVL213:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2463              		.loc 1 1307 0
 2464 0024 0021     		movs	r1, #0
 2465 0026 2046     		mov	r0, r4
 2466 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2467              	.LVL214:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2468              		.loc 1 1309 0
 2469 002c FFF7FEFF 		bl	xTaskResumeAll
 2470              	.LVL215:
 2471 0030 00E0     		b	.L225
 2472              	.LVL216:
 2473              	.L229:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2474              		.loc 1 1290 0
 2475 0032 0020     		movs	r0, #0
 2476              	.LVL217:
 2477              	.L225:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2478              		.loc 1 1318 0
 2479 0034 38B9     		cbnz	r0, .L224
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2480              		.loc 1 1320 0
 2481 0036 4FF08052 		mov	r2, #268435456
 2482 003a 044B     		ldr	r3, .L231+4
 2483 003c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 141


 2484              		.syntax unified
 2485              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2486 003e BFF34F8F 		dsb
 2487              	@ 0 "" 2
 2488              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2489 0042 BFF36F8F 		isb
 2490              	@ 0 "" 2
 2491              		.thumb
 2492              		.syntax unified
 2493              	.L224:
 2494 0046 10BD     		pop	{r4, pc}
 2495              	.L232:
 2496              		.align	2
 2497              	.L231:
 2498 0048 00000000 		.word	.LANCHOR0
 2499 004c 04ED00E0 		.word	-536810236
 2500              		.cfi_endproc
 2501              	.LFE517:
 2502              		.size	vTaskDelay, .-vTaskDelay
 2503              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2504              		.align	2
 2505              		.global	vTaskSwitchContext
 2506              		.thumb
 2507              		.thumb_func
 2508              		.type	vTaskSwitchContext, %function
 2509              	vTaskSwitchContext:
 2510              	.LFB534:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2511              		.loc 1 2852 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2515              		.loc 1 2853 0
 2516 0000 304B     		ldr	r3, .L244
 2517 0002 D3F81C32 		ldr	r3, [r3, #540]
 2518 0006 23B1     		cbz	r3, .L234
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2519              		.loc 1 2857 0
 2520 0008 0122     		movs	r2, #1
 2521 000a 2E4B     		ldr	r3, .L244
 2522 000c C3F82C22 		str	r2, [r3, #556]
 2523 0010 7047     		bx	lr
 2524              	.L234:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2525              		.loc 1 2852 0
 2526 0012 10B5     		push	{r4, lr}
 2527              		.cfi_def_cfa_offset 8
 2528              		.cfi_offset 4, -8
 2529              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2530              		.loc 1 2861 0
 2531 0014 2B4B     		ldr	r3, .L244
 2532 0016 0022     		movs	r2, #0
 2533 0018 C3F82C22 		str	r2, [r3, #556]
 2534              	.LBB142:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 142


 2535              		.loc 1 2893 0
 2536 001c D3F80432 		ldr	r3, [r3, #516]
 2537 0020 1B6B     		ldr	r3, [r3, #48]
 2538              	.LVL218:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2539              		.loc 1 2896 0
 2540 0022 1A68     		ldr	r2, [r3]
 2541 0024 B2F1A53F 		cmp	r2, #-1515870811
 2542 0028 0BD1     		bne	.L236
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2543              		.loc 1 2897 0 discriminator 1
 2544 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2545              		.loc 1 2896 0 discriminator 1
 2546 002c B2F1A53F 		cmp	r2, #-1515870811
 2547 0030 07D1     		bne	.L236
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2548              		.loc 1 2898 0
 2549 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2550              		.loc 1 2897 0
 2551 0034 B2F1A53F 		cmp	r2, #-1515870811
 2552 0038 03D1     		bne	.L236
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2553              		.loc 1 2899 0
 2554 003a DB68     		ldr	r3, [r3, #12]
 2555              	.LVL219:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2556              		.loc 1 2898 0
 2557 003c B3F1A53F 		cmp	r3, #-1515870811
 2558 0040 07D0     		beq	.L237
 2559              	.L236:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2560              		.loc 1 2901 0
 2561 0042 204B     		ldr	r3, .L244
 2562 0044 D3F80402 		ldr	r0, [r3, #516]
 2563 0048 D3F80412 		ldr	r1, [r3, #516]
 2564 004c 3431     		adds	r1, r1, #52
 2565 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2566              	.LVL220:
 2567              	.L237:
 2568              	.LBE142:
 2569              	.LBB143:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2570              		.loc 1 2907 0
 2571 0052 1C4B     		ldr	r3, .L244
 2572 0054 D3F81032 		ldr	r3, [r3, #528]
 2573              	.LVL221:
 2574 0058 0AE0     		b	.L238
 2575              	.L241:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2576              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2577 005a 43B9     		cbnz	r3, .L239
 2578              	.LBB144:
 2579              	.LBB145:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2580              		.loc 2 156 0 is_stmt 1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 143


 2581              		.syntax unified
 2582              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2583 005c 4FF0BF03 			mov r3, #191												
 2584 0060 83F31188 		msr basepri, r3											
 2585 0064 BFF36F8F 		isb														
 2586 0068 BFF34F8F 		dsb														
 2587              	
 2588              	@ 0 "" 2
 2589              	.LVL222:
 2590              		.thumb
 2591              		.syntax unified
 2592              	.L240:
 2593 006c FEE7     		b	.L240
 2594              	.LVL223:
 2595              	.L239:
 2596              	.LBE145:
 2597              	.LBE144:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2598              		.loc 1 2907 0 discriminator 3
 2599 006e 013B     		subs	r3, r3, #1
 2600              	.LVL224:
 2601              	.L238:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2602              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2603 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2604 0074 8A00     		lsls	r2, r1, #2
 2605 0076 1349     		ldr	r1, .L244
 2606 0078 0A44     		add	r2, r2, r1
 2607 007a 126B     		ldr	r2, [r2, #48]
 2608 007c 002A     		cmp	r2, #0
 2609 007e ECD0     		beq	.L241
 2610              	.LVL225:
 2611              	.LBB146:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2612              		.loc 1 2907 0 discriminator 6
 2613 0080 0846     		mov	r0, r1
 2614 0082 9900     		lsls	r1, r3, #2
 2615 0084 CC18     		adds	r4, r1, r3
 2616 0086 A200     		lsls	r2, r4, #2
 2617 0088 0244     		add	r2, r2, r0
 2618 008a 546B     		ldr	r4, [r2, #52]
 2619 008c 6468     		ldr	r4, [r4, #4]
 2620 008e 5463     		str	r4, [r2, #52]
 2621 0090 3030     		adds	r0, r0, #48
 2622 0092 1944     		add	r1, r1, r3
 2623 0094 8A00     		lsls	r2, r1, #2
 2624 0096 0832     		adds	r2, r2, #8
 2625 0098 0244     		add	r2, r2, r0
 2626 009a 9442     		cmp	r4, r2
 2627 009c 06D1     		bne	.L242
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2628              		.loc 1 2907 0 discriminator 7
 2629 009e 6068     		ldr	r0, [r4, #4]
 2630 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2631 00a4 8A00     		lsls	r2, r1, #2
 2632 00a6 0749     		ldr	r1, .L244
 2633 00a8 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 144


 2634 00aa 5063     		str	r0, [r2, #52]
 2635              	.L242:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2636              		.loc 1 2907 0 discriminator 9
 2637 00ac 0549     		ldr	r1, .L244
 2638 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2639 00b2 8200     		lsls	r2, r0, #2
 2640 00b4 0A44     		add	r2, r2, r1
 2641 00b6 526B     		ldr	r2, [r2, #52]
 2642 00b8 D268     		ldr	r2, [r2, #12]
 2643 00ba C1F80422 		str	r2, [r1, #516]
 2644              	.LBE146:
 2645 00be C1F81032 		str	r3, [r1, #528]
 2646 00c2 10BD     		pop	{r4, pc}
 2647              	.L245:
 2648              		.align	2
 2649              	.L244:
 2650 00c4 00000000 		.word	.LANCHOR0
 2651              	.LBE143:
 2652              		.cfi_endproc
 2653              	.LFE534:
 2654              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2655              		.section	.text.vTaskSuspend,"ax",%progbits
 2656              		.align	2
 2657              		.global	vTaskSuspend
 2658              		.thumb
 2659              		.thumb_func
 2660              		.type	vTaskSuspend, %function
 2661              	vTaskSuspend:
 2662              	.LFB521:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2663              		.loc 1 1631 0 is_stmt 1
 2664              		.cfi_startproc
 2665              		@ args = 0, pretend = 0, frame = 0
 2666              		@ frame_needed = 0, uses_anonymous_args = 0
 2667              	.LVL226:
 2668 0000 38B5     		push	{r3, r4, r5, lr}
 2669              		.cfi_def_cfa_offset 16
 2670              		.cfi_offset 3, -16
 2671              		.cfi_offset 4, -12
 2672              		.cfi_offset 5, -8
 2673              		.cfi_offset 14, -4
 2674 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2675              		.loc 1 1634 0
 2676 0004 FFF7FEFF 		bl	vPortEnterCritical
 2677              	.LVL227:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2678              		.loc 1 1638 0
 2679 0008 14B9     		cbnz	r4, .L247
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2680              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2681 000a 294B     		ldr	r3, .L257
 2682 000c D3F80442 		ldr	r4, [r3, #516]
 2683              	.LVL228:
 2684              	.L247:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 145


 2685              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2686 0010 251D     		adds	r5, r4, #4
 2687 0012 2846     		mov	r0, r5
 2688 0014 FFF7FEFF 		bl	uxListRemove
 2689              	.LVL229:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2690              		.loc 1 1654 0 discriminator 4
 2691 0018 A36A     		ldr	r3, [r4, #40]
 2692 001a 1BB1     		cbz	r3, .L248
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2693              		.loc 1 1656 0
 2694 001c 04F11800 		add	r0, r4, #24
 2695 0020 FFF7FEFF 		bl	uxListRemove
 2696              	.LVL230:
 2697              	.L248:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2698              		.loc 1 1663 0
 2699 0024 2946     		mov	r1, r5
 2700 0026 2248     		ldr	r0, .L257
 2701 0028 FFF7FEFF 		bl	vListInsertEnd
 2702              	.LVL231:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2703              		.loc 1 1667 0
 2704 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2705 0030 DBB2     		uxtb	r3, r3
 2706 0032 012B     		cmp	r3, #1
 2707 0034 02D1     		bne	.L249
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2708              		.loc 1 1671 0
 2709 0036 0023     		movs	r3, #0
 2710 0038 84F85C30 		strb	r3, [r4, #92]
 2711              	.L249:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2712              		.loc 1 1676 0
 2713 003c FFF7FEFF 		bl	vPortExitCritical
 2714              	.LVL232:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2715              		.loc 1 1678 0
 2716 0040 1B4B     		ldr	r3, .L257
 2717 0042 D3F80832 		ldr	r3, [r3, #520]
 2718 0046 2BB1     		cbz	r3, .L250
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2719              		.loc 1 1682 0
 2720 0048 FFF7FEFF 		bl	vPortEnterCritical
 2721              	.LVL233:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2722              		.loc 1 1684 0
 2723 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2724              	.LVL234:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2725              		.loc 1 1686 0
 2726 0050 FFF7FEFF 		bl	vPortExitCritical
 2727              	.LVL235:
 2728              	.L250:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2729              		.loc 1 1693 0
 2730 0054 164B     		ldr	r3, .L257
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 146


 2731 0056 D3F80432 		ldr	r3, [r3, #516]
 2732 005a 9C42     		cmp	r4, r3
 2733 005c 26D1     		bne	.L246
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2734              		.loc 1 1695 0
 2735 005e 144B     		ldr	r3, .L257
 2736 0060 D3F80832 		ldr	r3, [r3, #520]
 2737 0064 ABB1     		cbz	r3, .L252
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2738              		.loc 1 1698 0
 2739 0066 124B     		ldr	r3, .L257
 2740 0068 D3F81C32 		ldr	r3, [r3, #540]
 2741 006c 43B1     		cbz	r3, .L253
 2742              	.LBB147:
 2743              	.LBB148:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2744              		.loc 2 156 0
 2745              		.syntax unified
 2746              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2747 006e 4FF0BF03 			mov r3, #191												
 2748 0072 83F31188 		msr basepri, r3											
 2749 0076 BFF36F8F 		isb														
 2750 007a BFF34F8F 		dsb														
 2751              	
 2752              	@ 0 "" 2
 2753              	.LVL236:
 2754              		.thumb
 2755              		.syntax unified
 2756              	.L254:
 2757 007e FEE7     		b	.L254
 2758              	.L253:
 2759              	.LBE148:
 2760              	.LBE147:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2761              		.loc 1 1699 0
 2762 0080 4FF08052 		mov	r2, #268435456
 2763 0084 0B4B     		ldr	r3, .L257+4
 2764 0086 1A60     		str	r2, [r3]
 2765              		.syntax unified
 2766              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2767 0088 BFF34F8F 		dsb
 2768              	@ 0 "" 2
 2769              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2770 008c BFF36F8F 		isb
 2771              	@ 0 "" 2
 2772              		.thumb
 2773              		.syntax unified
 2774 0090 38BD     		pop	{r3, r4, r5, pc}
 2775              	.LVL237:
 2776              	.L252:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2777              		.loc 1 1706 0
 2778 0092 074B     		ldr	r3, .L257
 2779 0094 1A68     		ldr	r2, [r3]
 2780 0096 D3F80032 		ldr	r3, [r3, #512]
 2781 009a 9A42     		cmp	r2, r3
 2782 009c 04D1     		bne	.L255
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 147


1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2783              		.loc 1 1712 0
 2784 009e 0022     		movs	r2, #0
 2785 00a0 034B     		ldr	r3, .L257
 2786 00a2 C3F80422 		str	r2, [r3, #516]
 2787 00a6 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL238:
 2789              	.L255:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2790              		.loc 1 1716 0
 2791 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2792              	.LVL239:
 2793              	.L246:
 2794 00ac 38BD     		pop	{r3, r4, r5, pc}
 2795              	.LVL240:
 2796              	.L258:
 2797 00ae 00BF     		.align	2
 2798              	.L257:
 2799 00b0 00000000 		.word	.LANCHOR0
 2800 00b4 04ED00E0 		.word	-536810236
 2801              		.cfi_endproc
 2802              	.LFE521:
 2803              		.size	vTaskSuspend, .-vTaskSuspend
 2804              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2805              		.align	2
 2806              		.global	vTaskPlaceOnEventList
 2807              		.thumb
 2808              		.thumb_func
 2809              		.type	vTaskPlaceOnEventList, %function
 2810              	vTaskPlaceOnEventList:
 2811              	.LFB535:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2812              		.loc 1 2922 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816              	.LVL241:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2817              		.loc 1 2923 0
 2818 0000 40B9     		cbnz	r0, .L260
 2819              	.LBB149:
 2820              	.LBB150:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2821              		.loc 2 156 0
 2822              		.syntax unified
 2823              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2824 0002 4FF0BF03 			mov r3, #191												
 2825 0006 83F31188 		msr basepri, r3											
 2826 000a BFF36F8F 		isb														
 2827 000e BFF34F8F 		dsb														
 2828              	
 2829              	@ 0 "" 2
 2830              	.LVL242:
 2831              		.thumb
 2832              		.syntax unified
 2833              	.L261:
 2834 0012 FEE7     		b	.L261
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 148


 2835              	.L260:
 2836              	.LBE150:
 2837              	.LBE149:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2838              		.loc 1 2922 0
 2839 0014 10B5     		push	{r4, lr}
 2840              		.cfi_def_cfa_offset 8
 2841              		.cfi_offset 4, -8
 2842              		.cfi_offset 14, -4
 2843 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2844              		.loc 1 2932 0
 2845 0018 054B     		ldr	r3, .L263
 2846 001a D3F80412 		ldr	r1, [r3, #516]
 2847              	.LVL243:
 2848 001e 1831     		adds	r1, r1, #24
 2849 0020 FFF7FEFF 		bl	vListInsert
 2850              	.LVL244:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2851              		.loc 1 2934 0
 2852 0024 0121     		movs	r1, #1
 2853 0026 2046     		mov	r0, r4
 2854 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2855              	.LVL245:
 2856 002c 10BD     		pop	{r4, pc}
 2857              	.LVL246:
 2858              	.L264:
 2859 002e 00BF     		.align	2
 2860              	.L263:
 2861 0030 00000000 		.word	.LANCHOR0
 2862              		.cfi_endproc
 2863              	.LFE535:
 2864              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2865              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2866              		.align	2
 2867              		.global	vTaskPlaceOnUnorderedEventList
 2868              		.thumb
 2869              		.thumb_func
 2870              		.type	vTaskPlaceOnUnorderedEventList, %function
 2871              	vTaskPlaceOnUnorderedEventList:
 2872              	.LFB536:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2873              		.loc 1 2939 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              	.LVL247:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2878              		.loc 1 2940 0
 2879 0000 40B9     		cbnz	r0, .L266
 2880              	.LBB151:
 2881              	.LBB152:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2882              		.loc 2 156 0
 2883              		.syntax unified
 2884              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2885 0002 4FF0BF03 			mov r3, #191												
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 149


 2886 0006 83F31188 		msr basepri, r3											
 2887 000a BFF36F8F 		isb														
 2888 000e BFF34F8F 		dsb														
 2889              	
 2890              	@ 0 "" 2
 2891              	.LVL248:
 2892              		.thumb
 2893              		.syntax unified
 2894              	.L267:
 2895 0012 FEE7     		b	.L267
 2896              	.L266:
 2897 0014 0346     		mov	r3, r0
 2898              	.LBE152:
 2899              	.LBE151:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2900              		.loc 1 2944 0
 2901 0016 1048     		ldr	r0, .L271
 2902              	.LVL249:
 2903 0018 D0F81C02 		ldr	r0, [r0, #540]
 2904 001c 40B9     		cbnz	r0, .L268
 2905              	.LBB153:
 2906              	.LBB154:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2907              		.loc 2 156 0
 2908              		.syntax unified
 2909              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2910 001e 4FF0BF03 			mov r3, #191												
 2911 0022 83F31188 		msr basepri, r3											
 2912 0026 BFF36F8F 		isb														
 2913 002a BFF34F8F 		dsb														
 2914              	
 2915              	@ 0 "" 2
 2916              	.LVL250:
 2917              		.thumb
 2918              		.syntax unified
 2919              	.L269:
 2920 002e FEE7     		b	.L269
 2921              	.LVL251:
 2922              	.L268:
 2923              	.LBE154:
 2924              	.LBE153:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2925              		.loc 1 2939 0
 2926 0030 10B5     		push	{r4, lr}
 2927              		.cfi_def_cfa_offset 8
 2928              		.cfi_offset 4, -8
 2929              		.cfi_offset 14, -4
 2930 0032 1846     		mov	r0, r3
 2931 0034 1446     		mov	r4, r2
 2932 0036 0B46     		mov	r3, r1
 2933              	.LVL252:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2934              		.loc 1 2949 0
 2935 0038 074A     		ldr	r2, .L271
 2936              	.LVL253:
 2937 003a D2F80412 		ldr	r1, [r2, #516]
 2938              	.LVL254:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 150


 2939 003e 43F00043 		orr	r3, r3, #-2147483648
 2940              	.LVL255:
 2941 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2942              		.loc 1 2956 0
 2943 0044 D2F80412 		ldr	r1, [r2, #516]
 2944 0048 1831     		adds	r1, r1, #24
 2945 004a FFF7FEFF 		bl	vListInsertEnd
 2946              	.LVL256:
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2947              		.loc 1 2958 0
 2948 004e 0121     		movs	r1, #1
 2949 0050 2046     		mov	r0, r4
 2950 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2951              	.LVL257:
 2952 0056 10BD     		pop	{r4, pc}
 2953              	.LVL258:
 2954              	.L272:
 2955              		.align	2
 2956              	.L271:
 2957 0058 00000000 		.word	.LANCHOR0
 2958              		.cfi_endproc
 2959              	.LFE536:
 2960              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2961              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2962              		.align	2
 2963              		.global	vTaskPlaceOnEventListRestricted
 2964              		.thumb
 2965              		.thumb_func
 2966              		.type	vTaskPlaceOnEventListRestricted, %function
 2967              	vTaskPlaceOnEventListRestricted:
 2968              	.LFB537:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2969              		.loc 1 2965 0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 0
 2972              		@ frame_needed = 0, uses_anonymous_args = 0
 2973              	.LVL259:
 2974 0000 38B5     		push	{r3, r4, r5, lr}
 2975              		.cfi_def_cfa_offset 16
 2976              		.cfi_offset 3, -16
 2977              		.cfi_offset 4, -12
 2978              		.cfi_offset 5, -8
 2979              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2980              		.loc 1 2966 0
 2981 0002 40B9     		cbnz	r0, .L274
 2982              	.LBB155:
 2983              	.LBB156:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2984              		.loc 2 156 0
 2985              		.syntax unified
 2986              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2987 0004 4FF0BF03 			mov r3, #191												
 2988 0008 83F31188 		msr basepri, r3											
 2989 000c BFF36F8F 		isb														
 2990 0010 BFF34F8F 		dsb														
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 151


 2991              	
 2992              	@ 0 "" 2
 2993              	.LVL260:
 2994              		.thumb
 2995              		.syntax unified
 2996              	.L275:
 2997 0014 FEE7     		b	.L275
 2998              	.L274:
 2999 0016 0C46     		mov	r4, r1
 3000 0018 1546     		mov	r5, r2
 3001              	.LBE156:
 3002              	.LBE155:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3003              		.loc 1 2978 0
 3004 001a 074A     		ldr	r2, .L279
 3005              	.LVL261:
 3006 001c D2F80412 		ldr	r1, [r2, #516]
 3007              	.LVL262:
 3008 0020 1831     		adds	r1, r1, #24
 3009 0022 FFF7FEFF 		bl	vListInsertEnd
 3010              	.LVL263:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3011              		.loc 1 2983 0
 3012 0026 0DB1     		cbz	r5, .L276
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3013              		.loc 1 2985 0
 3014 0028 4FF0FF34 		mov	r4, #-1
 3015              	.LVL264:
 3016              	.L276:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3017              		.loc 1 2989 0
 3018 002c 2946     		mov	r1, r5
 3019 002e 2046     		mov	r0, r4
 3020 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3021              	.LVL265:
 3022 0034 38BD     		pop	{r3, r4, r5, pc}
 3023              	.LVL266:
 3024              	.L280:
 3025 0036 00BF     		.align	2
 3026              	.L279:
 3027 0038 00000000 		.word	.LANCHOR0
 3028              		.cfi_endproc
 3029              	.LFE537:
 3030              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3031              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3032              		.align	2
 3033              		.global	xTaskRemoveFromEventList
 3034              		.thumb
 3035              		.thumb_func
 3036              		.type	xTaskRemoveFromEventList, %function
 3037              	xTaskRemoveFromEventList:
 3038              	.LFB538:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3039              		.loc 1 2996 0
 3040              		.cfi_startproc
 3041              		@ args = 0, pretend = 0, frame = 0
 3042              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 152


 3043              	.LVL267:
 3044 0000 38B5     		push	{r3, r4, r5, lr}
 3045              		.cfi_def_cfa_offset 16
 3046              		.cfi_offset 3, -16
 3047              		.cfi_offset 4, -12
 3048              		.cfi_offset 5, -8
 3049              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3050              		.loc 1 3013 0
 3051 0002 C368     		ldr	r3, [r0, #12]
 3052 0004 DC68     		ldr	r4, [r3, #12]
 3053              	.LVL268:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3054              		.loc 1 3014 0
 3055 0006 44B9     		cbnz	r4, .L282
 3056              	.LBB157:
 3057              	.LBB158:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3058              		.loc 2 156 0
 3059              		.syntax unified
 3060              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3061 0008 4FF0BF03 			mov r3, #191												
 3062 000c 83F31188 		msr basepri, r3											
 3063 0010 BFF36F8F 		isb														
 3064 0014 BFF34F8F 		dsb														
 3065              	
 3066              	@ 0 "" 2
 3067              	.LVL269:
 3068              		.thumb
 3069              		.syntax unified
 3070              	.L283:
 3071 0018 FEE7     		b	.L283
 3072              	.L282:
 3073              	.LBE158:
 3074              	.LBE157:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3075              		.loc 1 3015 0
 3076 001a 04F11805 		add	r5, r4, #24
 3077 001e 2846     		mov	r0, r5
 3078              	.LVL270:
 3079 0020 FFF7FEFF 		bl	uxListRemove
 3080              	.LVL271:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3081              		.loc 1 3017 0
 3082 0024 154B     		ldr	r3, .L290
 3083 0026 D3F81C32 		ldr	r3, [r3, #540]
 3084 002a ABB9     		cbnz	r3, .L284
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3085              		.loc 1 3019 0
 3086 002c 251D     		adds	r5, r4, #4
 3087 002e 2846     		mov	r0, r5
 3088 0030 FFF7FEFF 		bl	uxListRemove
 3089              	.LVL272:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3090              		.loc 1 3020 0
 3091 0034 E36A     		ldr	r3, [r4, #44]
 3092 0036 114A     		ldr	r2, .L290
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 153


 3093 0038 D2F81022 		ldr	r2, [r2, #528]
 3094 003c 9342     		cmp	r3, r2
 3095 003e 02D9     		bls	.L285
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3096              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3097 0040 0E4A     		ldr	r2, .L290
 3098 0042 C2F81032 		str	r3, [r2, #528]
 3099              	.L285:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3100              		.loc 1 3020 0 discriminator 3
 3101 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3102 004a 9A00     		lsls	r2, r3, #2
 3103 004c 2946     		mov	r1, r5
 3104 004e 0C48     		ldr	r0, .L290+4
 3105 0050 1044     		add	r0, r0, r2
 3106 0052 FFF7FEFF 		bl	vListInsertEnd
 3107              	.LVL273:
 3108 0056 03E0     		b	.L286
 3109              	.L284:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3110              		.loc 1 3026 0 is_stmt 1
 3111 0058 2946     		mov	r1, r5
 3112 005a 0A48     		ldr	r0, .L290+8
 3113 005c FFF7FEFF 		bl	vListInsertEnd
 3114              	.LVL274:
 3115              	.L286:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3116              		.loc 1 3029 0
 3117 0060 E26A     		ldr	r2, [r4, #44]
 3118 0062 064B     		ldr	r3, .L290
 3119 0064 D3F80432 		ldr	r3, [r3, #516]
 3120 0068 DB6A     		ldr	r3, [r3, #44]
 3121 006a 9A42     		cmp	r2, r3
 3122 006c 04D9     		bls	.L288
 3123              	.LVL275:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3124              		.loc 1 3038 0
 3125 006e 0120     		movs	r0, #1
 3126 0070 024B     		ldr	r3, .L290
 3127 0072 C3F82C02 		str	r0, [r3, #556]
 3128 0076 38BD     		pop	{r3, r4, r5, pc}
 3129              	.LVL276:
 3130              	.L288:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3131              		.loc 1 3042 0
 3132 0078 0020     		movs	r0, #0
 3133              	.LVL277:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3134              		.loc 1 3060 0
 3135 007a 38BD     		pop	{r3, r4, r5, pc}
 3136              	.LVL278:
 3137              	.L291:
 3138              		.align	2
 3139              	.L290:
 3140 007c 00000000 		.word	.LANCHOR0
 3141 0080 30000000 		.word	.LANCHOR0+48
 3142 0084 14000000 		.word	.LANCHOR0+20
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 154


 3143              		.cfi_endproc
 3144              	.LFE538:
 3145              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3146              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3147              		.align	2
 3148              		.global	vTaskRemoveFromUnorderedEventList
 3149              		.thumb
 3150              		.thumb_func
 3151              		.type	vTaskRemoveFromUnorderedEventList, %function
 3152              	vTaskRemoveFromUnorderedEventList:
 3153              	.LFB539:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3154              		.loc 1 3064 0
 3155              		.cfi_startproc
 3156              		@ args = 0, pretend = 0, frame = 0
 3157              		@ frame_needed = 0, uses_anonymous_args = 0
 3158              	.LVL279:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3159              		.loc 1 3069 0
 3160 0000 1F4B     		ldr	r3, .L300
 3161 0002 D3F81C32 		ldr	r3, [r3, #540]
 3162 0006 43B9     		cbnz	r3, .L293
 3163              	.LBB159:
 3164              	.LBB160:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3165              		.loc 2 156 0
 3166              		.syntax unified
 3167              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3168 0008 4FF0BF03 			mov r3, #191												
 3169 000c 83F31188 		msr basepri, r3											
 3170 0010 BFF36F8F 		isb														
 3171 0014 BFF34F8F 		dsb														
 3172              	
 3173              	@ 0 "" 2
 3174              	.LVL280:
 3175              		.thumb
 3176              		.syntax unified
 3177              	.L294:
 3178 0018 FEE7     		b	.L294
 3179              	.L293:
 3180              	.LBE160:
 3181              	.LBE159:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3182              		.loc 1 3064 0
 3183 001a 70B5     		push	{r4, r5, r6, lr}
 3184              		.cfi_def_cfa_offset 16
 3185              		.cfi_offset 4, -16
 3186              		.cfi_offset 5, -12
 3187              		.cfi_offset 6, -8
 3188              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3189              		.loc 1 3072 0
 3190 001c 41F00043 		orr	r3, r1, #-2147483648
 3191 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3192              		.loc 1 3076 0
 3193 0022 C468     		ldr	r4, [r0, #12]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 155


 3194              	.LVL281:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3195              		.loc 1 3077 0
 3196 0024 44B9     		cbnz	r4, .L295
 3197              	.LBB161:
 3198              	.LBB162:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3199              		.loc 2 156 0
 3200              		.syntax unified
 3201              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3202 0026 4FF0BF03 			mov r3, #191												
 3203 002a 83F31188 		msr basepri, r3											
 3204 002e BFF36F8F 		isb														
 3205 0032 BFF34F8F 		dsb														
 3206              	
 3207              	@ 0 "" 2
 3208              	.LVL282:
 3209              		.thumb
 3210              		.syntax unified
 3211              	.L296:
 3212 0036 FEE7     		b	.L296
 3213              	.L295:
 3214              	.LBE162:
 3215              	.LBE161:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3216              		.loc 1 3078 0
 3217 0038 FFF7FEFF 		bl	uxListRemove
 3218              	.LVL283:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3219              		.loc 1 3083 0
 3220 003c 261D     		adds	r6, r4, #4
 3221 003e 3046     		mov	r0, r6
 3222 0040 FFF7FEFF 		bl	uxListRemove
 3223              	.LVL284:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3224              		.loc 1 3084 0
 3225 0044 E36A     		ldr	r3, [r4, #44]
 3226 0046 0E4A     		ldr	r2, .L300
 3227 0048 D2F81022 		ldr	r2, [r2, #528]
 3228 004c 9342     		cmp	r3, r2
 3229 004e 02D9     		bls	.L297
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3230              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3231 0050 0B4A     		ldr	r2, .L300
 3232 0052 C2F81032 		str	r3, [r2, #528]
 3233              	.L297:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3234              		.loc 1 3084 0 discriminator 3
 3235 0056 0A4D     		ldr	r5, .L300
 3236 0058 05F13000 		add	r0, r5, #48
 3237 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3238 0060 9A00     		lsls	r2, r3, #2
 3239 0062 3146     		mov	r1, r6
 3240 0064 1044     		add	r0, r0, r2
 3241 0066 FFF7FEFF 		bl	vListInsertEnd
 3242              	.LVL285:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 156


 3243              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3244 006a E26A     		ldr	r2, [r4, #44]
 3245 006c D5F80432 		ldr	r3, [r5, #516]
 3246 0070 DB6A     		ldr	r3, [r3, #44]
 3247 0072 9A42     		cmp	r2, r3
 3248 0074 02D9     		bls	.L292
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3249              		.loc 1 3092 0
 3250 0076 0122     		movs	r2, #1
 3251 0078 C5F82C22 		str	r2, [r5, #556]
 3252              	.L292:
 3253 007c 70BD     		pop	{r4, r5, r6, pc}
 3254              	.LVL286:
 3255              	.L301:
 3256 007e 00BF     		.align	2
 3257              	.L300:
 3258 0080 00000000 		.word	.LANCHOR0
 3259              		.cfi_endproc
 3260              	.LFE539:
 3261              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3262              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3263              		.align	2
 3264              		.global	vTaskSetTimeOutState
 3265              		.thumb
 3266              		.thumb_func
 3267              		.type	vTaskSetTimeOutState, %function
 3268              	vTaskSetTimeOutState:
 3269              	.LFB540:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3270              		.loc 1 3098 0
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 0, uses_anonymous_args = 0
 3274              	.LVL287:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3275              		.loc 1 3099 0
 3276 0000 40B9     		cbnz	r0, .L303
 3277              	.LBB163:
 3278              	.LBB164:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3279              		.loc 2 156 0
 3280              		.syntax unified
 3281              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3282 0002 4FF0BF03 			mov r3, #191												
 3283 0006 83F31188 		msr basepri, r3											
 3284 000a BFF36F8F 		isb														
 3285 000e BFF34F8F 		dsb														
 3286              	
 3287              	@ 0 "" 2
 3288              	.LVL288:
 3289              		.thumb
 3290              		.syntax unified
 3291              	.L304:
 3292 0012 FEE7     		b	.L304
 3293              	.L303:
 3294              	.LBE164:
 3295              	.LBE163:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 157


3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3296              		.loc 1 3098 0
 3297 0014 10B5     		push	{r4, lr}
 3298              		.cfi_def_cfa_offset 8
 3299              		.cfi_offset 4, -8
 3300              		.cfi_offset 14, -4
 3301 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3302              		.loc 1 3100 0
 3303 0018 FFF7FEFF 		bl	vPortEnterCritical
 3304              	.LVL289:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3305              		.loc 1 3102 0
 3306 001c 044B     		ldr	r3, .L306
 3307 001e D3F82422 		ldr	r2, [r3, #548]
 3308 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3309              		.loc 1 3103 0
 3310 0024 D3F81832 		ldr	r3, [r3, #536]
 3311 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3312              		.loc 1 3105 0
 3313 002a FFF7FEFF 		bl	vPortExitCritical
 3314              	.LVL290:
 3315 002e 10BD     		pop	{r4, pc}
 3316              	.LVL291:
 3317              	.L307:
 3318              		.align	2
 3319              	.L306:
 3320 0030 00000000 		.word	.LANCHOR0
 3321              		.cfi_endproc
 3322              	.LFE540:
 3323              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3324              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3325              		.align	2
 3326              		.global	vTaskInternalSetTimeOutState
 3327              		.thumb
 3328              		.thumb_func
 3329              		.type	vTaskInternalSetTimeOutState, %function
 3330              	vTaskInternalSetTimeOutState:
 3331              	.LFB541:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3332              		.loc 1 3110 0
 3333              		.cfi_startproc
 3334              		@ args = 0, pretend = 0, frame = 0
 3335              		@ frame_needed = 0, uses_anonymous_args = 0
 3336              		@ link register save eliminated.
 3337              	.LVL292:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3338              		.loc 1 3112 0
 3339 0000 034B     		ldr	r3, .L309
 3340 0002 D3F82422 		ldr	r2, [r3, #548]
 3341 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3342              		.loc 1 3113 0
 3343 0008 D3F81832 		ldr	r3, [r3, #536]
 3344 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 158


 3345 000e 7047     		bx	lr
 3346              	.L310:
 3347              		.align	2
 3348              	.L309:
 3349 0010 00000000 		.word	.LANCHOR0
 3350              		.cfi_endproc
 3351              	.LFE541:
 3352              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3353              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3354              		.align	2
 3355              		.global	xTaskCheckForTimeOut
 3356              		.thumb
 3357              		.thumb_func
 3358              		.type	xTaskCheckForTimeOut, %function
 3359              	xTaskCheckForTimeOut:
 3360              	.LFB542:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3361              		.loc 1 3118 0
 3362              		.cfi_startproc
 3363              		@ args = 0, pretend = 0, frame = 0
 3364              		@ frame_needed = 0, uses_anonymous_args = 0
 3365              	.LVL293:
 3366 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3367              		.cfi_def_cfa_offset 24
 3368              		.cfi_offset 3, -24
 3369              		.cfi_offset 4, -20
 3370              		.cfi_offset 5, -16
 3371              		.cfi_offset 6, -12
 3372              		.cfi_offset 7, -8
 3373              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3374              		.loc 1 3121 0
 3375 0002 40B9     		cbnz	r0, .L312
 3376              	.LBB165:
 3377              	.LBB166:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3378              		.loc 2 156 0
 3379              		.syntax unified
 3380              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3381 0004 4FF0BF03 			mov r3, #191												
 3382 0008 83F31188 		msr basepri, r3											
 3383 000c BFF36F8F 		isb														
 3384 0010 BFF34F8F 		dsb														
 3385              	
 3386              	@ 0 "" 2
 3387              	.LVL294:
 3388              		.thumb
 3389              		.syntax unified
 3390              	.L313:
 3391 0014 FEE7     		b	.L313
 3392              	.L312:
 3393 0016 0546     		mov	r5, r0
 3394              	.LBE166:
 3395              	.LBE165:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3396              		.loc 1 3122 0
 3397 0018 41B9     		cbnz	r1, .L314
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 159


 3398              	.LBB167:
 3399              	.LBB168:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3400              		.loc 2 156 0
 3401              		.syntax unified
 3402              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3403 001a 4FF0BF03 			mov r3, #191												
 3404 001e 83F31188 		msr basepri, r3											
 3405 0022 BFF36F8F 		isb														
 3406 0026 BFF34F8F 		dsb														
 3407              	
 3408              	@ 0 "" 2
 3409              	.LVL295:
 3410              		.thumb
 3411              		.syntax unified
 3412              	.L315:
 3413 002a FEE7     		b	.L315
 3414              	.L314:
 3415 002c 0C46     		mov	r4, r1
 3416              	.LBE168:
 3417              	.LBE167:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3418              		.loc 1 3124 0
 3419 002e FFF7FEFF 		bl	vPortEnterCritical
 3420              	.LVL296:
 3421              	.LBB169:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3422              		.loc 1 3127 0
 3423 0032 124B     		ldr	r3, .L322
 3424 0034 D3F81802 		ldr	r0, [r3, #536]
 3425              	.LVL297:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3426              		.loc 1 3128 0
 3427 0038 6968     		ldr	r1, [r5, #4]
 3428 003a 421A     		subs	r2, r0, r1
 3429              	.LVL298:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3430              		.loc 1 3142 0
 3431 003c 2368     		ldr	r3, [r4]
 3432 003e B3F1FF3F 		cmp	r3, #-1
 3433 0042 14D0     		beq	.L319
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3434              		.loc 1 3152 0
 3435 0044 2F68     		ldr	r7, [r5]
 3436 0046 0D4E     		ldr	r6, .L322
 3437 0048 D6F82462 		ldr	r6, [r6, #548]
 3438 004c B742     		cmp	r7, r6
 3439 004e 01D0     		beq	.L317
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3440              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3441 0050 8842     		cmp	r0, r1
 3442 0052 0ED2     		bcs	.L320
 3443              	.L317:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3444              		.loc 1 3161 0 is_stmt 1
 3445 0054 9A42     		cmp	r2, r3
 3446 0056 06D2     		bcs	.L318
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 160


3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3447              		.loc 1 3164 0
 3448 0058 9B1A     		subs	r3, r3, r2
 3449 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3450              		.loc 1 3165 0
 3451 005c 2846     		mov	r0, r5
 3452              	.LVL299:
 3453 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3454              	.LVL300:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3455              		.loc 1 3166 0
 3456 0062 0024     		movs	r4, #0
 3457              	.LVL301:
 3458 0064 06E0     		b	.L316
 3459              	.LVL302:
 3460              	.L318:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3461              		.loc 1 3170 0
 3462 0066 0023     		movs	r3, #0
 3463 0068 2360     		str	r3, [r4]
 3464              	.LVL303:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3465              		.loc 1 3171 0
 3466 006a 0124     		movs	r4, #1
 3467              	.LVL304:
 3468 006c 02E0     		b	.L316
 3469              	.LVL305:
 3470              	.L319:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3471              		.loc 1 3147 0
 3472 006e 0024     		movs	r4, #0
 3473              	.LVL306:
 3474 0070 00E0     		b	.L316
 3475              	.LVL307:
 3476              	.L320:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3477              		.loc 1 3159 0
 3478 0072 0124     		movs	r4, #1
 3479              	.LVL308:
 3480              	.L316:
 3481              	.LBE169:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3482              		.loc 1 3174 0
 3483 0074 FFF7FEFF 		bl	vPortExitCritical
 3484              	.LVL309:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3485              		.loc 1 3177 0
 3486 0078 2046     		mov	r0, r4
 3487 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3488              	.LVL310:
 3489              	.L323:
 3490              		.align	2
 3491              	.L322:
 3492 007c 00000000 		.word	.LANCHOR0
 3493              		.cfi_endproc
 3494              	.LFE542:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 161


 3495              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3496              		.section	.text.vTaskMissedYield,"ax",%progbits
 3497              		.align	2
 3498              		.global	vTaskMissedYield
 3499              		.thumb
 3500              		.thumb_func
 3501              		.type	vTaskMissedYield, %function
 3502              	vTaskMissedYield:
 3503              	.LFB543:
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3504              		.loc 1 3181 0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 0
 3507              		@ frame_needed = 0, uses_anonymous_args = 0
 3508              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3509              		.loc 1 3182 0
 3510 0000 0122     		movs	r2, #1
 3511 0002 024B     		ldr	r3, .L325
 3512 0004 C3F82C22 		str	r2, [r3, #556]
 3513 0008 7047     		bx	lr
 3514              	.L326:
 3515 000a 00BF     		.align	2
 3516              	.L325:
 3517 000c 00000000 		.word	.LANCHOR0
 3518              		.cfi_endproc
 3519              	.LFE543:
 3520              		.size	vTaskMissedYield, .-vTaskMissedYield
 3521              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3522              		.align	2
 3523              		.global	vTaskSetThreadLocalStoragePointer
 3524              		.thumb
 3525              		.thumb_func
 3526              		.type	vTaskSetThreadLocalStoragePointer, %function
 3527              	vTaskSetThreadLocalStoragePointer:
 3528              	.LFB545:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3529              		.loc 1 3395 0
 3530              		.cfi_startproc
 3531              		@ args = 0, pretend = 0, frame = 0
 3532              		@ frame_needed = 0, uses_anonymous_args = 0
 3533              		@ link register save eliminated.
 3534              	.LVL311:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3535              		.loc 1 3398 0
 3536 0000 0429     		cmp	r1, #4
 3537 0002 07DC     		bgt	.L327
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3538              		.loc 1 3400 0
 3539 0004 10B9     		cbnz	r0, .L329
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3540              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3541 0006 044B     		ldr	r3, .L330
 3542 0008 D3F80402 		ldr	r0, [r3, #516]
 3543              	.LVL312:
 3544              	.L329:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 162


 3545              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3546 000c 1031     		adds	r1, r1, #16
 3547              	.LVL313:
 3548 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3549              	.LVL314:
 3550 0012 4A60     		str	r2, [r1, #4]
 3551              	.LVL315:
 3552              	.L327:
 3553 0014 7047     		bx	lr
 3554              	.L331:
 3555 0016 00BF     		.align	2
 3556              	.L330:
 3557 0018 00000000 		.word	.LANCHOR0
 3558              		.cfi_endproc
 3559              	.LFE545:
 3560              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3561              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3562              		.align	2
 3563              		.global	pvTaskGetThreadLocalStoragePointer
 3564              		.thumb
 3565              		.thumb_func
 3566              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3567              	pvTaskGetThreadLocalStoragePointer:
 3568              	.LFB546:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3569              		.loc 1 3411 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 0
 3572              		@ frame_needed = 0, uses_anonymous_args = 0
 3573              		@ link register save eliminated.
 3574              	.LVL316:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3575              		.loc 1 3415 0
 3576 0000 0429     		cmp	r1, #4
 3577 0002 08DC     		bgt	.L335
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3578              		.loc 1 3417 0
 3579 0004 10B9     		cbnz	r0, .L334
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3580              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3581 0006 054B     		ldr	r3, .L336
 3582 0008 D3F80402 		ldr	r0, [r3, #516]
 3583              	.LVL317:
 3584              	.L334:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3585              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3586 000c 1031     		adds	r1, r1, #16
 3587              	.LVL318:
 3588 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3589              	.LVL319:
 3590 0012 4068     		ldr	r0, [r0, #4]
 3591              	.LVL320:
 3592 0014 7047     		bx	lr
 3593              	.LVL321:
 3594              	.L335:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3595              		.loc 1 3422 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 163


 3596 0016 0020     		movs	r0, #0
 3597              	.LVL322:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3598              		.loc 1 3426 0
 3599 0018 7047     		bx	lr
 3600              	.L337:
 3601 001a 00BF     		.align	2
 3602              	.L336:
 3603 001c 00000000 		.word	.LANCHOR0
 3604              		.cfi_endproc
 3605              	.LFE546:
 3606              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3607              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3608              		.align	2
 3609              		.global	xTaskGetCurrentTaskHandle
 3610              		.thumb
 3611              		.thumb_func
 3612              		.type	xTaskGetCurrentTaskHandle, %function
 3613              	xTaskGetCurrentTaskHandle:
 3614              	.LFB551:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3615              		.loc 1 3768 0
 3616              		.cfi_startproc
 3617              		@ args = 0, pretend = 0, frame = 0
 3618              		@ frame_needed = 0, uses_anonymous_args = 0
 3619              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3620              		.loc 1 3774 0
 3621 0000 014B     		ldr	r3, .L339
 3622 0002 D3F80402 		ldr	r0, [r3, #516]
 3623              	.LVL323:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3624              		.loc 1 3777 0
 3625 0006 7047     		bx	lr
 3626              	.L340:
 3627              		.align	2
 3628              	.L339:
 3629 0008 00000000 		.word	.LANCHOR0
 3630              		.cfi_endproc
 3631              	.LFE551:
 3632              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3633              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3634              		.align	2
 3635              		.global	xTaskGetSchedulerState
 3636              		.thumb
 3637              		.thumb_func
 3638              		.type	xTaskGetSchedulerState, %function
 3639              	xTaskGetSchedulerState:
 3640              	.LFB552:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3641              		.loc 1 3785 0
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 0
 3644              		@ frame_needed = 0, uses_anonymous_args = 0
 3645              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3646              		.loc 1 3788 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 164


 3647 0000 064B     		ldr	r3, .L345
 3648 0002 D3F80832 		ldr	r3, [r3, #520]
 3649 0006 2BB1     		cbz	r3, .L343
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3650              		.loc 1 3794 0
 3651 0008 044B     		ldr	r3, .L345
 3652 000a D3F81C32 		ldr	r3, [r3, #540]
 3653 000e 1BB9     		cbnz	r3, .L344
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3654              		.loc 1 3796 0
 3655 0010 0220     		movs	r0, #2
 3656 0012 7047     		bx	lr
 3657              	.L343:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3658              		.loc 1 3790 0
 3659 0014 0120     		movs	r0, #1
 3660 0016 7047     		bx	lr
 3661              	.L344:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3662              		.loc 1 3800 0
 3663 0018 0020     		movs	r0, #0
 3664              	.LVL324:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3665              		.loc 1 3805 0
 3666 001a 7047     		bx	lr
 3667              	.L346:
 3668              		.align	2
 3669              	.L345:
 3670 001c 00000000 		.word	.LANCHOR0
 3671              		.cfi_endproc
 3672              	.LFE552:
 3673              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3674              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3675              		.align	2
 3676              		.global	uxTaskResetEventItemValue
 3677              		.thumb
 3678              		.thumb_func
 3679              		.type	uxTaskResetEventItemValue, %function
 3680              	uxTaskResetEventItemValue:
 3681              	.LFB553:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 3682              		.loc 1 4394 0
 3683              		.cfi_startproc
 3684              		@ args = 0, pretend = 0, frame = 0
 3685              		@ frame_needed = 0, uses_anonymous_args = 0
 3686              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3687              		.loc 1 4397 0
 3688 0000 064B     		ldr	r3, .L348
 3689 0002 D3F80422 		ldr	r2, [r3, #516]
 3690 0006 9069     		ldr	r0, [r2, #24]
 3691              	.LVL325:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3692              		.loc 1 4401 0
 3693 0008 D3F80422 		ldr	r2, [r3, #516]
 3694 000c D3F80432 		ldr	r3, [r3, #516]
 3695 0010 DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 165


 3696 0012 C3F11403 		rsb	r3, r3, #20
 3697 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3698              		.loc 1 4404 0
 3699 0018 7047     		bx	lr
 3700              	.L349:
 3701 001a 00BF     		.align	2
 3702              	.L348:
 3703 001c 00000000 		.word	.LANCHOR0
 3704              		.cfi_endproc
 3705              	.LFE553:
 3706              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3707              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3708              		.align	2
 3709              		.global	ulTaskNotifyTake
 3710              		.thumb
 3711              		.thumb_func
 3712              		.type	ulTaskNotifyTake, %function
 3713              	ulTaskNotifyTake:
 3714              	.LFB554:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 3715              		.loc 1 4427 0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 0
 3718              		@ frame_needed = 0, uses_anonymous_args = 0
 3719              	.LVL326:
 3720 0000 38B5     		push	{r3, r4, r5, lr}
 3721              		.cfi_def_cfa_offset 16
 3722              		.cfi_offset 3, -16
 3723              		.cfi_offset 4, -12
 3724              		.cfi_offset 5, -8
 3725              		.cfi_offset 14, -4
 3726 0002 0546     		mov	r5, r0
 3727 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3728              		.loc 1 4430 0
 3729 0006 FFF7FEFF 		bl	vPortEnterCritical
 3730              	.LVL327:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3731              		.loc 1 4433 0
 3732 000a 1B4B     		ldr	r3, .L355
 3733 000c D3F80432 		ldr	r3, [r3, #516]
 3734 0010 9B6D     		ldr	r3, [r3, #88]
 3735 0012 93B9     		cbnz	r3, .L351
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3736              		.loc 1 4436 0
 3737 0014 184B     		ldr	r3, .L355
 3738 0016 D3F80432 		ldr	r3, [r3, #516]
 3739 001a 0122     		movs	r2, #1
 3740 001c 83F85C20 		strb	r2, [r3, #92]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3741              		.loc 1 4438 0
 3742 0020 5CB1     		cbz	r4, .L351
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3743              		.loc 1 4440 0
 3744 0022 1146     		mov	r1, r2
 3745 0024 2046     		mov	r0, r4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 166


 3746 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3747              	.LVL328:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3748              		.loc 1 4447 0
 3749 002a 4FF08052 		mov	r2, #268435456
 3750 002e 134B     		ldr	r3, .L355+4
 3751 0030 1A60     		str	r2, [r3]
 3752              		.syntax unified
 3753              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3754 0032 BFF34F8F 		dsb
 3755              	@ 0 "" 2
 3756              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3757 0036 BFF36F8F 		isb
 3758              	@ 0 "" 2
 3759              		.thumb
 3760              		.syntax unified
 3761              	.L351:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3762              		.loc 1 4459 0
 3763 003a FFF7FEFF 		bl	vPortExitCritical
 3764              	.LVL329:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3765              		.loc 1 4461 0
 3766 003e FFF7FEFF 		bl	vPortEnterCritical
 3767              	.LVL330:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3768              		.loc 1 4464 0
 3769 0042 0D4B     		ldr	r3, .L355
 3770 0044 D3F80432 		ldr	r3, [r3, #516]
 3771 0048 9C6D     		ldr	r4, [r3, #88]
 3772              	.LVL331:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3773              		.loc 1 4466 0
 3774 004a 5CB1     		cbz	r4, .L352
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3775              		.loc 1 4468 0
 3776 004c 2DB1     		cbz	r5, .L353
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3777              		.loc 1 4470 0
 3778 004e 0A4B     		ldr	r3, .L355
 3779 0050 D3F80432 		ldr	r3, [r3, #516]
 3780 0054 0022     		movs	r2, #0
 3781 0056 9A65     		str	r2, [r3, #88]
 3782 0058 04E0     		b	.L352
 3783              	.L353:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3784              		.loc 1 4474 0
 3785 005a 074B     		ldr	r3, .L355
 3786 005c D3F80432 		ldr	r3, [r3, #516]
 3787 0060 621E     		subs	r2, r4, #1
 3788 0062 9A65     		str	r2, [r3, #88]
 3789              	.L352:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3790              		.loc 1 4482 0
 3791 0064 044B     		ldr	r3, .L355
 3792 0066 D3F80432 		ldr	r3, [r3, #516]
 3793 006a 0022     		movs	r2, #0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 167


 3794 006c 83F85C20 		strb	r2, [r3, #92]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3795              		.loc 1 4484 0
 3796 0070 FFF7FEFF 		bl	vPortExitCritical
 3797              	.LVL332:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3798              		.loc 1 4487 0
 3799 0074 2046     		mov	r0, r4
 3800 0076 38BD     		pop	{r3, r4, r5, pc}
 3801              	.LVL333:
 3802              	.L356:
 3803              		.align	2
 3804              	.L355:
 3805 0078 00000000 		.word	.LANCHOR0
 3806 007c 04ED00E0 		.word	-536810236
 3807              		.cfi_endproc
 3808              	.LFE554:
 3809              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3810              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3811              		.align	2
 3812              		.global	xTaskNotifyWait
 3813              		.thumb
 3814              		.thumb_func
 3815              		.type	xTaskNotifyWait, %function
 3816              	xTaskNotifyWait:
 3817              	.LFB555:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3818              		.loc 1 4495 0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 0
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 3822              	.LVL334:
 3823 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3824              		.cfi_def_cfa_offset 24
 3825              		.cfi_offset 3, -24
 3826              		.cfi_offset 4, -20
 3827              		.cfi_offset 5, -16
 3828              		.cfi_offset 6, -12
 3829              		.cfi_offset 7, -8
 3830              		.cfi_offset 14, -4
 3831 0002 0746     		mov	r7, r0
 3832 0004 0D46     		mov	r5, r1
 3833 0006 1446     		mov	r4, r2
 3834 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3835              		.loc 1 4498 0
 3836 000a FFF7FEFF 		bl	vPortEnterCritical
 3837              	.LVL335:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3838              		.loc 1 4501 0
 3839 000e 234B     		ldr	r3, .L363
 3840 0010 D3F80432 		ldr	r3, [r3, #516]
 3841 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3842 0018 DBB2     		uxtb	r3, r3
 3843 001a 022B     		cmp	r3, #2
 3844 001c 18D0     		beq	.L358
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 168


 3845              		.loc 1 4506 0
 3846 001e 1F4B     		ldr	r3, .L363
 3847 0020 D3F80422 		ldr	r2, [r3, #516]
 3848 0024 906D     		ldr	r0, [r2, #88]
 3849 0026 20EA0700 		bic	r0, r0, r7
 3850 002a 9065     		str	r0, [r2, #88]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3851              		.loc 1 4509 0
 3852 002c D3F80432 		ldr	r3, [r3, #516]
 3853 0030 0122     		movs	r2, #1
 3854 0032 83F85C20 		strb	r2, [r3, #92]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3855              		.loc 1 4511 0
 3856 0036 5EB1     		cbz	r6, .L358
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3857              		.loc 1 4513 0
 3858 0038 1146     		mov	r1, r2
 3859 003a 3046     		mov	r0, r6
 3860 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3861              	.LVL336:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3862              		.loc 1 4520 0
 3863 0040 4FF08052 		mov	r2, #268435456
 3864 0044 164B     		ldr	r3, .L363+4
 3865 0046 1A60     		str	r2, [r3]
 3866              		.syntax unified
 3867              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3868 0048 BFF34F8F 		dsb
 3869              	@ 0 "" 2
 3870              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3871 004c BFF36F8F 		isb
 3872              	@ 0 "" 2
 3873              		.thumb
 3874              		.syntax unified
 3875              	.L358:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3876              		.loc 1 4532 0
 3877 0050 FFF7FEFF 		bl	vPortExitCritical
 3878              	.LVL337:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3879              		.loc 1 4534 0
 3880 0054 FFF7FEFF 		bl	vPortEnterCritical
 3881              	.LVL338:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3882              		.loc 1 4538 0
 3883 0058 24B1     		cbz	r4, .L359
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3884              		.loc 1 4542 0
 3885 005a 104B     		ldr	r3, .L363
 3886 005c D3F80432 		ldr	r3, [r3, #516]
 3887 0060 9B6D     		ldr	r3, [r3, #88]
 3888 0062 2360     		str	r3, [r4]
 3889              	.L359:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3890              		.loc 1 4549 0
 3891 0064 0D4B     		ldr	r3, .L363
 3892 0066 D3F80432 		ldr	r3, [r3, #516]
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 169


 3893 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3894 006e DBB2     		uxtb	r3, r3
 3895 0070 022B     		cmp	r3, #2
 3896 0072 08D1     		bne	.L361
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 3897              		.loc 1 4558 0
 3898 0074 094B     		ldr	r3, .L363
 3899 0076 D3F80422 		ldr	r2, [r3, #516]
 3900 007a 936D     		ldr	r3, [r2, #88]
 3901 007c 23EA0505 		bic	r5, r3, r5
 3902              	.LVL339:
 3903 0080 9565     		str	r5, [r2, #88]
 3904              	.LVL340:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3905              		.loc 1 4559 0
 3906 0082 0124     		movs	r4, #1
 3907              	.LVL341:
 3908 0084 00E0     		b	.L360
 3909              	.LVL342:
 3910              	.L361:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3911              		.loc 1 4552 0
 3912 0086 0024     		movs	r4, #0
 3913              	.LVL343:
 3914              	.L360:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3915              		.loc 1 4562 0
 3916 0088 044B     		ldr	r3, .L363
 3917 008a D3F80432 		ldr	r3, [r3, #516]
 3918 008e 0022     		movs	r2, #0
 3919 0090 83F85C20 		strb	r2, [r3, #92]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3920              		.loc 1 4564 0
 3921 0094 FFF7FEFF 		bl	vPortExitCritical
 3922              	.LVL344:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3923              		.loc 1 4567 0
 3924 0098 2046     		mov	r0, r4
 3925 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3926              	.LVL345:
 3927              	.L364:
 3928              		.align	2
 3929              	.L363:
 3930 009c 00000000 		.word	.LANCHOR0
 3931 00a0 04ED00E0 		.word	-536810236
 3932              		.cfi_endproc
 3933              	.LFE555:
 3934              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3935              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3936              		.align	2
 3937              		.global	xTaskGenericNotify
 3938              		.thumb
 3939              		.thumb_func
 3940              		.type	xTaskGenericNotify, %function
 3941              	xTaskGenericNotify:
 3942              	.LFB556:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 170


 3943              		.loc 1 4575 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 0
 3946              		@ frame_needed = 0, uses_anonymous_args = 0
 3947              	.LVL346:
 3948 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3949              		.cfi_def_cfa_offset 24
 3950              		.cfi_offset 3, -24
 3951              		.cfi_offset 4, -20
 3952              		.cfi_offset 5, -16
 3953              		.cfi_offset 6, -12
 3954              		.cfi_offset 7, -8
 3955              		.cfi_offset 14, -4
 3956              	.LVL347:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3957              		.loc 1 4580 0
 3958 0002 40B9     		cbnz	r0, .L366
 3959              	.LBB170:
 3960              	.LBB171:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3961              		.loc 2 156 0
 3962              		.syntax unified
 3963              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3964 0004 4FF0BF03 			mov r3, #191												
 3965 0008 83F31188 		msr basepri, r3											
 3966 000c BFF36F8F 		isb														
 3967 0010 BFF34F8F 		dsb														
 3968              	
 3969              	@ 0 "" 2
 3970              	.LVL348:
 3971              		.thumb
 3972              		.syntax unified
 3973              	.L367:
 3974 0014 FEE7     		b	.L367
 3975              	.LVL349:
 3976              	.L366:
 3977 0016 0446     		mov	r4, r0
 3978 0018 1F46     		mov	r7, r3
 3979 001a 1546     		mov	r5, r2
 3980 001c 0E46     		mov	r6, r1
 3981              	.LVL350:
 3982              	.LBE171:
 3983              	.LBE170:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3984              		.loc 1 4583 0
 3985 001e FFF7FEFF 		bl	vPortEnterCritical
 3986              	.LVL351:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3987              		.loc 1 4585 0
 3988 0022 0FB1     		cbz	r7, .L368
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3989              		.loc 1 4587 0
 3990 0024 A36D     		ldr	r3, [r4, #88]
 3991 0026 3B60     		str	r3, [r7]
 3992              	.L368:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3993              		.loc 1 4590 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 171


 3994 0028 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3995 002c DBB2     		uxtb	r3, r3
 3996              	.LVL352:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3997              		.loc 1 4592 0
 3998 002e 0222     		movs	r2, #2
 3999 0030 84F85C20 		strb	r2, [r4, #92]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4000              		.loc 1 4594 0
 4001 0034 6A1E     		subs	r2, r5, #1
 4002 0036 032A     		cmp	r2, #3
 4003 0038 15D8     		bhi	.L379
 4004 003a DFE802F0 		tbb	[pc, r2]
 4005              	.L371:
 4006 003e 02       		.byte	(.L370-.L371)/2
 4007 003f 07       		.byte	(.L372-.L371)/2
 4008 0040 0C       		.byte	(.L373-.L371)/2
 4009 0041 0F       		.byte	(.L374-.L371)/2
 4010              		.p2align 1
 4011              	.L370:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4012              		.loc 1 4597 0
 4013 0042 A26D     		ldr	r2, [r4, #88]
 4014 0044 1643     		orrs	r6, r6, r2
 4015              	.LVL353:
 4016 0046 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4017              		.loc 1 4577 0
 4018 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4019              		.loc 1 4598 0
 4020 004a 0FE0     		b	.L369
 4021              	.LVL354:
 4022              	.L372:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4023              		.loc 1 4601 0
 4024 004c A26D     		ldr	r2, [r4, #88]
 4025 004e 0132     		adds	r2, r2, #1
 4026 0050 A265     		str	r2, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4027              		.loc 1 4577 0
 4028 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4029              		.loc 1 4602 0
 4030 0054 0AE0     		b	.L369
 4031              	.L373:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4032              		.loc 1 4605 0
 4033 0056 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4034              		.loc 1 4577 0
 4035 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4036              		.loc 1 4606 0
 4037 005a 07E0     		b	.L369
 4038              	.L374:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 172


 4039              		.loc 1 4609 0
 4040 005c 022B     		cmp	r3, #2
 4041 005e 04D0     		beq	.L380
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4042              		.loc 1 4611 0
 4043 0060 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4044              		.loc 1 4577 0
 4045 0062 0125     		movs	r5, #1
 4046 0064 02E0     		b	.L369
 4047              	.L379:
 4048 0066 0125     		movs	r5, #1
 4049 0068 00E0     		b	.L369
 4050              	.L380:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4051              		.loc 1 4616 0
 4052 006a 0025     		movs	r5, #0
 4053              	.LVL355:
 4054              	.L369:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4055              		.loc 1 4630 0
 4056 006c 012B     		cmp	r3, #1
 4057 006e 2ED1     		bne	.L375
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4058              		.loc 1 4632 0
 4059 0070 261D     		adds	r6, r4, #4
 4060 0072 3046     		mov	r0, r6
 4061 0074 FFF7FEFF 		bl	uxListRemove
 4062              	.LVL356:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4063              		.loc 1 4633 0
 4064 0078 E36A     		ldr	r3, [r4, #44]
 4065 007a 174A     		ldr	r2, .L382
 4066 007c D2F81022 		ldr	r2, [r2, #528]
 4067 0080 9342     		cmp	r3, r2
 4068 0082 02D9     		bls	.L376
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4069              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4070 0084 144A     		ldr	r2, .L382
 4071 0086 C2F81032 		str	r3, [r2, #528]
 4072              	.L376:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4073              		.loc 1 4633 0 discriminator 3
 4074 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4075 008e 9A00     		lsls	r2, r3, #2
 4076 0090 3146     		mov	r1, r6
 4077 0092 1248     		ldr	r0, .L382+4
 4078 0094 1044     		add	r0, r0, r2
 4079 0096 FFF7FEFF 		bl	vListInsertEnd
 4080              	.LVL357:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4081              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4082 009a A36A     		ldr	r3, [r4, #40]
 4083 009c 43B1     		cbz	r3, .L377
 4084              	.LBB172:
 4085              	.LBB173:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 173


 4086              		.loc 2 156 0
 4087              		.syntax unified
 4088              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4089 009e 4FF0BF03 			mov r3, #191												
 4090 00a2 83F31188 		msr basepri, r3											
 4091 00a6 BFF36F8F 		isb														
 4092 00aa BFF34F8F 		dsb														
 4093              	
 4094              	@ 0 "" 2
 4095              	.LVL358:
 4096              		.thumb
 4097              		.syntax unified
 4098              	.L378:
 4099 00ae FEE7     		b	.L378
 4100              	.L377:
 4101              	.LBE173:
 4102              	.LBE172:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4103              		.loc 1 4654 0
 4104 00b0 E26A     		ldr	r2, [r4, #44]
 4105 00b2 094B     		ldr	r3, .L382
 4106 00b4 D3F80432 		ldr	r3, [r3, #516]
 4107 00b8 DB6A     		ldr	r3, [r3, #44]
 4108 00ba 9A42     		cmp	r2, r3
 4109 00bc 07D9     		bls	.L375
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4110              		.loc 1 4658 0
 4111 00be 4FF08052 		mov	r2, #268435456
 4112 00c2 074B     		ldr	r3, .L382+8
 4113 00c4 1A60     		str	r2, [r3]
 4114              		.syntax unified
 4115              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4116 00c6 BFF34F8F 		dsb
 4117              	@ 0 "" 2
 4118              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4119 00ca BFF36F8F 		isb
 4120              	@ 0 "" 2
 4121              		.thumb
 4122              		.syntax unified
 4123              	.L375:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4124              		.loc 1 4670 0
 4125 00ce FFF7FEFF 		bl	vPortExitCritical
 4126              	.LVL359:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4127              		.loc 1 4673 0
 4128 00d2 2846     		mov	r0, r5
 4129 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4130              	.LVL360:
 4131              	.L383:
 4132 00d6 00BF     		.align	2
 4133              	.L382:
 4134 00d8 00000000 		.word	.LANCHOR0
 4135 00dc 30000000 		.word	.LANCHOR0+48
 4136 00e0 04ED00E0 		.word	-536810236
 4137              		.cfi_endproc
 4138              	.LFE556:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 174


 4139              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4140              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4141              		.align	2
 4142              		.global	xTaskGenericNotifyFromISR
 4143              		.thumb
 4144              		.thumb_func
 4145              		.type	xTaskGenericNotifyFromISR, %function
 4146              	xTaskGenericNotifyFromISR:
 4147              	.LFB557:
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4148              		.loc 1 4681 0
 4149              		.cfi_startproc
 4150              		@ args = 4, pretend = 0, frame = 0
 4151              		@ frame_needed = 0, uses_anonymous_args = 0
 4152              	.LVL361:
 4153 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4154              		.cfi_def_cfa_offset 32
 4155              		.cfi_offset 3, -32
 4156              		.cfi_offset 4, -28
 4157              		.cfi_offset 5, -24
 4158              		.cfi_offset 6, -20
 4159              		.cfi_offset 7, -16
 4160              		.cfi_offset 8, -12
 4161              		.cfi_offset 9, -8
 4162              		.cfi_offset 14, -4
 4163 0004 089E     		ldr	r6, [sp, #32]
 4164              	.LVL362:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4165              		.loc 1 4687 0
 4166 0006 40B9     		cbnz	r0, .L385
 4167              	.LBB174:
 4168              	.LBB175:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4169              		.loc 2 156 0
 4170              		.syntax unified
 4171              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4172 0008 4FF0BF03 			mov r3, #191												
 4173 000c 83F31188 		msr basepri, r3											
 4174 0010 BFF36F8F 		isb														
 4175 0014 BFF34F8F 		dsb														
 4176              	
 4177              	@ 0 "" 2
 4178              	.LVL363:
 4179              		.thumb
 4180              		.syntax unified
 4181              	.L386:
 4182 0018 FEE7     		b	.L386
 4183              	.LVL364:
 4184              	.L385:
 4185 001a 0446     		mov	r4, r0
 4186 001c 9946     		mov	r9, r3
 4187 001e 1546     		mov	r5, r2
 4188 0020 8846     		mov	r8, r1
 4189              	.LBE175:
 4190              	.LBE174:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4191              		.loc 1 4705 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 175


 4192 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4193              	.LVL365:
 4194              	.LBB176:
 4195              	.LBB177:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4196              		.loc 2 172 0
 4197              		.syntax unified
 4198              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4199 0026 EFF31187 			mrs r7, basepri											
 4200 002a 4FF0BF03 		mov r3, #191												
 4201 002e 83F31188 		msr basepri, r3											
 4202 0032 BFF36F8F 		isb														
 4203 0036 BFF34F8F 		dsb														
 4204              	
 4205              	@ 0 "" 2
 4206              		.thumb
 4207              		.syntax unified
 4208              	.LBE177:
 4209              	.LBE176:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4210              		.loc 1 4711 0
 4211 003a B9F1000F 		cmp	r9, #0
 4212 003e 02D0     		beq	.L387
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4213              		.loc 1 4713 0
 4214 0040 A36D     		ldr	r3, [r4, #88]
 4215 0042 C9F80030 		str	r3, [r9]
 4216              	.L387:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4217              		.loc 1 4716 0
 4218 0046 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4219 004a DBB2     		uxtb	r3, r3
 4220              	.LVL366:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4221              		.loc 1 4717 0
 4222 004c 0222     		movs	r2, #2
 4223 004e 84F85C20 		strb	r2, [r4, #92]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4224              		.loc 1 4719 0
 4225 0052 6A1E     		subs	r2, r5, #1
 4226 0054 032A     		cmp	r2, #3
 4227 0056 18D8     		bhi	.L401
 4228 0058 DFE802F0 		tbb	[pc, r2]
 4229              	.L390:
 4230 005c 02       		.byte	(.L389-.L390)/2
 4231 005d 08       		.byte	(.L391-.L390)/2
 4232 005e 0D       		.byte	(.L392-.L390)/2
 4233 005f 11       		.byte	(.L393-.L390)/2
 4234              		.p2align 1
 4235              	.L389:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4236              		.loc 1 4722 0
 4237 0060 A26D     		ldr	r2, [r4, #88]
 4238 0062 42EA0802 		orr	r2, r2, r8
 4239 0066 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4240              		.loc 1 4684 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 176


 4241 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4242              		.loc 1 4723 0
 4243 006a 11E0     		b	.L388
 4244              	.L391:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4245              		.loc 1 4726 0
 4246 006c A26D     		ldr	r2, [r4, #88]
 4247 006e 0132     		adds	r2, r2, #1
 4248 0070 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4249              		.loc 1 4684 0
 4250 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4251              		.loc 1 4727 0
 4252 0074 0CE0     		b	.L388
 4253              	.L392:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4254              		.loc 1 4730 0
 4255 0076 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4256              		.loc 1 4684 0
 4257 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4258              		.loc 1 4731 0
 4259 007c 08E0     		b	.L388
 4260              	.L393:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4261              		.loc 1 4734 0
 4262 007e 022B     		cmp	r3, #2
 4263 0080 05D0     		beq	.L402
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4264              		.loc 1 4736 0
 4265 0082 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4266              		.loc 1 4684 0
 4267 0086 0125     		movs	r5, #1
 4268 0088 02E0     		b	.L388
 4269              	.L401:
 4270 008a 0125     		movs	r5, #1
 4271 008c 00E0     		b	.L388
 4272              	.L402:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4273              		.loc 1 4741 0
 4274 008e 0025     		movs	r5, #0
 4275              	.L388:
 4276              	.LVL367:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4277              		.loc 1 4755 0
 4278 0090 012B     		cmp	r3, #1
 4279 0092 39D1     		bne	.L394
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4280              		.loc 1 4758 0
 4281 0094 A36A     		ldr	r3, [r4, #40]
 4282              	.LVL368:
 4283 0096 43B1     		cbz	r3, .L395
 4284              	.LBB178:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 177


 4285              	.LBB179:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4286              		.loc 2 156 0
 4287              		.syntax unified
 4288              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4289 0098 4FF0BF03 			mov r3, #191												
 4290 009c 83F31188 		msr basepri, r3											
 4291 00a0 BFF36F8F 		isb														
 4292 00a4 BFF34F8F 		dsb														
 4293              	
 4294              	@ 0 "" 2
 4295              	.LVL369:
 4296              		.thumb
 4297              		.syntax unified
 4298              	.L396:
 4299 00a8 FEE7     		b	.L396
 4300              	.L395:
 4301              	.LBE179:
 4302              	.LBE178:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4303              		.loc 1 4760 0
 4304 00aa 1A4B     		ldr	r3, .L404
 4305 00ac D3F81C32 		ldr	r3, [r3, #540]
 4306 00b0 B3B9     		cbnz	r3, .L397
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4307              		.loc 1 4762 0
 4308 00b2 04F10408 		add	r8, r4, #4
 4309              	.LVL370:
 4310 00b6 4046     		mov	r0, r8
 4311 00b8 FFF7FEFF 		bl	uxListRemove
 4312              	.LVL371:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4313              		.loc 1 4763 0
 4314 00bc E36A     		ldr	r3, [r4, #44]
 4315 00be 154A     		ldr	r2, .L404
 4316 00c0 D2F81022 		ldr	r2, [r2, #528]
 4317 00c4 9342     		cmp	r3, r2
 4318 00c6 02D9     		bls	.L398
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4319              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4320 00c8 124A     		ldr	r2, .L404
 4321 00ca C2F81032 		str	r3, [r2, #528]
 4322              	.L398:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4323              		.loc 1 4763 0 discriminator 3
 4324 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4325 00d2 9A00     		lsls	r2, r3, #2
 4326 00d4 4146     		mov	r1, r8
 4327 00d6 1048     		ldr	r0, .L404+4
 4328 00d8 1044     		add	r0, r0, r2
 4329 00da FFF7FEFF 		bl	vListInsertEnd
 4330              	.LVL372:
 4331 00de 04E0     		b	.L399
 4332              	.LVL373:
 4333              	.L397:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4334              		.loc 1 4769 0 is_stmt 1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 178


 4335 00e0 04F11801 		add	r1, r4, #24
 4336 00e4 0D48     		ldr	r0, .L404+8
 4337 00e6 FFF7FEFF 		bl	vListInsertEnd
 4338              	.LVL374:
 4339              	.L399:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4340              		.loc 1 4772 0
 4341 00ea E26A     		ldr	r2, [r4, #44]
 4342 00ec 094B     		ldr	r3, .L404
 4343 00ee D3F80432 		ldr	r3, [r3, #516]
 4344 00f2 DB6A     		ldr	r3, [r3, #44]
 4345 00f4 9A42     		cmp	r2, r3
 4346 00f6 07D9     		bls	.L394
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4347              		.loc 1 4776 0
 4348 00f8 16B1     		cbz	r6, .L400
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4349              		.loc 1 4778 0
 4350 00fa 0123     		movs	r3, #1
 4351 00fc 3360     		str	r3, [r6]
 4352 00fe 03E0     		b	.L394
 4353              	.L400:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4354              		.loc 1 4785 0
 4355 0100 0122     		movs	r2, #1
 4356 0102 044B     		ldr	r3, .L404
 4357 0104 C3F82C22 		str	r2, [r3, #556]
 4358              	.L394:
 4359              	.LVL375:
 4360              	.LBB180:
 4361              	.LBB181:
 4362              		.loc 2 190 0
 4363              		.syntax unified
 4364              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4365 0108 87F31188 			msr basepri, r7	
 4366              	@ 0 "" 2
 4367              	.LVL376:
 4368              		.thumb
 4369              		.syntax unified
 4370              	.LBE181:
 4371              	.LBE180:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4372              		.loc 1 4797 0
 4373 010c 2846     		mov	r0, r5
 4374 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4375              	.LVL377:
 4376              	.L405:
 4377 0112 00BF     		.align	2
 4378              	.L404:
 4379 0114 00000000 		.word	.LANCHOR0
 4380 0118 30000000 		.word	.LANCHOR0+48
 4381 011c 14000000 		.word	.LANCHOR0+20
 4382              		.cfi_endproc
 4383              	.LFE557:
 4384              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4385              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4386              		.align	2
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 179


 4387              		.global	vTaskNotifyGiveFromISR
 4388              		.thumb
 4389              		.thumb_func
 4390              		.type	vTaskNotifyGiveFromISR, %function
 4391              	vTaskNotifyGiveFromISR:
 4392              	.LFB558:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4393              		.loc 1 4805 0
 4394              		.cfi_startproc
 4395              		@ args = 0, pretend = 0, frame = 0
 4396              		@ frame_needed = 0, uses_anonymous_args = 0
 4397              	.LVL378:
 4398 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4399              		.cfi_def_cfa_offset 24
 4400              		.cfi_offset 3, -24
 4401              		.cfi_offset 4, -20
 4402              		.cfi_offset 5, -16
 4403              		.cfi_offset 6, -12
 4404              		.cfi_offset 7, -8
 4405              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4406              		.loc 1 4810 0
 4407 0002 40B9     		cbnz	r0, .L407
 4408              	.LBB182:
 4409              	.LBB183:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4410              		.loc 2 156 0
 4411              		.syntax unified
 4412              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4413 0004 4FF0BF03 			mov r3, #191												
 4414 0008 83F31188 		msr basepri, r3											
 4415 000c BFF36F8F 		isb														
 4416 0010 BFF34F8F 		dsb														
 4417              	
 4418              	@ 0 "" 2
 4419              	.LVL379:
 4420              		.thumb
 4421              		.syntax unified
 4422              	.L408:
 4423 0014 FEE7     		b	.L408
 4424              	.L407:
 4425 0016 0446     		mov	r4, r0
 4426 0018 0D46     		mov	r5, r1
 4427              	.LBE183:
 4428              	.LBE182:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4429              		.loc 1 4828 0
 4430 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4431              	.LVL380:
 4432              	.LBB184:
 4433              	.LBB185:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4434              		.loc 2 172 0
 4435              		.syntax unified
 4436              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4437 001e EFF31186 			mrs r6, basepri											
 4438 0022 4FF0BF03 		mov r3, #191												
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 180


 4439 0026 83F31188 		msr basepri, r3											
 4440 002a BFF36F8F 		isb														
 4441 002e BFF34F8F 		dsb														
 4442              	
 4443              	@ 0 "" 2
 4444              		.thumb
 4445              		.syntax unified
 4446              	.LBE185:
 4447              	.LBE184:
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4448              		.loc 1 4834 0
 4449 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4450 0036 DBB2     		uxtb	r3, r3
 4451              	.LVL381:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4452              		.loc 1 4835 0
 4453 0038 0222     		movs	r2, #2
 4454 003a 84F85C20 		strb	r2, [r4, #92]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4455              		.loc 1 4839 0
 4456 003e A26D     		ldr	r2, [r4, #88]
 4457 0040 0132     		adds	r2, r2, #1
 4458 0042 A265     		str	r2, [r4, #88]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4459              		.loc 1 4845 0
 4460 0044 012B     		cmp	r3, #1
 4461 0046 38D1     		bne	.L409
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4462              		.loc 1 4848 0
 4463 0048 A36A     		ldr	r3, [r4, #40]
 4464              	.LVL382:
 4465 004a 43B1     		cbz	r3, .L410
 4466              	.LBB186:
 4467              	.LBB187:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4468              		.loc 2 156 0
 4469              		.syntax unified
 4470              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4471 004c 4FF0BF03 			mov r3, #191												
 4472 0050 83F31188 		msr basepri, r3											
 4473 0054 BFF36F8F 		isb														
 4474 0058 BFF34F8F 		dsb														
 4475              	
 4476              	@ 0 "" 2
 4477              	.LVL383:
 4478              		.thumb
 4479              		.syntax unified
 4480              	.L411:
 4481 005c FEE7     		b	.L411
 4482              	.L410:
 4483              	.LBE187:
 4484              	.LBE186:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4485              		.loc 1 4850 0
 4486 005e 184B     		ldr	r3, .L417
 4487 0060 D3F81C32 		ldr	r3, [r3, #540]
 4488 0064 ABB9     		cbnz	r3, .L412
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 181


4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4489              		.loc 1 4852 0
 4490 0066 271D     		adds	r7, r4, #4
 4491 0068 3846     		mov	r0, r7
 4492 006a FFF7FEFF 		bl	uxListRemove
 4493              	.LVL384:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4494              		.loc 1 4853 0
 4495 006e E36A     		ldr	r3, [r4, #44]
 4496 0070 134A     		ldr	r2, .L417
 4497 0072 D2F81022 		ldr	r2, [r2, #528]
 4498 0076 9342     		cmp	r3, r2
 4499 0078 02D9     		bls	.L413
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4500              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4501 007a 114A     		ldr	r2, .L417
 4502 007c C2F81032 		str	r3, [r2, #528]
 4503              	.L413:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4504              		.loc 1 4853 0 discriminator 3
 4505 0080 03EB8303 		add	r3, r3, r3, lsl #2
 4506 0084 9A00     		lsls	r2, r3, #2
 4507 0086 3946     		mov	r1, r7
 4508 0088 0E48     		ldr	r0, .L417+4
 4509 008a 1044     		add	r0, r0, r2
 4510 008c FFF7FEFF 		bl	vListInsertEnd
 4511              	.LVL385:
 4512 0090 04E0     		b	.L414
 4513              	.L412:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4514              		.loc 1 4859 0 is_stmt 1
 4515 0092 04F11801 		add	r1, r4, #24
 4516 0096 0C48     		ldr	r0, .L417+8
 4517 0098 FFF7FEFF 		bl	vListInsertEnd
 4518              	.LVL386:
 4519              	.L414:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4520              		.loc 1 4862 0
 4521 009c E26A     		ldr	r2, [r4, #44]
 4522 009e 084B     		ldr	r3, .L417
 4523 00a0 D3F80432 		ldr	r3, [r3, #516]
 4524 00a4 DB6A     		ldr	r3, [r3, #44]
 4525 00a6 9A42     		cmp	r2, r3
 4526 00a8 07D9     		bls	.L409
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4527              		.loc 1 4866 0
 4528 00aa 15B1     		cbz	r5, .L415
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4529              		.loc 1 4868 0
 4530 00ac 0123     		movs	r3, #1
 4531 00ae 2B60     		str	r3, [r5]
 4532 00b0 03E0     		b	.L409
 4533              	.L415:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4534              		.loc 1 4875 0
 4535 00b2 0122     		movs	r2, #1
 4536 00b4 024B     		ldr	r3, .L417
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 182


 4537 00b6 C3F82C22 		str	r2, [r3, #556]
 4538              	.L409:
 4539              	.LVL387:
 4540              	.LBB188:
 4541              	.LBB189:
 4542              		.loc 2 190 0
 4543              		.syntax unified
 4544              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4545 00ba 86F31188 			msr basepri, r6	
 4546              	@ 0 "" 2
 4547              	.LVL388:
 4548              		.thumb
 4549              		.syntax unified
 4550 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4551              	.LVL389:
 4552              	.L418:
 4553              		.align	2
 4554              	.L417:
 4555 00c0 00000000 		.word	.LANCHOR0
 4556 00c4 30000000 		.word	.LANCHOR0+48
 4557 00c8 14000000 		.word	.LANCHOR0+20
 4558              	.LBE189:
 4559              	.LBE188:
 4560              		.cfi_endproc
 4561              	.LFE558:
 4562              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4563              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4564              		.align	2
 4565              		.global	xTaskNotifyStateClear
 4566              		.thumb
 4567              		.thumb_func
 4568              		.type	xTaskNotifyStateClear, %function
 4569              	xTaskNotifyStateClear:
 4570              	.LFB559:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 4571              		.loc 1 4894 0
 4572              		.cfi_startproc
 4573              		@ args = 0, pretend = 0, frame = 0
 4574              		@ frame_needed = 0, uses_anonymous_args = 0
 4575              	.LVL390:
 4576 0000 10B5     		push	{r4, lr}
 4577              		.cfi_def_cfa_offset 8
 4578              		.cfi_offset 4, -8
 4579              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4580              		.loc 1 4900 0
 4581 0002 0446     		mov	r4, r0
 4582 0004 10B9     		cbnz	r0, .L420
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4583              		.loc 1 4900 0 is_stmt 0 discriminator 1
 4584 0006 0A4B     		ldr	r3, .L424
 4585 0008 D3F80442 		ldr	r4, [r3, #516]
 4586              	.LVL391:
 4587              	.L420:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4588              		.loc 1 4902 0 is_stmt 1 discriminator 4
 4589 000c FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 183


 4590              	.LVL392:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4591              		.loc 1 4904 0 discriminator 4
 4592 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4593 0014 DBB2     		uxtb	r3, r3
 4594 0016 022B     		cmp	r3, #2
 4595 0018 04D1     		bne	.L422
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 4596              		.loc 1 4906 0
 4597 001a 0023     		movs	r3, #0
 4598 001c 84F85C30 		strb	r3, [r4, #92]
 4599              	.LVL393:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4600              		.loc 1 4907 0
 4601 0020 0124     		movs	r4, #1
 4602              	.LVL394:
 4603 0022 00E0     		b	.L421
 4604              	.LVL395:
 4605              	.L422:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4606              		.loc 1 4911 0
 4607 0024 0024     		movs	r4, #0
 4608              	.LVL396:
 4609              	.L421:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4610              		.loc 1 4914 0
 4611 0026 FFF7FEFF 		bl	vPortExitCritical
 4612              	.LVL397:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4613              		.loc 1 4917 0
 4614 002a 2046     		mov	r0, r4
 4615 002c 10BD     		pop	{r4, pc}
 4616              	.LVL398:
 4617              	.L425:
 4618 002e 00BF     		.align	2
 4619              	.L424:
 4620 0030 00000000 		.word	.LANCHOR0
 4621              		.cfi_endproc
 4622              	.LFE559:
 4623              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4624              		.global	pxCurrentTCB
 4625              		.section	.rodata.str1.4,"aMS",%progbits,1
 4626              		.align	2
 4627              	.LC0:
 4628 0000 49444C45 		.ascii	"IDLE\000"
 4628      00
 4629              		.bss
 4630              		.align	2
 4631              		.set	.LANCHOR0,. + 0
 4632              		.type	xSuspendedTaskList, %object
 4633              		.size	xSuspendedTaskList, 20
 4634              	xSuspendedTaskList:
 4635 0000 00000000 		.space	20
 4635      00000000 
 4635      00000000 
 4635      00000000 
 4635      00000000 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 184


 4636              		.type	xPendingReadyList, %object
 4637              		.size	xPendingReadyList, 20
 4638              	xPendingReadyList:
 4639 0014 00000000 		.space	20
 4639      00000000 
 4639      00000000 
 4639      00000000 
 4639      00000000 
 4640              		.type	pxDelayedTaskList, %object
 4641              		.size	pxDelayedTaskList, 4
 4642              	pxDelayedTaskList:
 4643 0028 00000000 		.space	4
 4644              		.type	xNextTaskUnblockTime, %object
 4645              		.size	xNextTaskUnblockTime, 4
 4646              	xNextTaskUnblockTime:
 4647 002c 00000000 		.space	4
 4648              		.type	pxReadyTasksLists, %object
 4649              		.size	pxReadyTasksLists, 400
 4650              	pxReadyTasksLists:
 4651 0030 00000000 		.space	400
 4651      00000000 
 4651      00000000 
 4651      00000000 
 4651      00000000 
 4652              		.type	xDelayedTaskList1, %object
 4653              		.size	xDelayedTaskList1, 20
 4654              	xDelayedTaskList1:
 4655 01c0 00000000 		.space	20
 4655      00000000 
 4655      00000000 
 4655      00000000 
 4655      00000000 
 4656              		.type	xDelayedTaskList2, %object
 4657              		.size	xDelayedTaskList2, 20
 4658              	xDelayedTaskList2:
 4659 01d4 00000000 		.space	20
 4659      00000000 
 4659      00000000 
 4659      00000000 
 4659      00000000 
 4660              		.type	xTasksWaitingTermination, %object
 4661              		.size	xTasksWaitingTermination, 20
 4662              	xTasksWaitingTermination:
 4663 01e8 00000000 		.space	20
 4663      00000000 
 4663      00000000 
 4663      00000000 
 4663      00000000 
 4664              		.type	pxOverflowDelayedTaskList, %object
 4665              		.size	pxOverflowDelayedTaskList, 4
 4666              	pxOverflowDelayedTaskList:
 4667 01fc 00000000 		.space	4
 4668              		.type	uxCurrentNumberOfTasks, %object
 4669              		.size	uxCurrentNumberOfTasks, 4
 4670              	uxCurrentNumberOfTasks:
 4671 0200 00000000 		.space	4
 4672              		.type	pxCurrentTCB, %object
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 185


 4673              		.size	pxCurrentTCB, 4
 4674              	pxCurrentTCB:
 4675 0204 00000000 		.space	4
 4676              		.type	xSchedulerRunning, %object
 4677              		.size	xSchedulerRunning, 4
 4678              	xSchedulerRunning:
 4679 0208 00000000 		.space	4
 4680              		.type	uxTaskNumber, %object
 4681              		.size	uxTaskNumber, 4
 4682              	uxTaskNumber:
 4683 020c 00000000 		.space	4
 4684              		.type	uxTopReadyPriority, %object
 4685              		.size	uxTopReadyPriority, 4
 4686              	uxTopReadyPriority:
 4687 0210 00000000 		.space	4
 4688              		.type	uxDeletedTasksWaitingCleanUp, %object
 4689              		.size	uxDeletedTasksWaitingCleanUp, 4
 4690              	uxDeletedTasksWaitingCleanUp:
 4691 0214 00000000 		.space	4
 4692              		.type	xTickCount, %object
 4693              		.size	xTickCount, 4
 4694              	xTickCount:
 4695 0218 00000000 		.space	4
 4696              		.type	uxSchedulerSuspended, %object
 4697              		.size	uxSchedulerSuspended, 4
 4698              	uxSchedulerSuspended:
 4699 021c 00000000 		.space	4
 4700              		.type	xIdleTaskHandle, %object
 4701              		.size	xIdleTaskHandle, 4
 4702              	xIdleTaskHandle:
 4703 0220 00000000 		.space	4
 4704              		.type	xNumOfOverflows, %object
 4705              		.size	xNumOfOverflows, 4
 4706              	xNumOfOverflows:
 4707 0224 00000000 		.space	4
 4708              		.type	uxPendedTicks, %object
 4709              		.size	uxPendedTicks, 4
 4710              	uxPendedTicks:
 4711 0228 00000000 		.space	4
 4712              		.type	xYieldPending, %object
 4713              		.size	xYieldPending, 4
 4714              	xYieldPending:
 4715 022c 00000000 		.space	4
 4716              		.text
 4717              	.Letext0:
 4718              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4719              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4720              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4721              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 4722              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_i2c.h"
 4723              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
 4724              		.file 9 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 4725              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 4726              		.file 11 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 4727              		.file 12 ".\\CMSIS\\Core\\Include/core_cm4.h"
 4728              		.file 13 "Generated_Source\\PSoC6/DEBUG_UART.h"
 4729              		.file 14 "Generated_Source\\PSoC6/I2Cm.h"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 186


 4730              		.file 15 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 4731              		.file 16 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 4732              		.file 17 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 4733              		.section	.debug_info,"",%progbits
 4734              	.Ldebug_info0:
 4735 0000 B6290000 		.4byte	0x29b6
 4736 0004 0400     		.2byte	0x4
 4737 0006 00000000 		.4byte	.Ldebug_abbrev0
 4738 000a 04       		.byte	0x4
 4739 000b 01       		.uleb128 0x1
 4740 000c B5030000 		.4byte	.LASF359
 4741 0010 0C       		.byte	0xc
 4742 0011 74140000 		.4byte	.LASF360
 4743 0015 5D050000 		.4byte	.LASF361
 4744 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4745 001d 00000000 		.4byte	0
 4746 0021 00000000 		.4byte	.Ldebug_line0
 4747 0025 02       		.uleb128 0x2
 4748 0026 04080000 		.4byte	.LASF4
 4749 002a 03       		.byte	0x3
 4750 002b D8       		.byte	0xd8
 4751 002c 30000000 		.4byte	0x30
 4752 0030 03       		.uleb128 0x3
 4753 0031 04       		.byte	0x4
 4754 0032 07       		.byte	0x7
 4755 0033 99010000 		.4byte	.LASF0
 4756 0037 04       		.uleb128 0x4
 4757 0038 04       		.byte	0x4
 4758 0039 05       		.byte	0x5
 4759 003a 696E7400 		.ascii	"int\000"
 4760 003e 03       		.uleb128 0x3
 4761 003f 08       		.byte	0x8
 4762 0040 05       		.byte	0x5
 4763 0041 EE0B0000 		.4byte	.LASF1
 4764 0045 03       		.uleb128 0x3
 4765 0046 08       		.byte	0x8
 4766 0047 04       		.byte	0x4
 4767 0048 D10E0000 		.4byte	.LASF2
 4768 004c 03       		.uleb128 0x3
 4769 004d 01       		.byte	0x1
 4770 004e 06       		.byte	0x6
 4771 004f 75150000 		.4byte	.LASF3
 4772 0053 02       		.uleb128 0x2
 4773 0054 A8110000 		.4byte	.LASF5
 4774 0058 04       		.byte	0x4
 4775 0059 1D       		.byte	0x1d
 4776 005a 5E000000 		.4byte	0x5e
 4777 005e 03       		.uleb128 0x3
 4778 005f 01       		.byte	0x1
 4779 0060 08       		.byte	0x8
 4780 0061 8A0F0000 		.4byte	.LASF6
 4781 0065 02       		.uleb128 0x2
 4782 0066 940C0000 		.4byte	.LASF7
 4783 006a 04       		.byte	0x4
 4784 006b 29       		.byte	0x29
 4785 006c 70000000 		.4byte	0x70
 4786 0070 03       		.uleb128 0x3
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 187


 4787 0071 02       		.byte	0x2
 4788 0072 05       		.byte	0x5
 4789 0073 E90F0000 		.4byte	.LASF8
 4790 0077 02       		.uleb128 0x2
 4791 0078 6C090000 		.4byte	.LASF9
 4792 007c 04       		.byte	0x4
 4793 007d 2B       		.byte	0x2b
 4794 007e 82000000 		.4byte	0x82
 4795 0082 03       		.uleb128 0x3
 4796 0083 02       		.byte	0x2
 4797 0084 07       		.byte	0x7
 4798 0085 AB0E0000 		.4byte	.LASF10
 4799 0089 02       		.uleb128 0x2
 4800 008a 32020000 		.4byte	.LASF11
 4801 008e 04       		.byte	0x4
 4802 008f 3F       		.byte	0x3f
 4803 0090 94000000 		.4byte	0x94
 4804 0094 03       		.uleb128 0x3
 4805 0095 04       		.byte	0x4
 4806 0096 05       		.byte	0x5
 4807 0097 47100000 		.4byte	.LASF12
 4808 009b 02       		.uleb128 0x2
 4809 009c 92130000 		.4byte	.LASF13
 4810 00a0 04       		.byte	0x4
 4811 00a1 41       		.byte	0x41
 4812 00a2 A6000000 		.4byte	0xa6
 4813 00a6 03       		.uleb128 0x3
 4814 00a7 04       		.byte	0x4
 4815 00a8 07       		.byte	0x7
 4816 00a9 8E120000 		.4byte	.LASF14
 4817 00ad 03       		.uleb128 0x3
 4818 00ae 08       		.byte	0x8
 4819 00af 07       		.byte	0x7
 4820 00b0 A6060000 		.4byte	.LASF15
 4821 00b4 03       		.uleb128 0x3
 4822 00b5 04       		.byte	0x4
 4823 00b6 07       		.byte	0x7
 4824 00b7 980F0000 		.4byte	.LASF16
 4825 00bb 05       		.uleb128 0x5
 4826 00bc 04       		.byte	0x4
 4827 00bd 06       		.uleb128 0x6
 4828 00be 04       		.byte	0x4
 4829 00bf C3000000 		.4byte	0xc3
 4830 00c3 03       		.uleb128 0x3
 4831 00c4 01       		.byte	0x1
 4832 00c5 08       		.byte	0x8
 4833 00c6 EF090000 		.4byte	.LASF17
 4834 00ca 06       		.uleb128 0x6
 4835 00cb 04       		.byte	0x4
 4836 00cc D0000000 		.4byte	0xd0
 4837 00d0 07       		.uleb128 0x7
 4838 00d1 C3000000 		.4byte	0xc3
 4839 00d5 02       		.uleb128 0x2
 4840 00d6 1E0B0000 		.4byte	.LASF18
 4841 00da 05       		.byte	0x5
 4842 00db 18       		.byte	0x18
 4843 00dc 53000000 		.4byte	0x53
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 188


 4844 00e0 02       		.uleb128 0x2
 4845 00e1 67060000 		.4byte	.LASF19
 4846 00e5 05       		.byte	0x5
 4847 00e6 20       		.byte	0x20
 4848 00e7 65000000 		.4byte	0x65
 4849 00eb 02       		.uleb128 0x2
 4850 00ec EC0E0000 		.4byte	.LASF20
 4851 00f0 05       		.byte	0x5
 4852 00f1 24       		.byte	0x24
 4853 00f2 77000000 		.4byte	0x77
 4854 00f6 02       		.uleb128 0x2
 4855 00f7 D8120000 		.4byte	.LASF21
 4856 00fb 05       		.byte	0x5
 4857 00fc 2C       		.byte	0x2c
 4858 00fd 89000000 		.4byte	0x89
 4859 0101 02       		.uleb128 0x2
 4860 0102 E8010000 		.4byte	.LASF22
 4861 0106 05       		.byte	0x5
 4862 0107 30       		.byte	0x30
 4863 0108 9B000000 		.4byte	0x9b
 4864 010c 08       		.uleb128 0x8
 4865 010d 01010000 		.4byte	0x101
 4866 0111 08       		.uleb128 0x8
 4867 0112 D5000000 		.4byte	0xd5
 4868 0116 09       		.uleb128 0x9
 4869 0117 B8       		.byte	0xb8
 4870 0118 06       		.byte	0x6
 4871 0119 34       		.byte	0x34
 4872 011a 27050000 		.4byte	0x527
 4873 011e 0A       		.uleb128 0xa
 4874 011f 73020000 		.4byte	.LASF23
 4875 0123 06       		.byte	0x6
 4876 0124 37       		.byte	0x37
 4877 0125 01010000 		.4byte	0x101
 4878 0129 00       		.byte	0
 4879 012a 0A       		.uleb128 0xa
 4880 012b D8090000 		.4byte	.LASF24
 4881 012f 06       		.byte	0x6
 4882 0130 38       		.byte	0x38
 4883 0131 01010000 		.4byte	0x101
 4884 0135 04       		.byte	0x4
 4885 0136 0A       		.uleb128 0xa
 4886 0137 C0000000 		.4byte	.LASF25
 4887 013b 06       		.byte	0x6
 4888 013c 39       		.byte	0x39
 4889 013d 01010000 		.4byte	0x101
 4890 0141 08       		.byte	0x8
 4891 0142 0A       		.uleb128 0xa
 4892 0143 54070000 		.4byte	.LASF26
 4893 0147 06       		.byte	0x6
 4894 0148 3A       		.byte	0x3a
 4895 0149 01010000 		.4byte	0x101
 4896 014d 0C       		.byte	0xc
 4897 014e 0A       		.uleb128 0xa
 4898 014f CE100000 		.4byte	.LASF27
 4899 0153 06       		.byte	0x6
 4900 0154 3B       		.byte	0x3b
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 189


 4901 0155 01010000 		.4byte	0x101
 4902 0159 10       		.byte	0x10
 4903 015a 0A       		.uleb128 0xa
 4904 015b D80C0000 		.4byte	.LASF28
 4905 015f 06       		.byte	0x6
 4906 0160 3C       		.byte	0x3c
 4907 0161 01010000 		.4byte	0x101
 4908 0165 14       		.byte	0x14
 4909 0166 0A       		.uleb128 0xa
 4910 0167 CE080000 		.4byte	.LASF29
 4911 016b 06       		.byte	0x6
 4912 016c 3D       		.byte	0x3d
 4913 016d 01010000 		.4byte	0x101
 4914 0171 18       		.byte	0x18
 4915 0172 0A       		.uleb128 0xa
 4916 0173 17160000 		.4byte	.LASF30
 4917 0177 06       		.byte	0x6
 4918 0178 3E       		.byte	0x3e
 4919 0179 01010000 		.4byte	0x101
 4920 017d 1C       		.byte	0x1c
 4921 017e 0A       		.uleb128 0xa
 4922 017f FC0B0000 		.4byte	.LASF31
 4923 0183 06       		.byte	0x6
 4924 0184 3F       		.byte	0x3f
 4925 0185 01010000 		.4byte	0x101
 4926 0189 20       		.byte	0x20
 4927 018a 0A       		.uleb128 0xa
 4928 018b 130C0000 		.4byte	.LASF32
 4929 018f 06       		.byte	0x6
 4930 0190 40       		.byte	0x40
 4931 0191 01010000 		.4byte	0x101
 4932 0195 24       		.byte	0x24
 4933 0196 0A       		.uleb128 0xa
 4934 0197 50100000 		.4byte	.LASF33
 4935 019b 06       		.byte	0x6
 4936 019c 43       		.byte	0x43
 4937 019d D5000000 		.4byte	0xd5
 4938 01a1 28       		.byte	0x28
 4939 01a2 0A       		.uleb128 0xa
 4940 01a3 16060000 		.4byte	.LASF34
 4941 01a7 06       		.byte	0x6
 4942 01a8 44       		.byte	0x44
 4943 01a9 D5000000 		.4byte	0xd5
 4944 01ad 29       		.byte	0x29
 4945 01ae 0A       		.uleb128 0xa
 4946 01af 730F0000 		.4byte	.LASF35
 4947 01b3 06       		.byte	0x6
 4948 01b4 45       		.byte	0x45
 4949 01b5 D5000000 		.4byte	0xd5
 4950 01b9 2A       		.byte	0x2a
 4951 01ba 0A       		.uleb128 0xa
 4952 01bb AE100000 		.4byte	.LASF36
 4953 01bf 06       		.byte	0x6
 4954 01c0 46       		.byte	0x46
 4955 01c1 D5000000 		.4byte	0xd5
 4956 01c5 2B       		.byte	0x2b
 4957 01c6 0A       		.uleb128 0xa
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 190


 4958 01c7 6A100000 		.4byte	.LASF37
 4959 01cb 06       		.byte	0x6
 4960 01cc 47       		.byte	0x47
 4961 01cd D5000000 		.4byte	0xd5
 4962 01d1 2C       		.byte	0x2c
 4963 01d2 0A       		.uleb128 0xa
 4964 01d3 62120000 		.4byte	.LASF38
 4965 01d7 06       		.byte	0x6
 4966 01d8 48       		.byte	0x48
 4967 01d9 D5000000 		.4byte	0xd5
 4968 01dd 2D       		.byte	0x2d
 4969 01de 0A       		.uleb128 0xa
 4970 01df 03170000 		.4byte	.LASF39
 4971 01e3 06       		.byte	0x6
 4972 01e4 49       		.byte	0x49
 4973 01e5 D5000000 		.4byte	0xd5
 4974 01e9 2E       		.byte	0x2e
 4975 01ea 0A       		.uleb128 0xa
 4976 01eb FE150000 		.4byte	.LASF40
 4977 01ef 06       		.byte	0x6
 4978 01f0 4A       		.byte	0x4a
 4979 01f1 D5000000 		.4byte	0xd5
 4980 01f5 2F       		.byte	0x2f
 4981 01f6 0A       		.uleb128 0xa
 4982 01f7 68040000 		.4byte	.LASF41
 4983 01fb 06       		.byte	0x6
 4984 01fc 4B       		.byte	0x4b
 4985 01fd D5000000 		.4byte	0xd5
 4986 0201 30       		.byte	0x30
 4987 0202 0A       		.uleb128 0xa
 4988 0203 A70D0000 		.4byte	.LASF42
 4989 0207 06       		.byte	0x6
 4990 0208 4E       		.byte	0x4e
 4991 0209 D5000000 		.4byte	0xd5
 4992 020d 31       		.byte	0x31
 4993 020e 0A       		.uleb128 0xa
 4994 020f 8C150000 		.4byte	.LASF43
 4995 0213 06       		.byte	0x6
 4996 0214 4F       		.byte	0x4f
 4997 0215 D5000000 		.4byte	0xd5
 4998 0219 32       		.byte	0x32
 4999 021a 0A       		.uleb128 0xa
 5000 021b 490D0000 		.4byte	.LASF44
 5001 021f 06       		.byte	0x6
 5002 0220 50       		.byte	0x50
 5003 0221 D5000000 		.4byte	0xd5
 5004 0225 33       		.byte	0x33
 5005 0226 0A       		.uleb128 0xa
 5006 0227 C7090000 		.4byte	.LASF45
 5007 022b 06       		.byte	0x6
 5008 022c 51       		.byte	0x51
 5009 022d D5000000 		.4byte	0xd5
 5010 0231 34       		.byte	0x34
 5011 0232 0A       		.uleb128 0xa
 5012 0233 FF060000 		.4byte	.LASF46
 5013 0237 06       		.byte	0x6
 5014 0238 52       		.byte	0x52
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 191


 5015 0239 E0000000 		.4byte	0xe0
 5016 023d 36       		.byte	0x36
 5017 023e 0A       		.uleb128 0xa
 5018 023f 8B020000 		.4byte	.LASF47
 5019 0243 06       		.byte	0x6
 5020 0244 53       		.byte	0x53
 5021 0245 E0000000 		.4byte	0xe0
 5022 0249 38       		.byte	0x38
 5023 024a 0A       		.uleb128 0xa
 5024 024b 260D0000 		.4byte	.LASF48
 5025 024f 06       		.byte	0x6
 5026 0250 54       		.byte	0x54
 5027 0251 E0000000 		.4byte	0xe0
 5028 0255 3A       		.byte	0x3a
 5029 0256 0A       		.uleb128 0xa
 5030 0257 87090000 		.4byte	.LASF49
 5031 025b 06       		.byte	0x6
 5032 025c 55       		.byte	0x55
 5033 025d D5000000 		.4byte	0xd5
 5034 0261 3C       		.byte	0x3c
 5035 0262 0A       		.uleb128 0xa
 5036 0263 EB070000 		.4byte	.LASF50
 5037 0267 06       		.byte	0x6
 5038 0268 56       		.byte	0x56
 5039 0269 D5000000 		.4byte	0xd5
 5040 026d 3D       		.byte	0x3d
 5041 026e 0A       		.uleb128 0xa
 5042 026f 4F0F0000 		.4byte	.LASF51
 5043 0273 06       		.byte	0x6
 5044 0274 57       		.byte	0x57
 5045 0275 D5000000 		.4byte	0xd5
 5046 0279 3E       		.byte	0x3e
 5047 027a 0A       		.uleb128 0xa
 5048 027b 61000000 		.4byte	.LASF52
 5049 027f 06       		.byte	0x6
 5050 0280 58       		.byte	0x58
 5051 0281 D5000000 		.4byte	0xd5
 5052 0285 3F       		.byte	0x3f
 5053 0286 0A       		.uleb128 0xa
 5054 0287 F1010000 		.4byte	.LASF53
 5055 028b 06       		.byte	0x6
 5056 028c 59       		.byte	0x59
 5057 028d D5000000 		.4byte	0xd5
 5058 0291 40       		.byte	0x40
 5059 0292 0A       		.uleb128 0xa
 5060 0293 F80D0000 		.4byte	.LASF54
 5061 0297 06       		.byte	0x6
 5062 0298 5A       		.byte	0x5a
 5063 0299 D5000000 		.4byte	0xd5
 5064 029d 41       		.byte	0x41
 5065 029e 0A       		.uleb128 0xa
 5066 029f 31060000 		.4byte	.LASF55
 5067 02a3 06       		.byte	0x6
 5068 02a4 5B       		.byte	0x5b
 5069 02a5 D5000000 		.4byte	0xd5
 5070 02a9 42       		.byte	0x42
 5071 02aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 192


 5072 02ab 4A090000 		.4byte	.LASF56
 5073 02af 06       		.byte	0x6
 5074 02b0 5C       		.byte	0x5c
 5075 02b1 D5000000 		.4byte	0xd5
 5076 02b5 43       		.byte	0x43
 5077 02b6 0A       		.uleb128 0xa
 5078 02b7 610A0000 		.4byte	.LASF57
 5079 02bb 06       		.byte	0x6
 5080 02bc 5D       		.byte	0x5d
 5081 02bd D5000000 		.4byte	0xd5
 5082 02c1 44       		.byte	0x44
 5083 02c2 0A       		.uleb128 0xa
 5084 02c3 BC100000 		.4byte	.LASF58
 5085 02c7 06       		.byte	0x6
 5086 02c8 5E       		.byte	0x5e
 5087 02c9 01010000 		.4byte	0x101
 5088 02cd 48       		.byte	0x48
 5089 02ce 0A       		.uleb128 0xa
 5090 02cf 2B030000 		.4byte	.LASF59
 5091 02d3 06       		.byte	0x6
 5092 02d4 5F       		.byte	0x5f
 5093 02d5 01010000 		.4byte	0x101
 5094 02d9 4C       		.byte	0x4c
 5095 02da 0A       		.uleb128 0xa
 5096 02db 2D150000 		.4byte	.LASF60
 5097 02df 06       		.byte	0x6
 5098 02e0 60       		.byte	0x60
 5099 02e1 D5000000 		.4byte	0xd5
 5100 02e5 50       		.byte	0x50
 5101 02e6 0A       		.uleb128 0xa
 5102 02e7 0B080000 		.4byte	.LASF61
 5103 02eb 06       		.byte	0x6
 5104 02ec 61       		.byte	0x61
 5105 02ed D5000000 		.4byte	0xd5
 5106 02f1 51       		.byte	0x51
 5107 02f2 0A       		.uleb128 0xa
 5108 02f3 450C0000 		.4byte	.LASF62
 5109 02f7 06       		.byte	0x6
 5110 02f8 62       		.byte	0x62
 5111 02f9 D5000000 		.4byte	0xd5
 5112 02fd 52       		.byte	0x52
 5113 02fe 0A       		.uleb128 0xa
 5114 02ff 27170000 		.4byte	.LASF63
 5115 0303 06       		.byte	0x6
 5116 0304 63       		.byte	0x63
 5117 0305 D5000000 		.4byte	0xd5
 5118 0309 53       		.byte	0x53
 5119 030a 0A       		.uleb128 0xa
 5120 030b 19140000 		.4byte	.LASF64
 5121 030f 06       		.byte	0x6
 5122 0310 64       		.byte	0x64
 5123 0311 D5000000 		.4byte	0xd5
 5124 0315 54       		.byte	0x54
 5125 0316 0A       		.uleb128 0xa
 5126 0317 70080000 		.4byte	.LASF65
 5127 031b 06       		.byte	0x6
 5128 031c 65       		.byte	0x65
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 193


 5129 031d D5000000 		.4byte	0xd5
 5130 0321 55       		.byte	0x55
 5131 0322 0A       		.uleb128 0xa
 5132 0323 00000000 		.4byte	.LASF66
 5133 0327 06       		.byte	0x6
 5134 0328 66       		.byte	0x66
 5135 0329 D5000000 		.4byte	0xd5
 5136 032d 56       		.byte	0x56
 5137 032e 0A       		.uleb128 0xa
 5138 032f 20160000 		.4byte	.LASF67
 5139 0333 06       		.byte	0x6
 5140 0334 67       		.byte	0x67
 5141 0335 D5000000 		.4byte	0xd5
 5142 0339 57       		.byte	0x57
 5143 033a 0A       		.uleb128 0xa
 5144 033b D7070000 		.4byte	.LASF68
 5145 033f 06       		.byte	0x6
 5146 0340 68       		.byte	0x68
 5147 0341 D5000000 		.4byte	0xd5
 5148 0345 58       		.byte	0x58
 5149 0346 0A       		.uleb128 0xa
 5150 0347 62160000 		.4byte	.LASF69
 5151 034b 06       		.byte	0x6
 5152 034c 69       		.byte	0x69
 5153 034d D5000000 		.4byte	0xd5
 5154 0351 59       		.byte	0x59
 5155 0352 0A       		.uleb128 0xa
 5156 0353 81150000 		.4byte	.LASF70
 5157 0357 06       		.byte	0x6
 5158 0358 6E       		.byte	0x6e
 5159 0359 EB000000 		.4byte	0xeb
 5160 035d 5A       		.byte	0x5a
 5161 035e 0A       		.uleb128 0xa
 5162 035f 4E010000 		.4byte	.LASF71
 5163 0363 06       		.byte	0x6
 5164 0364 6F       		.byte	0x6f
 5165 0365 EB000000 		.4byte	0xeb
 5166 0369 5C       		.byte	0x5c
 5167 036a 0A       		.uleb128 0xa
 5168 036b 040C0000 		.4byte	.LASF72
 5169 036f 06       		.byte	0x6
 5170 0370 70       		.byte	0x70
 5171 0371 D5000000 		.4byte	0xd5
 5172 0375 5E       		.byte	0x5e
 5173 0376 0A       		.uleb128 0xa
 5174 0377 5D0F0000 		.4byte	.LASF73
 5175 037b 06       		.byte	0x6
 5176 037c 71       		.byte	0x71
 5177 037d D5000000 		.4byte	0xd5
 5178 0381 5F       		.byte	0x5f
 5179 0382 0A       		.uleb128 0xa
 5180 0383 5B090000 		.4byte	.LASF74
 5181 0387 06       		.byte	0x6
 5182 0388 72       		.byte	0x72
 5183 0389 D5000000 		.4byte	0xd5
 5184 038d 60       		.byte	0x60
 5185 038e 0A       		.uleb128 0xa
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 194


 5186 038f 0D0B0000 		.4byte	.LASF75
 5187 0393 06       		.byte	0x6
 5188 0394 73       		.byte	0x73
 5189 0395 01010000 		.4byte	0x101
 5190 0399 64       		.byte	0x64
 5191 039a 0A       		.uleb128 0xa
 5192 039b 39170000 		.4byte	.LASF76
 5193 039f 06       		.byte	0x6
 5194 03a0 76       		.byte	0x76
 5195 03a1 EB000000 		.4byte	0xeb
 5196 03a5 68       		.byte	0x68
 5197 03a6 0A       		.uleb128 0xa
 5198 03a7 010F0000 		.4byte	.LASF77
 5199 03ab 06       		.byte	0x6
 5200 03ac 77       		.byte	0x77
 5201 03ad EB000000 		.4byte	0xeb
 5202 03b1 6A       		.byte	0x6a
 5203 03b2 0A       		.uleb128 0xa
 5204 03b3 170D0000 		.4byte	.LASF78
 5205 03b7 06       		.byte	0x6
 5206 03b8 78       		.byte	0x78
 5207 03b9 EB000000 		.4byte	0xeb
 5208 03bd 6C       		.byte	0x6c
 5209 03be 0A       		.uleb128 0xa
 5210 03bf 08030000 		.4byte	.LASF79
 5211 03c3 06       		.byte	0x6
 5212 03c4 79       		.byte	0x79
 5213 03c5 EB000000 		.4byte	0xeb
 5214 03c9 6E       		.byte	0x6e
 5215 03ca 0A       		.uleb128 0xa
 5216 03cb 400B0000 		.4byte	.LASF80
 5217 03cf 06       		.byte	0x6
 5218 03d0 7B       		.byte	0x7b
 5219 03d1 D5000000 		.4byte	0xd5
 5220 03d5 70       		.byte	0x70
 5221 03d6 0A       		.uleb128 0xa
 5222 03d7 A6040000 		.4byte	.LASF81
 5223 03db 06       		.byte	0x6
 5224 03dc 7C       		.byte	0x7c
 5225 03dd D5000000 		.4byte	0xd5
 5226 03e1 71       		.byte	0x71
 5227 03e2 0A       		.uleb128 0xa
 5228 03e3 15030000 		.4byte	.LASF82
 5229 03e7 06       		.byte	0x6
 5230 03e8 7D       		.byte	0x7d
 5231 03e9 D5000000 		.4byte	0xd5
 5232 03ed 72       		.byte	0x72
 5233 03ee 0A       		.uleb128 0xa
 5234 03ef FE010000 		.4byte	.LASF83
 5235 03f3 06       		.byte	0x6
 5236 03f4 7E       		.byte	0x7e
 5237 03f5 D5000000 		.4byte	0xd5
 5238 03f9 73       		.byte	0x73
 5239 03fa 0A       		.uleb128 0xa
 5240 03fb 0C070000 		.4byte	.LASF84
 5241 03ff 06       		.byte	0x6
 5242 0400 80       		.byte	0x80
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 195


 5243 0401 EB000000 		.4byte	0xeb
 5244 0405 74       		.byte	0x74
 5245 0406 0A       		.uleb128 0xa
 5246 0407 F30F0000 		.4byte	.LASF85
 5247 040b 06       		.byte	0x6
 5248 040c 81       		.byte	0x81
 5249 040d EB000000 		.4byte	0xeb
 5250 0411 76       		.byte	0x76
 5251 0412 0A       		.uleb128 0xa
 5252 0413 5F0B0000 		.4byte	.LASF86
 5253 0417 06       		.byte	0x6
 5254 0418 82       		.byte	0x82
 5255 0419 EB000000 		.4byte	0xeb
 5256 041d 78       		.byte	0x78
 5257 041e 0A       		.uleb128 0xa
 5258 041f 270C0000 		.4byte	.LASF87
 5259 0423 06       		.byte	0x6
 5260 0424 83       		.byte	0x83
 5261 0425 EB000000 		.4byte	0xeb
 5262 0429 7A       		.byte	0x7a
 5263 042a 0A       		.uleb128 0xa
 5264 042b DA110000 		.4byte	.LASF88
 5265 042f 06       		.byte	0x6
 5266 0430 86       		.byte	0x86
 5267 0431 D5000000 		.4byte	0xd5
 5268 0435 7C       		.byte	0x7c
 5269 0436 0A       		.uleb128 0xa
 5270 0437 3E150000 		.4byte	.LASF89
 5271 043b 06       		.byte	0x6
 5272 043c 87       		.byte	0x87
 5273 043d D5000000 		.4byte	0xd5
 5274 0441 7D       		.byte	0x7d
 5275 0442 0A       		.uleb128 0xa
 5276 0443 6F060000 		.4byte	.LASF90
 5277 0447 06       		.byte	0x6
 5278 0448 88       		.byte	0x88
 5279 0449 D5000000 		.4byte	0xd5
 5280 044d 7E       		.byte	0x7e
 5281 044e 0A       		.uleb128 0xa
 5282 044f C8050000 		.4byte	.LASF91
 5283 0453 06       		.byte	0x6
 5284 0454 89       		.byte	0x89
 5285 0455 D5000000 		.4byte	0xd5
 5286 0459 7F       		.byte	0x7f
 5287 045a 0A       		.uleb128 0xa
 5288 045b D6060000 		.4byte	.LASF92
 5289 045f 06       		.byte	0x6
 5290 0460 8A       		.byte	0x8a
 5291 0461 D5000000 		.4byte	0xd5
 5292 0465 80       		.byte	0x80
 5293 0466 0A       		.uleb128 0xa
 5294 0467 4A000000 		.4byte	.LASF93
 5295 046b 06       		.byte	0x6
 5296 046c 8D       		.byte	0x8d
 5297 046d 01010000 		.4byte	0x101
 5298 0471 84       		.byte	0x84
 5299 0472 0A       		.uleb128 0xa
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 196


 5300 0473 EF110000 		.4byte	.LASF94
 5301 0477 06       		.byte	0x6
 5302 0478 8E       		.byte	0x8e
 5303 0479 01010000 		.4byte	0x101
 5304 047d 88       		.byte	0x88
 5305 047e 0A       		.uleb128 0xa
 5306 047f C2150000 		.4byte	.LASF95
 5307 0483 06       		.byte	0x6
 5308 0484 8F       		.byte	0x8f
 5309 0485 01010000 		.4byte	0x101
 5310 0489 8C       		.byte	0x8c
 5311 048a 0A       		.uleb128 0xa
 5312 048b B60F0000 		.4byte	.LASF96
 5313 048f 06       		.byte	0x6
 5314 0490 90       		.byte	0x90
 5315 0491 01010000 		.4byte	0x101
 5316 0495 90       		.byte	0x90
 5317 0496 0A       		.uleb128 0xa
 5318 0497 93110000 		.4byte	.LASF97
 5319 049b 06       		.byte	0x6
 5320 049c 91       		.byte	0x91
 5321 049d 01010000 		.4byte	0x101
 5322 04a1 94       		.byte	0x94
 5323 04a2 0A       		.uleb128 0xa
 5324 04a3 C9040000 		.4byte	.LASF98
 5325 04a7 06       		.byte	0x6
 5326 04a8 92       		.byte	0x92
 5327 04a9 01010000 		.4byte	0x101
 5328 04ad 98       		.byte	0x98
 5329 04ae 0A       		.uleb128 0xa
 5330 04af 2E120000 		.4byte	.LASF99
 5331 04b3 06       		.byte	0x6
 5332 04b4 93       		.byte	0x93
 5333 04b5 01010000 		.4byte	0x101
 5334 04b9 9C       		.byte	0x9c
 5335 04ba 0A       		.uleb128 0xa
 5336 04bb 44120000 		.4byte	.LASF100
 5337 04bf 06       		.byte	0x6
 5338 04c0 94       		.byte	0x94
 5339 04c1 01010000 		.4byte	0x101
 5340 04c5 A0       		.byte	0xa0
 5341 04c6 0A       		.uleb128 0xa
 5342 04c7 22010000 		.4byte	.LASF101
 5343 04cb 06       		.byte	0x6
 5344 04cc 95       		.byte	0x95
 5345 04cd EB000000 		.4byte	0xeb
 5346 04d1 A4       		.byte	0xa4
 5347 04d2 0A       		.uleb128 0xa
 5348 04d3 A10F0000 		.4byte	.LASF102
 5349 04d7 06       		.byte	0x6
 5350 04d8 96       		.byte	0x96
 5351 04d9 EB000000 		.4byte	0xeb
 5352 04dd A6       		.byte	0xa6
 5353 04de 0A       		.uleb128 0xa
 5354 04df B2120000 		.4byte	.LASF103
 5355 04e3 06       		.byte	0x6
 5356 04e4 97       		.byte	0x97
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 197


 5357 04e5 EB000000 		.4byte	0xeb
 5358 04e9 A8       		.byte	0xa8
 5359 04ea 0A       		.uleb128 0xa
 5360 04eb E00B0000 		.4byte	.LASF104
 5361 04ef 06       		.byte	0x6
 5362 04f0 98       		.byte	0x98
 5363 04f1 EB000000 		.4byte	0xeb
 5364 04f5 AA       		.byte	0xaa
 5365 04f6 0A       		.uleb128 0xa
 5366 04f7 4B030000 		.4byte	.LASF105
 5367 04fb 06       		.byte	0x6
 5368 04fc 99       		.byte	0x99
 5369 04fd EB000000 		.4byte	0xeb
 5370 0501 AC       		.byte	0xac
 5371 0502 0A       		.uleb128 0xa
 5372 0503 220E0000 		.4byte	.LASF106
 5373 0507 06       		.byte	0x6
 5374 0508 9A       		.byte	0x9a
 5375 0509 EB000000 		.4byte	0xeb
 5376 050d AE       		.byte	0xae
 5377 050e 0A       		.uleb128 0xa
 5378 050f 7C030000 		.4byte	.LASF107
 5379 0513 06       		.byte	0x6
 5380 0514 9D       		.byte	0x9d
 5381 0515 EB000000 		.4byte	0xeb
 5382 0519 B0       		.byte	0xb0
 5383 051a 0A       		.uleb128 0xa
 5384 051b 9D130000 		.4byte	.LASF108
 5385 051f 06       		.byte	0x6
 5386 0520 9E       		.byte	0x9e
 5387 0521 01010000 		.4byte	0x101
 5388 0525 B4       		.byte	0xb4
 5389 0526 00       		.byte	0
 5390 0527 02       		.uleb128 0x2
 5391 0528 D7150000 		.4byte	.LASF109
 5392 052c 06       		.byte	0x6
 5393 052d 9F       		.byte	0x9f
 5394 052e 16010000 		.4byte	0x116
 5395 0532 03       		.uleb128 0x3
 5396 0533 04       		.byte	0x4
 5397 0534 04       		.byte	0x4
 5398 0535 01060000 		.4byte	.LASF110
 5399 0539 03       		.uleb128 0x3
 5400 053a 08       		.byte	0x8
 5401 053b 04       		.byte	0x4
 5402 053c 3C080000 		.4byte	.LASF111
 5403 0540 06       		.uleb128 0x6
 5404 0541 04       		.byte	0x4
 5405 0542 01010000 		.4byte	0x101
 5406 0546 03       		.uleb128 0x3
 5407 0547 01       		.byte	0x1
 5408 0548 02       		.byte	0x2
 5409 0549 55090000 		.4byte	.LASF112
 5410 054d 0B       		.uleb128 0xb
 5411 054e 01       		.byte	0x1
 5412 054f 5E000000 		.4byte	0x5e
 5413 0553 07       		.byte	0x7
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 198


 5414 0554 2402     		.2byte	0x224
 5415 0556 67050000 		.4byte	0x567
 5416 055a 0C       		.uleb128 0xc
 5417 055b A3020000 		.4byte	.LASF113
 5418 055f 00       		.byte	0
 5419 0560 0C       		.uleb128 0xc
 5420 0561 8A030000 		.4byte	.LASF114
 5421 0565 01       		.byte	0x1
 5422 0566 00       		.byte	0
 5423 0567 0D       		.uleb128 0xd
 5424 0568 F0020000 		.4byte	.LASF115
 5425 056c 07       		.byte	0x7
 5426 056d 2702     		.2byte	0x227
 5427 056f 4D050000 		.4byte	0x54d
 5428 0573 0D       		.uleb128 0xd
 5429 0574 B2010000 		.4byte	.LASF116
 5430 0578 07       		.byte	0x7
 5431 0579 3902     		.2byte	0x239
 5432 057b 7F050000 		.4byte	0x57f
 5433 057f 06       		.uleb128 0x6
 5434 0580 04       		.byte	0x4
 5435 0581 85050000 		.4byte	0x585
 5436 0585 0E       		.uleb128 0xe
 5437 0586 90050000 		.4byte	0x590
 5438 058a 0F       		.uleb128 0xf
 5439 058b 01010000 		.4byte	0x101
 5440 058f 00       		.byte	0
 5441 0590 0D       		.uleb128 0xd
 5442 0591 99030000 		.4byte	.LASF117
 5443 0595 07       		.byte	0x7
 5444 0596 4402     		.2byte	0x244
 5445 0598 9C050000 		.4byte	0x59c
 5446 059c 06       		.uleb128 0x6
 5447 059d 04       		.byte	0x4
 5448 059e A2050000 		.4byte	0x5a2
 5449 05a2 10       		.uleb128 0x10
 5450 05a3 67050000 		.4byte	0x567
 5451 05a7 B1050000 		.4byte	0x5b1
 5452 05ab 0F       		.uleb128 0xf
 5453 05ac 01010000 		.4byte	0x101
 5454 05b0 00       		.byte	0
 5455 05b1 11       		.uleb128 0x11
 5456 05b2 74040000 		.4byte	.LASF141
 5457 05b6 4C       		.byte	0x4c
 5458 05b7 07       		.byte	0x7
 5459 05b8 C302     		.2byte	0x2c3
 5460 05ba D0060000 		.4byte	0x6d0
 5461 05be 12       		.uleb128 0x12
 5462 05bf 90080000 		.4byte	.LASF118
 5463 05c3 07       		.byte	0x7
 5464 05c4 C602     		.2byte	0x2c6
 5465 05c6 46050000 		.4byte	0x546
 5466 05ca 00       		.byte	0
 5467 05cb 12       		.uleb128 0x12
 5468 05cc 7D0C0000 		.4byte	.LASF119
 5469 05d0 07       		.byte	0x7
 5470 05d1 C702     		.2byte	0x2c7
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 199


 5471 05d3 46050000 		.4byte	0x546
 5472 05d7 01       		.byte	0x1
 5473 05d8 12       		.uleb128 0x12
 5474 05d9 DD140000 		.4byte	.LASF120
 5475 05dd 07       		.byte	0x7
 5476 05de C902     		.2byte	0x2c9
 5477 05e0 0C010000 		.4byte	0x10c
 5478 05e4 04       		.byte	0x4
 5479 05e5 12       		.uleb128 0x12
 5480 05e6 6D000000 		.4byte	.LASF121
 5481 05ea 07       		.byte	0x7
 5482 05eb CB02     		.2byte	0x2cb
 5483 05ed 0C010000 		.4byte	0x10c
 5484 05f1 08       		.byte	0x8
 5485 05f2 12       		.uleb128 0x12
 5486 05f3 410E0000 		.4byte	.LASF122
 5487 05f7 07       		.byte	0x7
 5488 05f8 CC02     		.2byte	0x2cc
 5489 05fa 46050000 		.4byte	0x546
 5490 05fe 0C       		.byte	0xc
 5491 05ff 12       		.uleb128 0x12
 5492 0600 BE120000 		.4byte	.LASF123
 5493 0604 07       		.byte	0x7
 5494 0605 CD02     		.2byte	0x2cd
 5495 0607 46050000 		.4byte	0x546
 5496 060b 0D       		.byte	0xd
 5497 060c 12       		.uleb128 0x12
 5498 060d 130F0000 		.4byte	.LASF124
 5499 0611 07       		.byte	0x7
 5500 0612 CF02     		.2byte	0x2cf
 5501 0614 D0060000 		.4byte	0x6d0
 5502 0618 10       		.byte	0x10
 5503 0619 12       		.uleb128 0x12
 5504 061a 720A0000 		.4byte	.LASF125
 5505 061e 07       		.byte	0x7
 5506 061f D002     		.2byte	0x2d0
 5507 0621 01010000 		.4byte	0x101
 5508 0625 14       		.byte	0x14
 5509 0626 12       		.uleb128 0x12
 5510 0627 D0010000 		.4byte	.LASF126
 5511 062b 07       		.byte	0x7
 5512 062c D102     		.2byte	0x2d1
 5513 062e 0C010000 		.4byte	0x10c
 5514 0632 18       		.byte	0x18
 5515 0633 12       		.uleb128 0x12
 5516 0634 96090000 		.4byte	.LASF127
 5517 0638 07       		.byte	0x7
 5518 0639 D202     		.2byte	0x2d2
 5519 063b 0C010000 		.4byte	0x10c
 5520 063f 1C       		.byte	0x1c
 5521 0640 12       		.uleb128 0x12
 5522 0641 7B010000 		.4byte	.LASF128
 5523 0645 07       		.byte	0x7
 5524 0646 D402     		.2byte	0x2d4
 5525 0648 0C010000 		.4byte	0x10c
 5526 064c 20       		.byte	0x20
 5527 064d 12       		.uleb128 0x12
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 200


 5528 064e 7E070000 		.4byte	.LASF129
 5529 0652 07       		.byte	0x7
 5530 0653 D502     		.2byte	0x2d5
 5531 0655 D6060000 		.4byte	0x6d6
 5532 0659 24       		.byte	0x24
 5533 065a 12       		.uleb128 0x12
 5534 065b F5040000 		.4byte	.LASF130
 5535 065f 07       		.byte	0x7
 5536 0660 D702     		.2byte	0x2d7
 5537 0662 D0060000 		.4byte	0x6d0
 5538 0666 28       		.byte	0x28
 5539 0667 12       		.uleb128 0x12
 5540 0668 5C070000 		.4byte	.LASF131
 5541 066c 07       		.byte	0x7
 5542 066d D802     		.2byte	0x2d8
 5543 066f 01010000 		.4byte	0x101
 5544 0673 2C       		.byte	0x2c
 5545 0674 12       		.uleb128 0x12
 5546 0675 0A050000 		.4byte	.LASF132
 5547 0679 07       		.byte	0x7
 5548 067a D902     		.2byte	0x2d9
 5549 067c 0C010000 		.4byte	0x10c
 5550 0680 30       		.byte	0x30
 5551 0681 12       		.uleb128 0x12
 5552 0682 2F0B0000 		.4byte	.LASF133
 5553 0686 07       		.byte	0x7
 5554 0687 DA02     		.2byte	0x2da
 5555 0689 0C010000 		.4byte	0x10c
 5556 068d 34       		.byte	0x34
 5557 068e 12       		.uleb128 0x12
 5558 068f 7D020000 		.4byte	.LASF134
 5559 0693 07       		.byte	0x7
 5560 0694 DC02     		.2byte	0x2dc
 5561 0696 D0060000 		.4byte	0x6d0
 5562 069a 38       		.byte	0x38
 5563 069b 12       		.uleb128 0x12
 5564 069c 990E0000 		.4byte	.LASF135
 5565 06a0 07       		.byte	0x7
 5566 06a1 DD02     		.2byte	0x2dd
 5567 06a3 01010000 		.4byte	0x101
 5568 06a7 3C       		.byte	0x3c
 5569 06a8 12       		.uleb128 0x12
 5570 06a9 B2110000 		.4byte	.LASF136
 5571 06ad 07       		.byte	0x7
 5572 06ae DE02     		.2byte	0x2de
 5573 06b0 0C010000 		.4byte	0x10c
 5574 06b4 40       		.byte	0x40
 5575 06b5 12       		.uleb128 0x12
 5576 06b6 1D080000 		.4byte	.LASF137
 5577 06ba 07       		.byte	0x7
 5578 06bb E402     		.2byte	0x2e4
 5579 06bd 73050000 		.4byte	0x573
 5580 06c1 44       		.byte	0x44
 5581 06c2 12       		.uleb128 0x12
 5582 06c3 96020000 		.4byte	.LASF138
 5583 06c7 07       		.byte	0x7
 5584 06c8 EB02     		.2byte	0x2eb
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 201


 5585 06ca 90050000 		.4byte	0x590
 5586 06ce 48       		.byte	0x48
 5587 06cf 00       		.byte	0
 5588 06d0 06       		.uleb128 0x6
 5589 06d1 04       		.byte	0x4
 5590 06d2 D5000000 		.4byte	0xd5
 5591 06d6 08       		.uleb128 0x8
 5592 06d7 46050000 		.4byte	0x546
 5593 06db 0D       		.uleb128 0xd
 5594 06dc 49160000 		.4byte	.LASF139
 5595 06e0 07       		.byte	0x7
 5596 06e1 EE02     		.2byte	0x2ee
 5597 06e3 B1050000 		.4byte	0x5b1
 5598 06e7 0D       		.uleb128 0xd
 5599 06e8 980B0000 		.4byte	.LASF140
 5600 06ec 08       		.byte	0x8
 5601 06ed D901     		.2byte	0x1d9
 5602 06ef 7F050000 		.4byte	0x57f
 5603 06f3 11       		.uleb128 0x11
 5604 06f4 4F060000 		.4byte	.LASF142
 5605 06f8 38       		.byte	0x38
 5606 06f9 08       		.byte	0x8
 5607 06fa 7502     		.2byte	0x275
 5608 06fc B7070000 		.4byte	0x7b7
 5609 0700 12       		.uleb128 0x12
 5610 0701 B7000000 		.4byte	.LASF143
 5611 0705 08       		.byte	0x8
 5612 0706 7802     		.2byte	0x278
 5613 0708 0C010000 		.4byte	0x10c
 5614 070c 00       		.byte	0
 5615 070d 12       		.uleb128 0x12
 5616 070e C8070000 		.4byte	.LASF144
 5617 0712 08       		.byte	0x8
 5618 0713 7902     		.2byte	0x279
 5619 0715 0C010000 		.4byte	0x10c
 5620 0719 04       		.byte	0x4
 5621 071a 12       		.uleb128 0x12
 5622 071b C70E0000 		.4byte	.LASF145
 5623 071f 08       		.byte	0x8
 5624 0720 7B02     		.2byte	0x27b
 5625 0722 BB000000 		.4byte	0xbb
 5626 0726 08       		.byte	0x8
 5627 0727 12       		.uleb128 0x12
 5628 0728 BA050000 		.4byte	.LASF146
 5629 072c 08       		.byte	0x8
 5630 072d 7C02     		.2byte	0x27c
 5631 072f 01010000 		.4byte	0x101
 5632 0733 0C       		.byte	0xc
 5633 0734 12       		.uleb128 0x12
 5634 0735 3B0D0000 		.4byte	.LASF147
 5635 0739 08       		.byte	0x8
 5636 073a 7D02     		.2byte	0x27d
 5637 073c 0C010000 		.4byte	0x10c
 5638 0740 10       		.byte	0x10
 5639 0741 12       		.uleb128 0x12
 5640 0742 190A0000 		.4byte	.LASF148
 5641 0746 08       		.byte	0x8
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 202


 5642 0747 7E02     		.2byte	0x27e
 5643 0749 0C010000 		.4byte	0x10c
 5644 074d 14       		.byte	0x14
 5645 074e 12       		.uleb128 0x12
 5646 074f D1070000 		.4byte	.LASF149
 5647 0753 08       		.byte	0x8
 5648 0754 8002     		.2byte	0x280
 5649 0756 BB000000 		.4byte	0xbb
 5650 075a 18       		.byte	0x18
 5651 075b 12       		.uleb128 0x12
 5652 075c 49170000 		.4byte	.LASF150
 5653 0760 08       		.byte	0x8
 5654 0761 8102     		.2byte	0x281
 5655 0763 01010000 		.4byte	0x101
 5656 0767 1C       		.byte	0x1c
 5657 0768 12       		.uleb128 0x12
 5658 0769 B40A0000 		.4byte	.LASF151
 5659 076d 08       		.byte	0x8
 5660 076e 8202     		.2byte	0x282
 5661 0770 0C010000 		.4byte	0x10c
 5662 0774 20       		.byte	0x20
 5663 0775 12       		.uleb128 0x12
 5664 0776 610E0000 		.4byte	.LASF152
 5665 077a 08       		.byte	0x8
 5666 077b 8402     		.2byte	0x284
 5667 077d BB000000 		.4byte	0xbb
 5668 0781 24       		.byte	0x24
 5669 0782 12       		.uleb128 0x12
 5670 0783 800D0000 		.4byte	.LASF153
 5671 0787 08       		.byte	0x8
 5672 0788 8502     		.2byte	0x285
 5673 078a 01010000 		.4byte	0x101
 5674 078e 28       		.byte	0x28
 5675 078f 12       		.uleb128 0x12
 5676 0790 EE100000 		.4byte	.LASF154
 5677 0794 08       		.byte	0x8
 5678 0795 8602     		.2byte	0x286
 5679 0797 0C010000 		.4byte	0x10c
 5680 079b 2C       		.byte	0x2c
 5681 079c 12       		.uleb128 0x12
 5682 079d 1D080000 		.4byte	.LASF137
 5683 07a1 08       		.byte	0x8
 5684 07a2 8B02     		.2byte	0x28b
 5685 07a4 E7060000 		.4byte	0x6e7
 5686 07a8 30       		.byte	0x30
 5687 07a9 12       		.uleb128 0x12
 5688 07aa EC0A0000 		.4byte	.LASF155
 5689 07ae 08       		.byte	0x8
 5690 07af 8E02     		.2byte	0x28e
 5691 07b1 01010000 		.4byte	0x101
 5692 07b5 34       		.byte	0x34
 5693 07b6 00       		.byte	0
 5694 07b7 0D       		.uleb128 0xd
 5695 07b8 59020000 		.4byte	.LASF156
 5696 07bc 08       		.byte	0x8
 5697 07bd 9102     		.2byte	0x291
 5698 07bf F3060000 		.4byte	0x6f3
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 203


 5699 07c3 02       		.uleb128 0x2
 5700 07c4 11130000 		.4byte	.LASF157
 5701 07c8 09       		.byte	0x9
 5702 07c9 23       		.byte	0x23
 5703 07ca CE070000 		.4byte	0x7ce
 5704 07ce 06       		.uleb128 0x6
 5705 07cf 04       		.byte	0x4
 5706 07d0 D4070000 		.4byte	0x7d4
 5707 07d4 0E       		.uleb128 0xe
 5708 07d5 DF070000 		.4byte	0x7df
 5709 07d9 0F       		.uleb128 0xf
 5710 07da BB000000 		.4byte	0xbb
 5711 07de 00       		.byte	0
 5712 07df 02       		.uleb128 0x2
 5713 07e0 E3090000 		.4byte	.LASF158
 5714 07e4 02       		.byte	0x2
 5715 07e5 37       		.byte	0x37
 5716 07e6 01010000 		.4byte	0x101
 5717 07ea 02       		.uleb128 0x2
 5718 07eb 720C0000 		.4byte	.LASF159
 5719 07ef 02       		.byte	0x2
 5720 07f0 38       		.byte	0x38
 5721 07f1 94000000 		.4byte	0x94
 5722 07f5 02       		.uleb128 0x2
 5723 07f6 35050000 		.4byte	.LASF160
 5724 07fa 02       		.byte	0x2
 5725 07fb 39       		.byte	0x39
 5726 07fc A6000000 		.4byte	0xa6
 5727 0800 02       		.uleb128 0x2
 5728 0801 670E0000 		.4byte	.LASF161
 5729 0805 02       		.byte	0x2
 5730 0806 3F       		.byte	0x3f
 5731 0807 01010000 		.4byte	0x101
 5732 080b 13       		.uleb128 0x13
 5733 080c BB000000 		.4byte	0xbb
 5734 0810 1B080000 		.4byte	0x81b
 5735 0814 14       		.uleb128 0x14
 5736 0815 B4000000 		.4byte	0xb4
 5737 0819 04       		.byte	0x4
 5738 081a 00       		.byte	0
 5739 081b 15       		.uleb128 0x15
 5740 081c 3C020000 		.4byte	.LASF162
 5741 0820 14       		.byte	0x14
 5742 0821 0A       		.byte	0xa
 5743 0822 8B       		.byte	0x8b
 5744 0823 64080000 		.4byte	0x864
 5745 0827 0A       		.uleb128 0xa
 5746 0828 3C100000 		.4byte	.LASF163
 5747 082c 0A       		.byte	0xa
 5748 082d 8E       		.byte	0x8e
 5749 082e 00080000 		.4byte	0x800
 5750 0832 00       		.byte	0
 5751 0833 0A       		.uleb128 0xa
 5752 0834 E20C0000 		.4byte	.LASF164
 5753 0838 0A       		.byte	0xa
 5754 0839 8F       		.byte	0x8f
 5755 083a 64080000 		.4byte	0x864
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 204


 5756 083e 04       		.byte	0x4
 5757 083f 0A       		.uleb128 0xa
 5758 0840 30070000 		.4byte	.LASF165
 5759 0844 0A       		.byte	0xa
 5760 0845 90       		.byte	0x90
 5761 0846 64080000 		.4byte	0x864
 5762 084a 08       		.byte	0x8
 5763 084b 0A       		.uleb128 0xa
 5764 084c 52140000 		.4byte	.LASF166
 5765 0850 0A       		.byte	0xa
 5766 0851 91       		.byte	0x91
 5767 0852 BB000000 		.4byte	0xbb
 5768 0856 0C       		.byte	0xc
 5769 0857 0A       		.uleb128 0xa
 5770 0858 430F0000 		.4byte	.LASF167
 5771 085c 0A       		.byte	0xa
 5772 085d 92       		.byte	0x92
 5773 085e BB000000 		.4byte	0xbb
 5774 0862 10       		.byte	0x10
 5775 0863 00       		.byte	0
 5776 0864 06       		.uleb128 0x6
 5777 0865 04       		.byte	0x4
 5778 0866 1B080000 		.4byte	0x81b
 5779 086a 02       		.uleb128 0x2
 5780 086b F4090000 		.4byte	.LASF168
 5781 086f 0A       		.byte	0xa
 5782 0870 95       		.byte	0x95
 5783 0871 1B080000 		.4byte	0x81b
 5784 0875 15       		.uleb128 0x15
 5785 0876 43080000 		.4byte	.LASF169
 5786 087a 0C       		.byte	0xc
 5787 087b 0A       		.byte	0xa
 5788 087c 97       		.byte	0x97
 5789 087d A6080000 		.4byte	0x8a6
 5790 0881 0A       		.uleb128 0xa
 5791 0882 3C100000 		.4byte	.LASF163
 5792 0886 0A       		.byte	0xa
 5793 0887 9A       		.byte	0x9a
 5794 0888 00080000 		.4byte	0x800
 5795 088c 00       		.byte	0
 5796 088d 0A       		.uleb128 0xa
 5797 088e E20C0000 		.4byte	.LASF164
 5798 0892 0A       		.byte	0xa
 5799 0893 9B       		.byte	0x9b
 5800 0894 64080000 		.4byte	0x864
 5801 0898 04       		.byte	0x4
 5802 0899 0A       		.uleb128 0xa
 5803 089a 30070000 		.4byte	.LASF165
 5804 089e 0A       		.byte	0xa
 5805 089f 9C       		.byte	0x9c
 5806 08a0 64080000 		.4byte	0x864
 5807 08a4 08       		.byte	0x8
 5808 08a5 00       		.byte	0
 5809 08a6 02       		.uleb128 0x2
 5810 08a7 BD0A0000 		.4byte	.LASF170
 5811 08ab 0A       		.byte	0xa
 5812 08ac 9E       		.byte	0x9e
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 205


 5813 08ad 75080000 		.4byte	0x875
 5814 08b1 15       		.uleb128 0x15
 5815 08b2 9D020000 		.4byte	.LASF171
 5816 08b6 14       		.byte	0x14
 5817 08b7 0A       		.byte	0xa
 5818 08b8 A3       		.byte	0xa3
 5819 08b9 E2080000 		.4byte	0x8e2
 5820 08bd 0A       		.uleb128 0xa
 5821 08be 14000000 		.4byte	.LASF172
 5822 08c2 0A       		.byte	0xa
 5823 08c3 A6       		.byte	0xa6
 5824 08c4 E2080000 		.4byte	0x8e2
 5825 08c8 00       		.byte	0
 5826 08c9 0A       		.uleb128 0xa
 5827 08ca E0010000 		.4byte	.LASF173
 5828 08ce 0A       		.byte	0xa
 5829 08cf A7       		.byte	0xa7
 5830 08d0 E7080000 		.4byte	0x8e7
 5831 08d4 04       		.byte	0x4
 5832 08d5 0A       		.uleb128 0xa
 5833 08d6 9A0A0000 		.4byte	.LASF174
 5834 08da 0A       		.byte	0xa
 5835 08db A8       		.byte	0xa8
 5836 08dc A6080000 		.4byte	0x8a6
 5837 08e0 08       		.byte	0x8
 5838 08e1 00       		.byte	0
 5839 08e2 08       		.uleb128 0x8
 5840 08e3 F5070000 		.4byte	0x7f5
 5841 08e7 06       		.uleb128 0x6
 5842 08e8 04       		.byte	0x4
 5843 08e9 6A080000 		.4byte	0x86a
 5844 08ed 02       		.uleb128 0x2
 5845 08ee 4D0E0000 		.4byte	.LASF175
 5846 08f2 0A       		.byte	0xa
 5847 08f3 AA       		.byte	0xaa
 5848 08f4 B1080000 		.4byte	0x8b1
 5849 08f8 02       		.uleb128 0x2
 5850 08f9 D40D0000 		.4byte	.LASF176
 5851 08fd 0B       		.byte	0xb
 5852 08fe 3D       		.byte	0x3d
 5853 08ff BB000000 		.4byte	0xbb
 5854 0903 16       		.uleb128 0x16
 5855 0904 01       		.byte	0x1
 5856 0905 5E000000 		.4byte	0x5e
 5857 0909 0B       		.byte	0xb
 5858 090a 52       		.byte	0x52
 5859 090b 2E090000 		.4byte	0x92e
 5860 090f 0C       		.uleb128 0xc
 5861 0910 71010000 		.4byte	.LASF177
 5862 0914 00       		.byte	0
 5863 0915 0C       		.uleb128 0xc
 5864 0916 BE0E0000 		.4byte	.LASF178
 5865 091a 01       		.byte	0x1
 5866 091b 0C       		.uleb128 0xc
 5867 091c 31080000 		.4byte	.LASF179
 5868 0920 02       		.byte	0x2
 5869 0921 0C       		.uleb128 0xc
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 206


 5870 0922 8F060000 		.4byte	.LASF180
 5871 0926 03       		.byte	0x3
 5872 0927 0C       		.uleb128 0xc
 5873 0928 FF090000 		.4byte	.LASF181
 5874 092c 04       		.byte	0x4
 5875 092d 00       		.byte	0
 5876 092e 02       		.uleb128 0x2
 5877 092f F6070000 		.4byte	.LASF182
 5878 0933 0B       		.byte	0xb
 5879 0934 58       		.byte	0x58
 5880 0935 03090000 		.4byte	0x903
 5881 0939 15       		.uleb128 0x15
 5882 093a 40000000 		.4byte	.LASF183
 5883 093e 08       		.byte	0x8
 5884 093f 0B       		.byte	0xb
 5885 0940 5D       		.byte	0x5d
 5886 0941 5E090000 		.4byte	0x95e
 5887 0945 0A       		.uleb128 0xa
 5888 0946 520A0000 		.4byte	.LASF184
 5889 094a 0B       		.byte	0xb
 5890 094b 5F       		.byte	0x5f
 5891 094c EA070000 		.4byte	0x7ea
 5892 0950 00       		.byte	0
 5893 0951 0A       		.uleb128 0xa
 5894 0952 BA0C0000 		.4byte	.LASF185
 5895 0956 0B       		.byte	0xb
 5896 0957 60       		.byte	0x60
 5897 0958 00080000 		.4byte	0x800
 5898 095c 04       		.byte	0x4
 5899 095d 00       		.byte	0
 5900 095e 02       		.uleb128 0x2
 5901 095f 900A0000 		.4byte	.LASF186
 5902 0963 0B       		.byte	0xb
 5903 0964 61       		.byte	0x61
 5904 0965 39090000 		.4byte	0x939
 5905 0969 15       		.uleb128 0x15
 5906 096a DD0E0000 		.4byte	.LASF187
 5907 096e 0C       		.byte	0xc
 5908 096f 0B       		.byte	0xb
 5909 0970 66       		.byte	0x66
 5910 0971 9A090000 		.4byte	0x99a
 5911 0975 0A       		.uleb128 0xa
 5912 0976 4C130000 		.4byte	.LASF188
 5913 097a 0B       		.byte	0xb
 5914 097b 68       		.byte	0x68
 5915 097c BB000000 		.4byte	0xbb
 5916 0980 00       		.byte	0
 5917 0981 0A       		.uleb128 0xa
 5918 0982 620C0000 		.4byte	.LASF189
 5919 0986 0B       		.byte	0xb
 5920 0987 69       		.byte	0x69
 5921 0988 01010000 		.4byte	0x101
 5922 098c 04       		.byte	0x4
 5923 098d 0A       		.uleb128 0xa
 5924 098e 8B040000 		.4byte	.LASF190
 5925 0992 0B       		.byte	0xb
 5926 0993 6A       		.byte	0x6a
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 207


 5927 0994 01010000 		.4byte	0x101
 5928 0998 08       		.byte	0x8
 5929 0999 00       		.byte	0
 5930 099a 02       		.uleb128 0x2
 5931 099b 740B0000 		.4byte	.LASF191
 5932 099f 0B       		.byte	0xb
 5933 09a0 6B       		.byte	0x6b
 5934 09a1 69090000 		.4byte	0x969
 5935 09a5 07       		.uleb128 0x7
 5936 09a6 CA000000 		.4byte	0xca
 5937 09aa 06       		.uleb128 0x6
 5938 09ab 04       		.byte	0x4
 5939 09ac DF070000 		.4byte	0x7df
 5940 09b0 11       		.uleb128 0x11
 5941 09b1 C9000000 		.4byte	.LASF192
 5942 09b5 60       		.byte	0x60
 5943 09b6 01       		.byte	0x1
 5944 09b7 0D01     		.2byte	0x10d
 5945 09b9 330A0000 		.4byte	0xa33
 5946 09bd 12       		.uleb128 0x12
 5947 09be 76160000 		.4byte	.LASF193
 5948 09c2 01       		.byte	0x1
 5949 09c3 0F01     		.2byte	0x10f
 5950 09c5 330A0000 		.4byte	0xa33
 5951 09c9 00       		.byte	0
 5952 09ca 12       		.uleb128 0x12
 5953 09cb 25090000 		.4byte	.LASF194
 5954 09cf 01       		.byte	0x1
 5955 09d0 1501     		.2byte	0x115
 5956 09d2 6A080000 		.4byte	0x86a
 5957 09d6 04       		.byte	0x4
 5958 09d7 12       		.uleb128 0x12
 5959 09d8 0A140000 		.4byte	.LASF195
 5960 09dc 01       		.byte	0x1
 5961 09dd 1601     		.2byte	0x116
 5962 09df 6A080000 		.4byte	0x86a
 5963 09e3 18       		.byte	0x18
 5964 09e4 12       		.uleb128 0x12
 5965 09e5 A0000000 		.4byte	.LASF196
 5966 09e9 01       		.byte	0x1
 5967 09ea 1701     		.2byte	0x117
 5968 09ec F5070000 		.4byte	0x7f5
 5969 09f0 2C       		.byte	0x2c
 5970 09f1 12       		.uleb128 0x12
 5971 09f2 0F110000 		.4byte	.LASF197
 5972 09f6 01       		.byte	0x1
 5973 09f7 1801     		.2byte	0x118
 5974 09f9 AA090000 		.4byte	0x9aa
 5975 09fd 30       		.byte	0x30
 5976 09fe 12       		.uleb128 0x12
 5977 09ff 68130000 		.4byte	.LASF198
 5978 0a03 01       		.byte	0x1
 5979 0a04 1901     		.2byte	0x119
 5980 0a06 3E0A0000 		.4byte	0xa3e
 5981 0a0a 34       		.byte	0x34
 5982 0a0b 12       		.uleb128 0x12
 5983 0a0c AB070000 		.4byte	.LASF199
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 208


 5984 0a10 01       		.byte	0x1
 5985 0a11 3201     		.2byte	0x132
 5986 0a13 0B080000 		.4byte	0x80b
 5987 0a17 44       		.byte	0x44
 5988 0a18 12       		.uleb128 0x12
 5989 0a19 77090000 		.4byte	.LASF200
 5990 0a1d 01       		.byte	0x1
 5991 0a1e 4501     		.2byte	0x145
 5992 0a20 0C010000 		.4byte	0x10c
 5993 0a24 58       		.byte	0x58
 5994 0a25 12       		.uleb128 0x12
 5995 0a26 370A0000 		.4byte	.LASF201
 5996 0a2a 01       		.byte	0x1
 5997 0a2b 4601     		.2byte	0x146
 5998 0a2d 11010000 		.4byte	0x111
 5999 0a31 5C       		.byte	0x5c
 6000 0a32 00       		.byte	0
 6001 0a33 06       		.uleb128 0x6
 6002 0a34 04       		.byte	0x4
 6003 0a35 390A0000 		.4byte	0xa39
 6004 0a39 08       		.uleb128 0x8
 6005 0a3a DF070000 		.4byte	0x7df
 6006 0a3e 13       		.uleb128 0x13
 6007 0a3f C3000000 		.4byte	0xc3
 6008 0a43 4E0A0000 		.4byte	0xa4e
 6009 0a47 14       		.uleb128 0x14
 6010 0a48 B4000000 		.4byte	0xb4
 6011 0a4c 0F       		.byte	0xf
 6012 0a4d 00       		.byte	0
 6013 0a4e 0D       		.uleb128 0xd
 6014 0a4f 03050000 		.4byte	.LASF202
 6015 0a53 01       		.byte	0x1
 6016 0a54 5301     		.2byte	0x153
 6017 0a56 B0090000 		.4byte	0x9b0
 6018 0a5a 0D       		.uleb128 0xd
 6019 0a5b 3F140000 		.4byte	.LASF203
 6020 0a5f 01       		.byte	0x1
 6021 0a60 5701     		.2byte	0x157
 6022 0a62 4E0A0000 		.4byte	0xa4e
 6023 0a66 17       		.uleb128 0x17
 6024 0a67 A0120000 		.4byte	.LASF206
 6025 0a6b 02       		.byte	0x2
 6026 0a6c 98       		.byte	0x98
 6027 0a6d 03       		.byte	0x3
 6028 0a6e 7E0A0000 		.4byte	0xa7e
 6029 0a72 18       		.uleb128 0x18
 6030 0a73 550C0000 		.4byte	.LASF204
 6031 0a77 02       		.byte	0x2
 6032 0a78 9A       		.byte	0x9a
 6033 0a79 01010000 		.4byte	0x101
 6034 0a7d 00       		.byte	0
 6035 0a7e 19       		.uleb128 0x19
 6036 0a7f B70B0000 		.4byte	.LASF362
 6037 0a83 02       		.byte	0x2
 6038 0a84 A8       		.byte	0xa8
 6039 0a85 01010000 		.4byte	0x101
 6040 0a89 03       		.byte	0x3
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 209


 6041 0a8a A50A0000 		.4byte	0xaa5
 6042 0a8e 18       		.uleb128 0x18
 6043 0a8f DC050000 		.4byte	.LASF205
 6044 0a93 02       		.byte	0x2
 6045 0a94 AA       		.byte	0xaa
 6046 0a95 01010000 		.4byte	0x101
 6047 0a99 18       		.uleb128 0x18
 6048 0a9a 550C0000 		.4byte	.LASF204
 6049 0a9e 02       		.byte	0x2
 6050 0a9f AA       		.byte	0xaa
 6051 0aa0 01010000 		.4byte	0x101
 6052 0aa4 00       		.byte	0
 6053 0aa5 17       		.uleb128 0x17
 6054 0aa6 59030000 		.4byte	.LASF207
 6055 0aaa 02       		.byte	0x2
 6056 0aab BC       		.byte	0xbc
 6057 0aac 03       		.byte	0x3
 6058 0aad BD0A0000 		.4byte	0xabd
 6059 0ab1 1A       		.uleb128 0x1a
 6060 0ab2 E90D0000 		.4byte	.LASF363
 6061 0ab6 02       		.byte	0x2
 6062 0ab7 BC       		.byte	0xbc
 6063 0ab8 01010000 		.4byte	0x101
 6064 0abc 00       		.byte	0
 6065 0abd 1B       		.uleb128 0x1b
 6066 0abe D7100000 		.4byte	.LASF229
 6067 0ac2 01       		.byte	0x1
 6068 0ac3 C306     		.2byte	0x6c3
 6069 0ac5 EA070000 		.4byte	0x7ea
 6070 0ac9 00000000 		.4byte	.LFB522
 6071 0acd 4C000000 		.4byte	.LFE522-.LFB522
 6072 0ad1 01       		.uleb128 0x1
 6073 0ad2 9C       		.byte	0x9c
 6074 0ad3 280B0000 		.4byte	0xb28
 6075 0ad7 1C       		.uleb128 0x1c
 6076 0ad8 800E0000 		.4byte	.LASF212
 6077 0adc 01       		.byte	0x1
 6078 0add C306     		.2byte	0x6c3
 6079 0adf 280B0000 		.4byte	0xb28
 6080 0ae3 00000000 		.4byte	.LLST0
 6081 0ae7 1D       		.uleb128 0x1d
 6082 0ae8 5A120000 		.4byte	.LASF208
 6083 0aec 01       		.byte	0x1
 6084 0aed C506     		.2byte	0x6c5
 6085 0aef EA070000 		.4byte	0x7ea
 6086 0af3 69000000 		.4byte	.LLST1
 6087 0af7 1D       		.uleb128 0x1d
 6088 0af8 BC150000 		.4byte	.LASF209
 6089 0afc 01       		.byte	0x1
 6090 0afd C606     		.2byte	0x6c6
 6091 0aff 380B0000 		.4byte	0xb38
 6092 0b03 88000000 		.4byte	.LLST2
 6093 0b07 1E       		.uleb128 0x1e
 6094 0b08 660A0000 		.4byte	0xa66
 6095 0b0c 04000000 		.4byte	.LBB94
 6096 0b10 12000000 		.4byte	.LBE94-.LBB94
 6097 0b14 01       		.byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 210


 6098 0b15 CC06     		.2byte	0x6cc
 6099 0b17 1F       		.uleb128 0x1f
 6100 0b18 04000000 		.4byte	.LBB95
 6101 0b1c 12000000 		.4byte	.LBE95-.LBB95
 6102 0b20 20       		.uleb128 0x20
 6103 0b21 720A0000 		.4byte	0xa72
 6104 0b25 00       		.byte	0
 6105 0b26 00       		.byte	0
 6106 0b27 00       		.byte	0
 6107 0b28 07       		.uleb128 0x7
 6108 0b29 F8080000 		.4byte	0x8f8
 6109 0b2d 06       		.uleb128 0x6
 6110 0b2e 04       		.byte	0x4
 6111 0b2f 330B0000 		.4byte	0xb33
 6112 0b33 07       		.uleb128 0x7
 6113 0b34 5A0A0000 		.4byte	0xa5a
 6114 0b38 07       		.uleb128 0x7
 6115 0b39 2D0B0000 		.4byte	0xb2d
 6116 0b3d 21       		.uleb128 0x21
 6117 0b3e 9E0C0000 		.4byte	.LASF210
 6118 0b42 01       		.byte	0x1
 6119 0b43 9D0E     		.2byte	0xe9d
 6120 0b45 00000000 		.4byte	.LFB550
 6121 0b49 2C000000 		.4byte	.LFE550-.LFB550
 6122 0b4d 01       		.uleb128 0x1
 6123 0b4e 9C       		.byte	0x9c
 6124 0b4f 640B0000 		.4byte	0xb64
 6125 0b53 1D       		.uleb128 0x1d
 6126 0b54 BC150000 		.4byte	.LASF209
 6127 0b58 01       		.byte	0x1
 6128 0b59 9F0E     		.2byte	0xe9f
 6129 0b5b 640B0000 		.4byte	0xb64
 6130 0b5f F1000000 		.4byte	.LLST3
 6131 0b63 00       		.byte	0
 6132 0b64 06       		.uleb128 0x6
 6133 0b65 04       		.byte	0x4
 6134 0b66 5A0A0000 		.4byte	0xa5a
 6135 0b6a 21       		.uleb128 0x21
 6136 0b6b 5A140000 		.4byte	.LASF211
 6137 0b6f 01       		.byte	0x1
 6138 0b70 670E     		.2byte	0xe67
 6139 0b72 00000000 		.4byte	.LFB549
 6140 0b76 12000000 		.4byte	.LFE549-.LFB549
 6141 0b7a 01       		.uleb128 0x1
 6142 0b7b 9C       		.byte	0x9c
 6143 0b7c AA0B0000 		.4byte	0xbaa
 6144 0b80 1C       		.uleb128 0x1c
 6145 0b81 BC150000 		.4byte	.LASF209
 6146 0b85 01       		.byte	0x1
 6147 0b86 670E     		.2byte	0xe67
 6148 0b88 640B0000 		.4byte	0xb64
 6149 0b8c 04010000 		.4byte	.LLST4
 6150 0b90 22       		.uleb128 0x22
 6151 0b91 0A000000 		.4byte	.LVL13
 6152 0b95 F6280000 		.4byte	0x28f6
 6153 0b99 23       		.uleb128 0x23
 6154 0b9a 10000000 		.4byte	.LVL14
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 211


 6155 0b9e F6280000 		.4byte	0x28f6
 6156 0ba2 24       		.uleb128 0x24
 6157 0ba3 01       		.uleb128 0x1
 6158 0ba4 50       		.byte	0x50
 6159 0ba5 02       		.uleb128 0x2
 6160 0ba6 74       		.byte	0x74
 6161 0ba7 00       		.sleb128 0
 6162 0ba8 00       		.byte	0
 6163 0ba9 00       		.byte	0
 6164 0baa 21       		.uleb128 0x21
 6165 0bab 1A100000 		.4byte	.LASF213
 6166 0baf 01       		.byte	0x1
 6167 0bb0 3703     		.2byte	0x337
 6168 0bb2 00000000 		.4byte	.LFB513
 6169 0bb6 9E000000 		.4byte	.LFE513-.LFB513
 6170 0bba 01       		.uleb128 0x1
 6171 0bbb 9C       		.byte	0x9c
 6172 0bbc BA0C0000 		.4byte	0xcba
 6173 0bc0 1C       		.uleb128 0x1c
 6174 0bc1 540B0000 		.4byte	.LASF214
 6175 0bc5 01       		.byte	0x1
 6176 0bc6 3703     		.2byte	0x337
 6177 0bc8 C3070000 		.4byte	0x7c3
 6178 0bcc 22010000 		.4byte	.LLST5
 6179 0bd0 1C       		.uleb128 0x1c
 6180 0bd1 F9080000 		.4byte	.LASF215
 6181 0bd5 01       		.byte	0x1
 6182 0bd6 3803     		.2byte	0x338
 6183 0bd8 A5090000 		.4byte	0x9a5
 6184 0bdc 40010000 		.4byte	.LLST6
 6185 0be0 1C       		.uleb128 0x1c
 6186 0be1 450A0000 		.4byte	.LASF216
 6187 0be5 01       		.byte	0x1
 6188 0be6 3903     		.2byte	0x339
 6189 0be8 BA0C0000 		.4byte	0xcba
 6190 0bec 5E010000 		.4byte	.LLST7
 6191 0bf0 1C       		.uleb128 0x1c
 6192 0bf1 2F100000 		.4byte	.LASF217
 6193 0bf5 01       		.byte	0x1
 6194 0bf6 3A03     		.2byte	0x33a
 6195 0bf8 BF0C0000 		.4byte	0xcbf
 6196 0bfc 9B010000 		.4byte	.LLST8
 6197 0c00 1C       		.uleb128 0x1c
 6198 0c01 A0000000 		.4byte	.LASF196
 6199 0c05 01       		.byte	0x1
 6200 0c06 3B03     		.2byte	0x33b
 6201 0c08 F5070000 		.4byte	0x7f5
 6202 0c0c B9010000 		.4byte	.LLST9
 6203 0c10 25       		.uleb128 0x25
 6204 0c11 BE160000 		.4byte	.LASF218
 6205 0c15 01       		.byte	0x1
 6206 0c16 3C03     		.2byte	0x33c
 6207 0c18 CA0C0000 		.4byte	0xcca
 6208 0c1c 02       		.uleb128 0x2
 6209 0c1d 91       		.byte	0x91
 6210 0c1e 04       		.sleb128 4
 6211 0c1f 25       		.uleb128 0x25
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 212


 6212 0c20 260B0000 		.4byte	.LASF219
 6213 0c24 01       		.byte	0x1
 6214 0c25 3D03     		.2byte	0x33d
 6215 0c27 640B0000 		.4byte	0xb64
 6216 0c2b 02       		.uleb128 0x2
 6217 0c2c 91       		.byte	0x91
 6218 0c2d 08       		.sleb128 8
 6219 0c2e 25       		.uleb128 0x25
 6220 0c2f 05150000 		.4byte	.LASF220
 6221 0c33 01       		.byte	0x1
 6222 0c34 3E03     		.2byte	0x33e
 6223 0c36 DA0C0000 		.4byte	0xcda
 6224 0c3a 02       		.uleb128 0x2
 6225 0c3b 91       		.byte	0x91
 6226 0c3c 0C       		.sleb128 12
 6227 0c3d 26       		.uleb128 0x26
 6228 0c3e 76160000 		.4byte	.LASF193
 6229 0c42 01       		.byte	0x1
 6230 0c43 4003     		.2byte	0x340
 6231 0c45 AA090000 		.4byte	0x9aa
 6232 0c49 01       		.uleb128 0x1
 6233 0c4a 55       		.byte	0x55
 6234 0c4b 27       		.uleb128 0x27
 6235 0c4c 7800     		.ascii	"x\000"
 6236 0c4e 01       		.byte	0x1
 6237 0c4f 4103     		.2byte	0x341
 6238 0c51 F5070000 		.4byte	0x7f5
 6239 0c55 D8010000 		.4byte	.LLST10
 6240 0c59 28       		.uleb128 0x28
 6241 0c5a 1C000000 		.4byte	.LVL19
 6242 0c5e 01290000 		.4byte	0x2901
 6243 0c62 750C0000 		.4byte	0xc75
 6244 0c66 24       		.uleb128 0x24
 6245 0c67 01       		.uleb128 0x1
 6246 0c68 51       		.byte	0x51
 6247 0c69 02       		.uleb128 0x2
 6248 0c6a 08       		.byte	0x8
 6249 0c6b A5       		.byte	0xa5
 6250 0c6c 24       		.uleb128 0x24
 6251 0c6d 01       		.uleb128 0x1
 6252 0c6e 52       		.byte	0x52
 6253 0c6f 04       		.uleb128 0x4
 6254 0c70 75       		.byte	0x75
 6255 0c71 00       		.sleb128 0
 6256 0c72 32       		.byte	0x32
 6257 0c73 24       		.byte	0x24
 6258 0c74 00       		.byte	0
 6259 0c75 28       		.uleb128 0x28
 6260 0c76 5A000000 		.4byte	.LVL26
 6261 0c7a 0C290000 		.4byte	0x290c
 6262 0c7e 890C0000 		.4byte	0xc89
 6263 0c82 24       		.uleb128 0x24
 6264 0c83 01       		.uleb128 0x1
 6265 0c84 50       		.byte	0x50
 6266 0c85 02       		.uleb128 0x2
 6267 0c86 74       		.byte	0x74
 6268 0c87 04       		.sleb128 4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 213


 6269 0c88 00       		.byte	0
 6270 0c89 28       		.uleb128 0x28
 6271 0c8a 62000000 		.4byte	.LVL27
 6272 0c8e 0C290000 		.4byte	0x290c
 6273 0c92 9D0C0000 		.4byte	0xc9d
 6274 0c96 24       		.uleb128 0x24
 6275 0c97 01       		.uleb128 0x1
 6276 0c98 50       		.byte	0x50
 6277 0c99 02       		.uleb128 0x2
 6278 0c9a 74       		.byte	0x74
 6279 0c9b 18       		.sleb128 24
 6280 0c9c 00       		.byte	0
 6281 0c9d 23       		.uleb128 0x23
 6282 0c9e 94000000 		.4byte	.LVL32
 6283 0ca2 18290000 		.4byte	0x2918
 6284 0ca6 24       		.uleb128 0x24
 6285 0ca7 01       		.uleb128 0x1
 6286 0ca8 50       		.byte	0x50
 6287 0ca9 02       		.uleb128 0x2
 6288 0caa 75       		.byte	0x75
 6289 0cab 00       		.sleb128 0
 6290 0cac 24       		.uleb128 0x24
 6291 0cad 01       		.uleb128 0x1
 6292 0cae 51       		.byte	0x51
 6293 0caf 02       		.uleb128 0x2
 6294 0cb0 7A       		.byte	0x7a
 6295 0cb1 00       		.sleb128 0
 6296 0cb2 24       		.uleb128 0x24
 6297 0cb3 01       		.uleb128 0x1
 6298 0cb4 52       		.byte	0x52
 6299 0cb5 02       		.uleb128 0x2
 6300 0cb6 78       		.byte	0x78
 6301 0cb7 00       		.sleb128 0
 6302 0cb8 00       		.byte	0
 6303 0cb9 00       		.byte	0
 6304 0cba 07       		.uleb128 0x7
 6305 0cbb 01010000 		.4byte	0x101
 6306 0cbf 07       		.uleb128 0x7
 6307 0cc0 BB000000 		.4byte	0xbb
 6308 0cc4 06       		.uleb128 0x6
 6309 0cc5 04       		.byte	0x4
 6310 0cc6 F8080000 		.4byte	0x8f8
 6311 0cca 07       		.uleb128 0x7
 6312 0ccb C40C0000 		.4byte	0xcc4
 6313 0ccf 06       		.uleb128 0x6
 6314 0cd0 04       		.byte	0x4
 6315 0cd1 D50C0000 		.4byte	0xcd5
 6316 0cd5 07       		.uleb128 0x7
 6317 0cd6 9A090000 		.4byte	0x99a
 6318 0cda 07       		.uleb128 0x7
 6319 0cdb CF0C0000 		.4byte	0xccf
 6320 0cdf 21       		.uleb128 0x21
 6321 0ce0 8F160000 		.4byte	.LASF221
 6322 0ce4 01       		.byte	0x1
 6323 0ce5 770D     		.2byte	0xd77
 6324 0ce7 00000000 		.4byte	.LFB547
 6325 0ceb 58000000 		.4byte	.LFE547-.LFB547
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 214


 6326 0cef 01       		.uleb128 0x1
 6327 0cf0 9C       		.byte	0x9c
 6328 0cf1 880D0000 		.4byte	0xd88
 6329 0cf5 1D       		.uleb128 0x1d
 6330 0cf6 A0000000 		.4byte	.LASF196
 6331 0cfa 01       		.byte	0x1
 6332 0cfb 790D     		.2byte	0xd79
 6333 0cfd F5070000 		.4byte	0x7f5
 6334 0d01 02020000 		.4byte	.LLST11
 6335 0d05 28       		.uleb128 0x28
 6336 0d06 14000000 		.4byte	.LVL35
 6337 0d0a 23290000 		.4byte	0x2923
 6338 0d0e 260D0000 		.4byte	0xd26
 6339 0d12 24       		.uleb128 0x24
 6340 0d13 01       		.uleb128 0x1
 6341 0d14 50       		.byte	0x50
 6342 0d15 0F       		.uleb128 0xf
 6343 0d16 74       		.byte	0x74
 6344 0d17 00       		.sleb128 0
 6345 0d18 32       		.byte	0x32
 6346 0d19 24       		.byte	0x24
 6347 0d1a 74       		.byte	0x74
 6348 0d1b 00       		.sleb128 0
 6349 0d1c 22       		.byte	0x22
 6350 0d1d 32       		.byte	0x32
 6351 0d1e 24       		.byte	0x24
 6352 0d1f 03       		.byte	0x3
 6353 0d20 30000000 		.4byte	.LANCHOR0+48
 6354 0d24 22       		.byte	0x22
 6355 0d25 00       		.byte	0
 6356 0d26 28       		.uleb128 0x28
 6357 0d27 26000000 		.4byte	.LVL38
 6358 0d2b 23290000 		.4byte	0x2923
 6359 0d2f 3A0D0000 		.4byte	0xd3a
 6360 0d33 24       		.uleb128 0x24
 6361 0d34 01       		.uleb128 0x1
 6362 0d35 50       		.byte	0x50
 6363 0d36 02       		.uleb128 0x2
 6364 0d37 76       		.byte	0x76
 6365 0d38 00       		.sleb128 0
 6366 0d39 00       		.byte	0
 6367 0d3a 28       		.uleb128 0x28
 6368 0d3b 30000000 		.4byte	.LVL39
 6369 0d3f 23290000 		.4byte	0x2923
 6370 0d43 4E0D0000 		.4byte	0xd4e
 6371 0d47 24       		.uleb128 0x24
 6372 0d48 01       		.uleb128 0x1
 6373 0d49 50       		.byte	0x50
 6374 0d4a 02       		.uleb128 0x2
 6375 0d4b 75       		.byte	0x75
 6376 0d4c 00       		.sleb128 0
 6377 0d4d 00       		.byte	0
 6378 0d4e 28       		.uleb128 0x28
 6379 0d4f 38000000 		.4byte	.LVL40
 6380 0d53 23290000 		.4byte	0x2923
 6381 0d57 620D0000 		.4byte	0xd62
 6382 0d5b 24       		.uleb128 0x24
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 215


 6383 0d5c 01       		.uleb128 0x1
 6384 0d5d 50       		.byte	0x50
 6385 0d5e 02       		.uleb128 0x2
 6386 0d5f 74       		.byte	0x74
 6387 0d60 14       		.sleb128 20
 6388 0d61 00       		.byte	0
 6389 0d62 28       		.uleb128 0x28
 6390 0d63 40000000 		.4byte	.LVL41
 6391 0d67 23290000 		.4byte	0x2923
 6392 0d6b 770D0000 		.4byte	0xd77
 6393 0d6f 24       		.uleb128 0x24
 6394 0d70 01       		.uleb128 0x1
 6395 0d71 50       		.byte	0x50
 6396 0d72 03       		.uleb128 0x3
 6397 0d73 74       		.byte	0x74
 6398 0d74 E803     		.sleb128 488
 6399 0d76 00       		.byte	0
 6400 0d77 23       		.uleb128 0x23
 6401 0d78 46000000 		.4byte	.LVL42
 6402 0d7c 23290000 		.4byte	0x2923
 6403 0d80 24       		.uleb128 0x24
 6404 0d81 01       		.uleb128 0x1
 6405 0d82 50       		.byte	0x50
 6406 0d83 02       		.uleb128 0x2
 6407 0d84 74       		.byte	0x74
 6408 0d85 00       		.sleb128 0
 6409 0d86 00       		.byte	0
 6410 0d87 00       		.byte	0
 6411 0d88 21       		.uleb128 0x21
 6412 0d89 F40A0000 		.4byte	.LASF222
 6413 0d8d 01       		.byte	0x1
 6414 0d8e 0304     		.2byte	0x403
 6415 0d90 00000000 		.4byte	.LFB514
 6416 0d94 AC000000 		.4byte	.LFE514-.LFB514
 6417 0d98 01       		.uleb128 0x1
 6418 0d99 9C       		.byte	0x9c
 6419 0d9a DE0D0000 		.4byte	0xdde
 6420 0d9e 1C       		.uleb128 0x1c
 6421 0d9f 260B0000 		.4byte	.LASF219
 6422 0da3 01       		.byte	0x1
 6423 0da4 0304     		.2byte	0x403
 6424 0da6 640B0000 		.4byte	0xb64
 6425 0daa 21020000 		.4byte	.LLST12
 6426 0dae 22       		.uleb128 0x22
 6427 0daf 08000000 		.4byte	.LVL44
 6428 0db3 2F290000 		.4byte	0x292f
 6429 0db7 22       		.uleb128 0x22
 6430 0db8 2C000000 		.4byte	.LVL45
 6431 0dbc DF0C0000 		.4byte	0xcdf
 6432 0dc0 28       		.uleb128 0x28
 6433 0dc1 7A000000 		.4byte	.LVL46
 6434 0dc5 3A290000 		.4byte	0x293a
 6435 0dc9 D40D0000 		.4byte	0xdd4
 6436 0dcd 24       		.uleb128 0x24
 6437 0dce 01       		.uleb128 0x1
 6438 0dcf 51       		.byte	0x51
 6439 0dd0 02       		.uleb128 0x2
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 216


 6440 0dd1 74       		.byte	0x74
 6441 0dd2 04       		.sleb128 4
 6442 0dd3 00       		.byte	0
 6443 0dd4 22       		.uleb128 0x22
 6444 0dd5 7E000000 		.4byte	.LVL47
 6445 0dd9 46290000 		.4byte	0x2946
 6446 0ddd 00       		.byte	0
 6447 0dde 21       		.uleb128 0x21
 6448 0ddf CC160000 		.4byte	.LASF223
 6449 0de3 01       		.byte	0x1
 6450 0de4 970D     		.2byte	0xd97
 6451 0de6 00000000 		.4byte	.LFB548
 6452 0dea 44000000 		.4byte	.LFE548-.LFB548
 6453 0dee 01       		.uleb128 0x1
 6454 0def 9C       		.byte	0x9c
 6455 0df0 450E0000 		.4byte	0xe45
 6456 0df4 1F       		.uleb128 0x1f
 6457 0df5 02000000 		.4byte	.LBB96
 6458 0df9 3C000000 		.4byte	.LBE96-.LBB96
 6459 0dfd 1D       		.uleb128 0x1d
 6460 0dfe BC150000 		.4byte	.LASF209
 6461 0e02 01       		.byte	0x1
 6462 0e03 9E0D     		.2byte	0xd9e
 6463 0e05 640B0000 		.4byte	0xb64
 6464 0e09 4D020000 		.4byte	.LLST13
 6465 0e0d 22       		.uleb128 0x22
 6466 0e0e 08000000 		.4byte	.LVL49
 6467 0e12 2F290000 		.4byte	0x292f
 6468 0e16 28       		.uleb128 0x28
 6469 0e17 16000000 		.4byte	.LVL51
 6470 0e1b 51290000 		.4byte	0x2951
 6471 0e1f 2A0E0000 		.4byte	0xe2a
 6472 0e23 24       		.uleb128 0x24
 6473 0e24 01       		.uleb128 0x1
 6474 0e25 50       		.byte	0x50
 6475 0e26 02       		.uleb128 0x2
 6476 0e27 75       		.byte	0x75
 6477 0e28 04       		.sleb128 4
 6478 0e29 00       		.byte	0
 6479 0e2a 22       		.uleb128 0x22
 6480 0e2b 2E000000 		.4byte	.LVL52
 6481 0e2f 46290000 		.4byte	0x2946
 6482 0e33 23       		.uleb128 0x23
 6483 0e34 34000000 		.4byte	.LVL53
 6484 0e38 6A0B0000 		.4byte	0xb6a
 6485 0e3c 24       		.uleb128 0x24
 6486 0e3d 01       		.uleb128 0x1
 6487 0e3e 50       		.byte	0x50
 6488 0e3f 02       		.uleb128 0x2
 6489 0e40 75       		.byte	0x75
 6490 0e41 00       		.sleb128 0
 6491 0e42 00       		.byte	0
 6492 0e43 00       		.byte	0
 6493 0e44 00       		.byte	0
 6494 0e45 21       		.uleb128 0x21
 6495 0e46 0E150000 		.4byte	.LASF224
 6496 0e4a 01       		.byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 217


 6497 0e4b 3B13     		.2byte	0x133b
 6498 0e4d 00000000 		.4byte	.LFB560
 6499 0e51 68000000 		.4byte	.LFE560-.LFB560
 6500 0e55 01       		.uleb128 0x1
 6501 0e56 9C       		.byte	0x9c
 6502 0e57 CE0E0000 		.4byte	0xece
 6503 0e5b 1C       		.uleb128 0x1c
 6504 0e5c 45140000 		.4byte	.LASF225
 6505 0e60 01       		.byte	0x1
 6506 0e61 3B13     		.2byte	0x133b
 6507 0e63 00080000 		.4byte	0x800
 6508 0e67 60020000 		.4byte	.LLST14
 6509 0e6b 1C       		.uleb128 0x1c
 6510 0e6c FB120000 		.4byte	.LASF226
 6511 0e70 01       		.byte	0x1
 6512 0e71 3B13     		.2byte	0x133b
 6513 0e73 CE0E0000 		.4byte	0xece
 6514 0e77 8C020000 		.4byte	.LLST15
 6515 0e7b 1D       		.uleb128 0x1d
 6516 0e7c 9A150000 		.4byte	.LASF227
 6517 0e80 01       		.byte	0x1
 6518 0e81 3D13     		.2byte	0x133d
 6519 0e83 00080000 		.4byte	0x800
 6520 0e87 B8020000 		.4byte	.LLST16
 6521 0e8b 1D       		.uleb128 0x1d
 6522 0e8c BE080000 		.4byte	.LASF228
 6523 0e90 01       		.byte	0x1
 6524 0e91 3E13     		.2byte	0x133e
 6525 0e93 D30E0000 		.4byte	0xed3
 6526 0e97 CB020000 		.4byte	.LLST17
 6527 0e9b 22       		.uleb128 0x22
 6528 0e9c 16000000 		.4byte	.LVL57
 6529 0ea0 51290000 		.4byte	0x2951
 6530 0ea4 28       		.uleb128 0x28
 6531 0ea5 2A000000 		.4byte	.LVL58
 6532 0ea9 3A290000 		.4byte	0x293a
 6533 0ead BB0E0000 		.4byte	0xebb
 6534 0eb1 24       		.uleb128 0x24
 6535 0eb2 01       		.uleb128 0x1
 6536 0eb3 50       		.byte	0x50
 6537 0eb4 05       		.uleb128 0x5
 6538 0eb5 03       		.byte	0x3
 6539 0eb6 00000000 		.4byte	.LANCHOR0
 6540 0eba 00       		.byte	0
 6541 0ebb 22       		.uleb128 0x22
 6542 0ebc 4A000000 		.4byte	.LVL61
 6543 0ec0 5D290000 		.4byte	0x295d
 6544 0ec4 22       		.uleb128 0x22
 6545 0ec5 5A000000 		.4byte	.LVL64
 6546 0ec9 5D290000 		.4byte	0x295d
 6547 0ecd 00       		.byte	0
 6548 0ece 07       		.uleb128 0x7
 6549 0ecf EA070000 		.4byte	0x7ea
 6550 0ed3 07       		.uleb128 0x7
 6551 0ed4 00080000 		.4byte	0x800
 6552 0ed8 29       		.uleb128 0x29
 6553 0ed9 84080000 		.4byte	.LASF230
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 218


 6554 0edd 01       		.byte	0x1
 6555 0ede A30C     		.2byte	0xca3
 6556 0ee0 00000000 		.4byte	.LFB544
 6557 0ee4 2C000000 		.4byte	.LFE544-.LFB544
 6558 0ee8 01       		.uleb128 0x1
 6559 0ee9 9C       		.byte	0x9c
 6560 0eea 270F0000 		.4byte	0xf27
 6561 0eee 1C       		.uleb128 0x1c
 6562 0eef 2F100000 		.4byte	.LASF217
 6563 0ef3 01       		.byte	0x1
 6564 0ef4 A30C     		.2byte	0xca3
 6565 0ef6 BB000000 		.4byte	0xbb
 6566 0efa DE020000 		.4byte	.LLST18
 6567 0efe 2A       		.uleb128 0x2a
 6568 0eff 1E000000 		.4byte	.LBB97
 6569 0f03 04000000 		.4byte	.LBE97-.LBB97
 6570 0f07 1D0F0000 		.4byte	0xf1d
 6571 0f0b 2B       		.uleb128 0x2b
 6572 0f0c BF0D0000 		.4byte	.LASF352
 6573 0f10 01       		.byte	0x1
 6574 0f11 D80C     		.2byte	0xcd8
 6575 0f13 22       		.uleb128 0x22
 6576 0f14 22000000 		.4byte	.LVL69
 6577 0f18 69290000 		.4byte	0x2969
 6578 0f1c 00       		.byte	0
 6579 0f1d 22       		.uleb128 0x22
 6580 0f1e 06000000 		.4byte	.LVL68
 6581 0f22 DE0D0000 		.4byte	0xdde
 6582 0f26 00       		.byte	0
 6583 0f27 2C       		.uleb128 0x2c
 6584 0f28 E3140000 		.4byte	.LASF233
 6585 0f2c 01       		.byte	0x1
 6586 0f2d DC02     		.2byte	0x2dc
 6587 0f2f EA070000 		.4byte	0x7ea
 6588 0f33 00000000 		.4byte	.LFB512
 6589 0f37 62000000 		.4byte	.LFE512-.LFB512
 6590 0f3b 01       		.uleb128 0x1
 6591 0f3c 9C       		.byte	0x9c
 6592 0f3d 6B100000 		.4byte	0x106b
 6593 0f41 1C       		.uleb128 0x1c
 6594 0f42 540B0000 		.4byte	.LASF214
 6595 0f46 01       		.byte	0x1
 6596 0f47 DC02     		.2byte	0x2dc
 6597 0f49 C3070000 		.4byte	0x7c3
 6598 0f4d FF020000 		.4byte	.LLST19
 6599 0f51 1C       		.uleb128 0x1c
 6600 0f52 F9080000 		.4byte	.LASF215
 6601 0f56 01       		.byte	0x1
 6602 0f57 DD02     		.2byte	0x2dd
 6603 0f59 A5090000 		.4byte	0x9a5
 6604 0f5d 1D030000 		.4byte	.LLST20
 6605 0f61 1C       		.uleb128 0x1c
 6606 0f62 24060000 		.4byte	.LASF231
 6607 0f66 01       		.byte	0x1
 6608 0f67 DE02     		.2byte	0x2de
 6609 0f69 6B100000 		.4byte	0x106b
 6610 0f6d 3B030000 		.4byte	.LLST21
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 219


 6611 0f71 1C       		.uleb128 0x1c
 6612 0f72 2F100000 		.4byte	.LASF217
 6613 0f76 01       		.byte	0x1
 6614 0f77 DF02     		.2byte	0x2df
 6615 0f79 BF0C0000 		.4byte	0xcbf
 6616 0f7d 5C030000 		.4byte	.LLST22
 6617 0f81 25       		.uleb128 0x25
 6618 0f82 A0000000 		.4byte	.LASF196
 6619 0f86 01       		.byte	0x1
 6620 0f87 E002     		.2byte	0x2e0
 6621 0f89 F5070000 		.4byte	0x7f5
 6622 0f8d 02       		.uleb128 0x2
 6623 0f8e 91       		.byte	0x91
 6624 0f8f 00       		.sleb128 0
 6625 0f90 25       		.uleb128 0x25
 6626 0f91 BE160000 		.4byte	.LASF218
 6627 0f95 01       		.byte	0x1
 6628 0f96 E102     		.2byte	0x2e1
 6629 0f98 CA0C0000 		.4byte	0xcca
 6630 0f9c 02       		.uleb128 0x2
 6631 0f9d 91       		.byte	0x91
 6632 0f9e 04       		.sleb128 4
 6633 0f9f 1D       		.uleb128 0x1d
 6634 0fa0 260B0000 		.4byte	.LASF219
 6635 0fa4 01       		.byte	0x1
 6636 0fa5 E302     		.2byte	0x2e3
 6637 0fa7 640B0000 		.4byte	0xb64
 6638 0fab 7A030000 		.4byte	.LLST23
 6639 0faf 1D       		.uleb128 0x1d
 6640 0fb0 5A120000 		.4byte	.LASF208
 6641 0fb4 01       		.byte	0x1
 6642 0fb5 E402     		.2byte	0x2e4
 6643 0fb7 EA070000 		.4byte	0x7ea
 6644 0fbb A3030000 		.4byte	.LLST24
 6645 0fbf 2A       		.uleb128 0x2a
 6646 0fc0 0E000000 		.4byte	.LBB98
 6647 0fc4 24000000 		.4byte	.LBE98-.LBB98
 6648 0fc8 17100000 		.4byte	0x1017
 6649 0fcc 1D       		.uleb128 0x1d
 6650 0fcd 0F110000 		.4byte	.LASF197
 6651 0fd1 01       		.byte	0x1
 6652 0fd2 0103     		.2byte	0x301
 6653 0fd4 AA090000 		.4byte	0x9aa
 6654 0fd8 C2030000 		.4byte	.LLST25
 6655 0fdc 28       		.uleb128 0x28
 6656 0fdd 14000000 		.4byte	.LVL72
 6657 0fe1 75290000 		.4byte	0x2975
 6658 0fe5 F20F0000 		.4byte	0xff2
 6659 0fe9 24       		.uleb128 0x24
 6660 0fea 01       		.uleb128 0x1
 6661 0feb 50       		.byte	0x50
 6662 0fec 04       		.uleb128 0x4
 6663 0fed 75       		.byte	0x75
 6664 0fee 00       		.sleb128 0
 6665 0fef 32       		.byte	0x32
 6666 0ff0 24       		.byte	0x24
 6667 0ff1 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 220


 6668 0ff2 28       		.uleb128 0x28
 6669 0ff3 1E000000 		.4byte	.LVL74
 6670 0ff7 75290000 		.4byte	0x2975
 6671 0ffb 06100000 		.4byte	0x1006
 6672 0fff 24       		.uleb128 0x24
 6673 1000 01       		.uleb128 0x1
 6674 1001 50       		.byte	0x50
 6675 1002 02       		.uleb128 0x2
 6676 1003 08       		.byte	0x8
 6677 1004 60       		.byte	0x60
 6678 1005 00       		.byte	0
 6679 1006 23       		.uleb128 0x23
 6680 1007 2E000000 		.4byte	.LVL76
 6681 100b F6280000 		.4byte	0x28f6
 6682 100f 24       		.uleb128 0x24
 6683 1010 01       		.uleb128 0x1
 6684 1011 50       		.byte	0x50
 6685 1012 02       		.uleb128 0x2
 6686 1013 79       		.byte	0x79
 6687 1014 00       		.sleb128 0
 6688 1015 00       		.byte	0
 6689 1016 00       		.byte	0
 6690 1017 28       		.uleb128 0x28
 6691 1018 4E000000 		.4byte	.LVL79
 6692 101c AA0B0000 		.4byte	0xbaa
 6693 1020 5A100000 		.4byte	0x105a
 6694 1024 24       		.uleb128 0x24
 6695 1025 01       		.uleb128 0x1
 6696 1026 50       		.byte	0x50
 6697 1027 02       		.uleb128 0x2
 6698 1028 76       		.byte	0x76
 6699 1029 00       		.sleb128 0
 6700 102a 24       		.uleb128 0x24
 6701 102b 01       		.uleb128 0x1
 6702 102c 51       		.byte	0x51
 6703 102d 02       		.uleb128 0x2
 6704 102e 77       		.byte	0x77
 6705 102f 00       		.sleb128 0
 6706 1030 24       		.uleb128 0x24
 6707 1031 01       		.uleb128 0x1
 6708 1032 52       		.byte	0x52
 6709 1033 02       		.uleb128 0x2
 6710 1034 75       		.byte	0x75
 6711 1035 00       		.sleb128 0
 6712 1036 24       		.uleb128 0x24
 6713 1037 01       		.uleb128 0x1
 6714 1038 53       		.byte	0x53
 6715 1039 02       		.uleb128 0x2
 6716 103a 78       		.byte	0x78
 6717 103b 00       		.sleb128 0
 6718 103c 24       		.uleb128 0x24
 6719 103d 02       		.uleb128 0x2
 6720 103e 7D       		.byte	0x7d
 6721 103f 00       		.sleb128 0
 6722 1040 03       		.uleb128 0x3
 6723 1041 91       		.byte	0x91
 6724 1042 00       		.sleb128 0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 221


 6725 1043 06       		.byte	0x6
 6726 1044 24       		.uleb128 0x24
 6727 1045 02       		.uleb128 0x2
 6728 1046 7D       		.byte	0x7d
 6729 1047 04       		.sleb128 4
 6730 1048 03       		.uleb128 0x3
 6731 1049 91       		.byte	0x91
 6732 104a 04       		.sleb128 4
 6733 104b 06       		.byte	0x6
 6734 104c 24       		.uleb128 0x24
 6735 104d 02       		.uleb128 0x2
 6736 104e 7D       		.byte	0x7d
 6737 104f 08       		.sleb128 8
 6738 1050 02       		.uleb128 0x2
 6739 1051 74       		.byte	0x74
 6740 1052 00       		.sleb128 0
 6741 1053 24       		.uleb128 0x24
 6742 1054 02       		.uleb128 0x2
 6743 1055 7D       		.byte	0x7d
 6744 1056 0C       		.sleb128 12
 6745 1057 01       		.uleb128 0x1
 6746 1058 30       		.byte	0x30
 6747 1059 00       		.byte	0
 6748 105a 23       		.uleb128 0x23
 6749 105b 54000000 		.4byte	.LVL80
 6750 105f 880D0000 		.4byte	0xd88
 6751 1063 24       		.uleb128 0x24
 6752 1064 01       		.uleb128 0x1
 6753 1065 50       		.byte	0x50
 6754 1066 02       		.uleb128 0x2
 6755 1067 74       		.byte	0x74
 6756 1068 00       		.sleb128 0
 6757 1069 00       		.byte	0
 6758 106a 00       		.byte	0
 6759 106b 07       		.uleb128 0x7
 6760 106c EB000000 		.4byte	0xeb
 6761 1070 2D       		.uleb128 0x2d
 6762 1071 F50E0000 		.4byte	.LASF238
 6763 1075 01       		.byte	0x1
 6764 1076 5804     		.2byte	0x458
 6765 1078 00000000 		.4byte	.LFB515
 6766 107c B0000000 		.4byte	.LFE515-.LFB515
 6767 1080 01       		.uleb128 0x1
 6768 1081 9C       		.byte	0x9c
 6769 1082 3D110000 		.4byte	0x113d
 6770 1086 1C       		.uleb128 0x1c
 6771 1087 17110000 		.4byte	.LASF232
 6772 108b 01       		.byte	0x1
 6773 108c 5804     		.2byte	0x458
 6774 108e F8080000 		.4byte	0x8f8
 6775 1092 EB030000 		.4byte	.LLST26
 6776 1096 1D       		.uleb128 0x1d
 6777 1097 BC150000 		.4byte	.LASF209
 6778 109b 01       		.byte	0x1
 6779 109c 5A04     		.2byte	0x45a
 6780 109e 640B0000 		.4byte	0xb64
 6781 10a2 09040000 		.4byte	.LLST27
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 222


 6782 10a6 2E       		.uleb128 0x2e
 6783 10a7 660A0000 		.4byte	0xa66
 6784 10ab 84000000 		.4byte	.LBB99
 6785 10af 12000000 		.4byte	.LBE99-.LBB99
 6786 10b3 01       		.byte	0x1
 6787 10b4 A504     		.2byte	0x4a5
 6788 10b6 CA100000 		.4byte	0x10ca
 6789 10ba 1F       		.uleb128 0x1f
 6790 10bb 84000000 		.4byte	.LBB100
 6791 10bf 12000000 		.4byte	.LBE100-.LBB100
 6792 10c3 20       		.uleb128 0x20
 6793 10c4 720A0000 		.4byte	0xa72
 6794 10c8 00       		.byte	0
 6795 10c9 00       		.byte	0
 6796 10ca 22       		.uleb128 0x22
 6797 10cb 08000000 		.4byte	.LVL84
 6798 10cf 2F290000 		.4byte	0x292f
 6799 10d3 28       		.uleb128 0x28
 6800 10d4 18000000 		.4byte	.LVL86
 6801 10d8 51290000 		.4byte	0x2951
 6802 10dc E7100000 		.4byte	0x10e7
 6803 10e0 24       		.uleb128 0x24
 6804 10e1 01       		.uleb128 0x1
 6805 10e2 50       		.byte	0x50
 6806 10e3 02       		.uleb128 0x2
 6807 10e4 76       		.byte	0x76
 6808 10e5 00       		.sleb128 0
 6809 10e6 00       		.byte	0
 6810 10e7 28       		.uleb128 0x28
 6811 10e8 24000000 		.4byte	.LVL87
 6812 10ec 51290000 		.4byte	0x2951
 6813 10f0 FB100000 		.4byte	0x10fb
 6814 10f4 24       		.uleb128 0x24
 6815 10f5 01       		.uleb128 0x1
 6816 10f6 50       		.byte	0x50
 6817 10f7 02       		.uleb128 0x2
 6818 10f8 74       		.byte	0x74
 6819 10f9 18       		.sleb128 24
 6820 10fa 00       		.byte	0
 6821 10fb 28       		.uleb128 0x28
 6822 10fc 44000000 		.4byte	.LVL88
 6823 1100 3A290000 		.4byte	0x293a
 6824 1104 16110000 		.4byte	0x1116
 6825 1108 24       		.uleb128 0x24
 6826 1109 01       		.uleb128 0x1
 6827 110a 50       		.byte	0x50
 6828 110b 03       		.uleb128 0x3
 6829 110c 75       		.byte	0x75
 6830 110d E803     		.sleb128 488
 6831 110f 24       		.uleb128 0x24
 6832 1110 01       		.uleb128 0x1
 6833 1111 51       		.byte	0x51
 6834 1112 02       		.uleb128 0x2
 6835 1113 76       		.byte	0x76
 6836 1114 00       		.sleb128 0
 6837 1115 00       		.byte	0
 6838 1116 28       		.uleb128 0x28
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 223


 6839 1117 62000000 		.4byte	.LVL89
 6840 111b 6A0B0000 		.4byte	0xb6a
 6841 111f 2A110000 		.4byte	0x112a
 6842 1123 24       		.uleb128 0x24
 6843 1124 01       		.uleb128 0x1
 6844 1125 50       		.byte	0x50
 6845 1126 02       		.uleb128 0x2
 6846 1127 74       		.byte	0x74
 6847 1128 00       		.sleb128 0
 6848 1129 00       		.byte	0
 6849 112a 22       		.uleb128 0x22
 6850 112b 66000000 		.4byte	.LVL90
 6851 112f 3D0B0000 		.4byte	0xb3d
 6852 1133 22       		.uleb128 0x22
 6853 1134 6A000000 		.4byte	.LVL91
 6854 1138 46290000 		.4byte	0x2946
 6855 113c 00       		.byte	0
 6856 113d 2C       		.uleb128 0x2c
 6857 113e AC080000 		.4byte	.LASF234
 6858 1142 01       		.byte	0x1
 6859 1143 7C05     		.2byte	0x57c
 6860 1145 F5070000 		.4byte	0x7f5
 6861 1149 00000000 		.4byte	.LFB518
 6862 114d 20000000 		.4byte	.LFE518-.LFB518
 6863 1151 01       		.uleb128 0x1
 6864 1152 9C       		.byte	0x9c
 6865 1153 9A110000 		.4byte	0x119a
 6866 1157 1C       		.uleb128 0x1c
 6867 1158 800E0000 		.4byte	.LASF212
 6868 115c 01       		.byte	0x1
 6869 115d 7C05     		.2byte	0x57c
 6870 115f F8080000 		.4byte	0x8f8
 6871 1163 1C040000 		.4byte	.LLST28
 6872 1167 1D       		.uleb128 0x1d
 6873 1168 BC150000 		.4byte	.LASF209
 6874 116c 01       		.byte	0x1
 6875 116d 7E05     		.2byte	0x57e
 6876 116f 640B0000 		.4byte	0xb64
 6877 1173 3A040000 		.4byte	.LLST29
 6878 1177 1D       		.uleb128 0x1d
 6879 1178 1E0C0000 		.4byte	.LASF235
 6880 117c 01       		.byte	0x1
 6881 117d 7F05     		.2byte	0x57f
 6882 117f F5070000 		.4byte	0x7f5
 6883 1183 4D040000 		.4byte	.LLST30
 6884 1187 22       		.uleb128 0x22
 6885 1188 08000000 		.4byte	.LVL95
 6886 118c 2F290000 		.4byte	0x292f
 6887 1190 22       		.uleb128 0x22
 6888 1191 16000000 		.4byte	.LVL98
 6889 1195 46290000 		.4byte	0x2946
 6890 1199 00       		.byte	0
 6891 119a 2C       		.uleb128 0x2c
 6892 119b 670D0000 		.4byte	.LASF236
 6893 119f 01       		.byte	0x1
 6894 11a0 9205     		.2byte	0x592
 6895 11a2 F5070000 		.4byte	0x7f5
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 224


 6896 11a6 00000000 		.4byte	.LFB519
 6897 11aa 30000000 		.4byte	.LFE519-.LFB519
 6898 11ae 01       		.uleb128 0x1
 6899 11af 9C       		.byte	0x9c
 6900 11b0 3F120000 		.4byte	0x123f
 6901 11b4 1C       		.uleb128 0x1c
 6902 11b5 800E0000 		.4byte	.LASF212
 6903 11b9 01       		.byte	0x1
 6904 11ba 9205     		.2byte	0x592
 6905 11bc F8080000 		.4byte	0x8f8
 6906 11c0 6B040000 		.4byte	.LLST31
 6907 11c4 1D       		.uleb128 0x1d
 6908 11c5 BC150000 		.4byte	.LASF209
 6909 11c9 01       		.byte	0x1
 6910 11ca 9405     		.2byte	0x594
 6911 11cc 640B0000 		.4byte	0xb64
 6912 11d0 89040000 		.4byte	.LLST32
 6913 11d4 26       		.uleb128 0x26
 6914 11d5 1E0C0000 		.4byte	.LASF235
 6915 11d9 01       		.byte	0x1
 6916 11da 9505     		.2byte	0x595
 6917 11dc F5070000 		.4byte	0x7f5
 6918 11e0 01       		.uleb128 0x1
 6919 11e1 50       		.byte	0x50
 6920 11e2 2F       		.uleb128 0x2f
 6921 11e3 EF140000 		.4byte	.LASF237
 6922 11e7 01       		.byte	0x1
 6923 11e8 9505     		.2byte	0x595
 6924 11ea F5070000 		.4byte	0x7f5
 6925 11ee 2E       		.uleb128 0x2e
 6926 11ef 7E0A0000 		.4byte	0xa7e
 6927 11f3 08000000 		.4byte	.LBB101
 6928 11f7 14000000 		.4byte	.LBE101-.LBB101
 6929 11fb 01       		.byte	0x1
 6930 11fc A905     		.2byte	0x5a9
 6931 11fe 17120000 		.4byte	0x1217
 6932 1202 1F       		.uleb128 0x1f
 6933 1203 08000000 		.4byte	.LBB102
 6934 1207 14000000 		.4byte	.LBE102-.LBB102
 6935 120b 20       		.uleb128 0x20
 6936 120c 8E0A0000 		.4byte	0xa8e
 6937 1210 20       		.uleb128 0x20
 6938 1211 990A0000 		.4byte	0xa99
 6939 1215 00       		.byte	0
 6940 1216 00       		.byte	0
 6941 1217 2E       		.uleb128 0x2e
 6942 1218 A50A0000 		.4byte	0xaa5
 6943 121c 26000000 		.4byte	.LBB103
 6944 1220 04000000 		.4byte	.LBE103-.LBB103
 6945 1224 01       		.byte	0x1
 6946 1225 B005     		.2byte	0x5b0
 6947 1227 35120000 		.4byte	0x1235
 6948 122b 30       		.uleb128 0x30
 6949 122c B10A0000 		.4byte	0xab1
 6950 1230 9C040000 		.4byte	.LLST33
 6951 1234 00       		.byte	0
 6952 1235 22       		.uleb128 0x22
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 225


 6953 1236 08000000 		.4byte	.LVL101
 6954 123a 80290000 		.4byte	0x2980
 6955 123e 00       		.byte	0
 6956 123f 2D       		.uleb128 0x2d
 6957 1240 300E0000 		.4byte	.LASF239
 6958 1244 01       		.byte	0x1
 6959 1245 BA05     		.2byte	0x5ba
 6960 1247 00000000 		.4byte	.LFB520
 6961 124b DC000000 		.4byte	.LFE520-.LFB520
 6962 124f 01       		.uleb128 0x1
 6963 1250 9C       		.byte	0x9c
 6964 1251 14130000 		.4byte	0x1314
 6965 1255 1C       		.uleb128 0x1c
 6966 1256 800E0000 		.4byte	.LASF212
 6967 125a 01       		.byte	0x1
 6968 125b BA05     		.2byte	0x5ba
 6969 125d F8080000 		.4byte	0x8f8
 6970 1261 AF040000 		.4byte	.LLST34
 6971 1265 1C       		.uleb128 0x1c
 6972 1266 CA0C0000 		.4byte	.LASF240
 6973 126a 01       		.byte	0x1
 6974 126b BA05     		.2byte	0x5ba
 6975 126d F5070000 		.4byte	0x7f5
 6976 1271 CD040000 		.4byte	.LLST35
 6977 1275 1D       		.uleb128 0x1d
 6978 1276 BC150000 		.4byte	.LASF209
 6979 127a 01       		.byte	0x1
 6980 127b BC05     		.2byte	0x5bc
 6981 127d 640B0000 		.4byte	0xb64
 6982 1281 F7040000 		.4byte	.LLST36
 6983 1285 1D       		.uleb128 0x1d
 6984 1286 53170000 		.4byte	.LASF241
 6985 128a 01       		.byte	0x1
 6986 128b BD05     		.2byte	0x5bd
 6987 128d F5070000 		.4byte	0x7f5
 6988 1291 0A050000 		.4byte	.LLST37
 6989 1295 1D       		.uleb128 0x1d
 6990 1296 29140000 		.4byte	.LASF242
 6991 129a 01       		.byte	0x1
 6992 129b BD05     		.2byte	0x5bd
 6993 129d F5070000 		.4byte	0x7f5
 6994 12a1 1D050000 		.4byte	.LLST38
 6995 12a5 1D       		.uleb128 0x1d
 6996 12a6 4E050000 		.4byte	.LASF243
 6997 12aa 01       		.byte	0x1
 6998 12ab BE05     		.2byte	0x5be
 6999 12ad EA070000 		.4byte	0x7ea
 7000 12b1 30050000 		.4byte	.LLST39
 7001 12b5 2E       		.uleb128 0x2e
 7002 12b6 660A0000 		.4byte	0xa66
 7003 12ba 04000000 		.4byte	.LBB105
 7004 12be 12000000 		.4byte	.LBE105-.LBB105
 7005 12c2 01       		.byte	0x1
 7006 12c3 C005     		.2byte	0x5c0
 7007 12c5 D9120000 		.4byte	0x12d9
 7008 12c9 1F       		.uleb128 0x1f
 7009 12ca 04000000 		.4byte	.LBB106
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 226


 7010 12ce 12000000 		.4byte	.LBE106-.LBB106
 7011 12d2 20       		.uleb128 0x20
 7012 12d3 720A0000 		.4byte	0xa72
 7013 12d7 00       		.byte	0
 7014 12d8 00       		.byte	0
 7015 12d9 22       		.uleb128 0x22
 7016 12da 26000000 		.4byte	.LVL109
 7017 12de 2F290000 		.4byte	0x292f
 7018 12e2 28       		.uleb128 0x28
 7019 12e3 96000000 		.4byte	.LVL115
 7020 12e7 51290000 		.4byte	0x2951
 7021 12eb F6120000 		.4byte	0x12f6
 7022 12ef 24       		.uleb128 0x24
 7023 12f0 01       		.uleb128 0x1
 7024 12f1 50       		.byte	0x50
 7025 12f2 02       		.uleb128 0x2
 7026 12f3 75       		.byte	0x75
 7027 12f4 00       		.sleb128 0
 7028 12f5 00       		.byte	0
 7029 12f6 28       		.uleb128 0x28
 7030 12f7 B8000000 		.4byte	.LVL116
 7031 12fb 3A290000 		.4byte	0x293a
 7032 12ff 0A130000 		.4byte	0x130a
 7033 1303 24       		.uleb128 0x24
 7034 1304 01       		.uleb128 0x1
 7035 1305 51       		.byte	0x51
 7036 1306 02       		.uleb128 0x2
 7037 1307 75       		.byte	0x75
 7038 1308 00       		.sleb128 0
 7039 1309 00       		.byte	0
 7040 130a 22       		.uleb128 0x22
 7041 130b CE000000 		.4byte	.LVL118
 7042 130f 46290000 		.4byte	0x2946
 7043 1313 00       		.byte	0
 7044 1314 2D       		.uleb128 0x2d
 7045 1315 83160000 		.4byte	.LASF244
 7046 1319 01       		.byte	0x1
 7047 131a F106     		.2byte	0x6f1
 7048 131c 00000000 		.4byte	.LFB523
 7049 1320 88000000 		.4byte	.LFE523-.LFB523
 7050 1324 01       		.uleb128 0x1
 7051 1325 9C       		.byte	0x9c
 7052 1326 BD130000 		.4byte	0x13bd
 7053 132a 1C       		.uleb128 0x1c
 7054 132b 98040000 		.4byte	.LASF245
 7055 132f 01       		.byte	0x1
 7056 1330 F106     		.2byte	0x6f1
 7057 1332 F8080000 		.4byte	0x8f8
 7058 1336 4F050000 		.4byte	.LLST40
 7059 133a 1D       		.uleb128 0x1d
 7060 133b BC150000 		.4byte	.LASF209
 7061 133f 01       		.byte	0x1
 7062 1340 F306     		.2byte	0x6f3
 7063 1342 BD130000 		.4byte	0x13bd
 7064 1346 7B050000 		.4byte	.LLST41
 7065 134a 2E       		.uleb128 0x2e
 7066 134b 660A0000 		.4byte	0xa66
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 227


 7067 134f 02000000 		.4byte	.LBB107
 7068 1353 12000000 		.4byte	.LBE107-.LBB107
 7069 1357 01       		.byte	0x1
 7070 1358 F606     		.2byte	0x6f6
 7071 135a 6E130000 		.4byte	0x136e
 7072 135e 1F       		.uleb128 0x1f
 7073 135f 02000000 		.4byte	.LBB108
 7074 1363 12000000 		.4byte	.LBE108-.LBB108
 7075 1367 20       		.uleb128 0x20
 7076 1368 720A0000 		.4byte	0xa72
 7077 136c 00       		.byte	0
 7078 136d 00       		.byte	0
 7079 136e 22       		.uleb128 0x22
 7080 136f 28000000 		.4byte	.LVL122
 7081 1373 2F290000 		.4byte	0x292f
 7082 1377 28       		.uleb128 0x28
 7083 1378 2E000000 		.4byte	.LVL123
 7084 137c BD0A0000 		.4byte	0xabd
 7085 1380 8B130000 		.4byte	0x138b
 7086 1384 24       		.uleb128 0x24
 7087 1385 01       		.uleb128 0x1
 7088 1386 50       		.byte	0x50
 7089 1387 02       		.uleb128 0x2
 7090 1388 74       		.byte	0x74
 7091 1389 00       		.sleb128 0
 7092 138a 00       		.byte	0
 7093 138b 28       		.uleb128 0x28
 7094 138c 38000000 		.4byte	.LVL124
 7095 1390 51290000 		.4byte	0x2951
 7096 1394 9F130000 		.4byte	0x139f
 7097 1398 24       		.uleb128 0x24
 7098 1399 01       		.uleb128 0x1
 7099 139a 50       		.byte	0x50
 7100 139b 02       		.uleb128 0x2
 7101 139c 76       		.byte	0x76
 7102 139d 00       		.sleb128 0
 7103 139e 00       		.byte	0
 7104 139f 28       		.uleb128 0x28
 7105 13a0 5E000000 		.4byte	.LVL125
 7106 13a4 3A290000 		.4byte	0x293a
 7107 13a8 B3130000 		.4byte	0x13b3
 7108 13ac 24       		.uleb128 0x24
 7109 13ad 01       		.uleb128 0x1
 7110 13ae 51       		.byte	0x51
 7111 13af 02       		.uleb128 0x2
 7112 13b0 76       		.byte	0x76
 7113 13b1 00       		.sleb128 0
 7114 13b2 00       		.byte	0
 7115 13b3 22       		.uleb128 0x22
 7116 13b4 7E000000 		.4byte	.LVL126
 7117 13b8 46290000 		.4byte	0x2946
 7118 13bc 00       		.byte	0
 7119 13bd 07       		.uleb128 0x7
 7120 13be 640B0000 		.4byte	0xb64
 7121 13c2 2C       		.uleb128 0x2c
 7122 13c3 06120000 		.4byte	.LASF246
 7123 13c7 01       		.byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 228


 7124 13c8 2707     		.2byte	0x727
 7125 13ca EA070000 		.4byte	0x7ea
 7126 13ce 00000000 		.4byte	.LFB524
 7127 13d2 A4000000 		.4byte	.LFE524-.LFB524
 7128 13d6 01       		.uleb128 0x1
 7129 13d7 9C       		.byte	0x9c
 7130 13d8 E2140000 		.4byte	0x14e2
 7131 13dc 1C       		.uleb128 0x1c
 7132 13dd 98040000 		.4byte	.LASF245
 7133 13e1 01       		.byte	0x1
 7134 13e2 2707     		.2byte	0x727
 7135 13e4 F8080000 		.4byte	0x8f8
 7136 13e8 A7050000 		.4byte	.LLST42
 7137 13ec 1D       		.uleb128 0x1d
 7138 13ed 4E050000 		.4byte	.LASF243
 7139 13f1 01       		.byte	0x1
 7140 13f2 2907     		.2byte	0x729
 7141 13f4 EA070000 		.4byte	0x7ea
 7142 13f8 D3050000 		.4byte	.LLST43
 7143 13fc 1D       		.uleb128 0x1d
 7144 13fd BC150000 		.4byte	.LASF209
 7145 1401 01       		.byte	0x1
 7146 1402 2A07     		.2byte	0x72a
 7147 1404 BD130000 		.4byte	0x13bd
 7148 1408 14060000 		.4byte	.LLST44
 7149 140c 2F       		.uleb128 0x2f
 7150 140d EC160000 		.4byte	.LASF247
 7151 1411 01       		.byte	0x1
 7152 1412 2B07     		.2byte	0x72b
 7153 1414 F5070000 		.4byte	0x7f5
 7154 1418 2E       		.uleb128 0x2e
 7155 1419 660A0000 		.4byte	0xa66
 7156 141d 04000000 		.4byte	.LBB109
 7157 1421 14000000 		.4byte	.LBE109-.LBB109
 7158 1425 01       		.byte	0x1
 7159 1426 2D07     		.2byte	0x72d
 7160 1428 3C140000 		.4byte	0x143c
 7161 142c 1F       		.uleb128 0x1f
 7162 142d 04000000 		.4byte	.LBB110
 7163 1431 14000000 		.4byte	.LBE110-.LBB110
 7164 1435 20       		.uleb128 0x20
 7165 1436 720A0000 		.4byte	0xa72
 7166 143a 00       		.byte	0
 7167 143b 00       		.byte	0
 7168 143c 2E       		.uleb128 0x2e
 7169 143d 7E0A0000 		.4byte	0xa7e
 7170 1441 1C000000 		.4byte	.LBB111
 7171 1445 14000000 		.4byte	.LBE111-.LBB111
 7172 1449 01       		.byte	0x1
 7173 144a 4107     		.2byte	0x741
 7174 144c 65140000 		.4byte	0x1465
 7175 1450 1F       		.uleb128 0x1f
 7176 1451 1C000000 		.4byte	.LBB112
 7177 1455 14000000 		.4byte	.LBE112-.LBB112
 7178 1459 20       		.uleb128 0x20
 7179 145a 8E0A0000 		.4byte	0xa8e
 7180 145e 20       		.uleb128 0x20
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 229


 7181 145f 990A0000 		.4byte	0xa99
 7182 1463 00       		.byte	0
 7183 1464 00       		.byte	0
 7184 1465 2E       		.uleb128 0x2e
 7185 1466 A50A0000 		.4byte	0xaa5
 7186 146a 90000000 		.4byte	.LBB113
 7187 146e 04000000 		.4byte	.LBE113-.LBB113
 7188 1472 01       		.byte	0x1
 7189 1473 6507     		.2byte	0x765
 7190 1475 83140000 		.4byte	0x1483
 7191 1479 30       		.uleb128 0x30
 7192 147a B10A0000 		.4byte	0xab1
 7193 147e 40060000 		.4byte	.LLST45
 7194 1482 00       		.byte	0
 7195 1483 22       		.uleb128 0x22
 7196 1484 1C000000 		.4byte	.LVL131
 7197 1488 80290000 		.4byte	0x2980
 7198 148c 28       		.uleb128 0x28
 7199 148d 36000000 		.4byte	.LVL132
 7200 1491 BD0A0000 		.4byte	0xabd
 7201 1495 A0140000 		.4byte	0x14a0
 7202 1499 24       		.uleb128 0x24
 7203 149a 01       		.uleb128 0x1
 7204 149b 50       		.byte	0x50
 7205 149c 02       		.uleb128 0x2
 7206 149d 74       		.byte	0x74
 7207 149e 00       		.sleb128 0
 7208 149f 00       		.byte	0
 7209 14a0 28       		.uleb128 0x28
 7210 14a1 5C000000 		.4byte	.LVL134
 7211 14a5 51290000 		.4byte	0x2951
 7212 14a9 B4140000 		.4byte	0x14b4
 7213 14ad 24       		.uleb128 0x24
 7214 14ae 01       		.uleb128 0x1
 7215 14af 50       		.byte	0x50
 7216 14b0 02       		.uleb128 0x2
 7217 14b1 76       		.byte	0x76
 7218 14b2 00       		.sleb128 0
 7219 14b3 00       		.byte	0
 7220 14b4 28       		.uleb128 0x28
 7221 14b5 7E000000 		.4byte	.LVL135
 7222 14b9 3A290000 		.4byte	0x293a
 7223 14bd C8140000 		.4byte	0x14c8
 7224 14c1 24       		.uleb128 0x24
 7225 14c2 01       		.uleb128 0x1
 7226 14c3 51       		.byte	0x51
 7227 14c4 02       		.uleb128 0x2
 7228 14c5 76       		.byte	0x76
 7229 14c6 00       		.sleb128 0
 7230 14c7 00       		.byte	0
 7231 14c8 23       		.uleb128 0x23
 7232 14c9 8A000000 		.4byte	.LVL137
 7233 14cd 3A290000 		.4byte	0x293a
 7234 14d1 24       		.uleb128 0x24
 7235 14d2 01       		.uleb128 0x1
 7236 14d3 50       		.byte	0x50
 7237 14d4 05       		.uleb128 0x5
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 230


 7238 14d5 03       		.byte	0x3
 7239 14d6 14000000 		.4byte	.LANCHOR0+20
 7240 14da 24       		.uleb128 0x24
 7241 14db 01       		.uleb128 0x1
 7242 14dc 51       		.byte	0x51
 7243 14dd 02       		.uleb128 0x2
 7244 14de 74       		.byte	0x74
 7245 14df 18       		.sleb128 24
 7246 14e0 00       		.byte	0
 7247 14e1 00       		.byte	0
 7248 14e2 2D       		.uleb128 0x2d
 7249 14e3 E7120000 		.4byte	.LASF248
 7250 14e7 01       		.byte	0x1
 7251 14e8 6D07     		.2byte	0x76d
 7252 14ea 00000000 		.4byte	.LFB525
 7253 14ee 7C000000 		.4byte	.LFE525-.LFB525
 7254 14f2 01       		.uleb128 0x1
 7255 14f3 9C       		.byte	0x9c
 7256 14f4 9E150000 		.4byte	0x159e
 7257 14f8 1D       		.uleb128 0x1d
 7258 14f9 5A120000 		.4byte	.LASF208
 7259 14fd 01       		.byte	0x1
 7260 14fe 6F07     		.2byte	0x76f
 7261 1500 EA070000 		.4byte	0x7ea
 7262 1504 53060000 		.4byte	.LLST46
 7263 1508 2E       		.uleb128 0x2e
 7264 1509 660A0000 		.4byte	0xa66
 7265 150d 22000000 		.4byte	.LBB115
 7266 1511 10000000 		.4byte	.LBE115-.LBB115
 7267 1515 01       		.byte	0x1
 7268 1516 B507     		.2byte	0x7b5
 7269 1518 2C150000 		.4byte	0x152c
 7270 151c 1F       		.uleb128 0x1f
 7271 151d 22000000 		.4byte	.LBB116
 7272 1521 10000000 		.4byte	.LBE116-.LBB116
 7273 1525 20       		.uleb128 0x20
 7274 1526 720A0000 		.4byte	0xa72
 7275 152a 00       		.byte	0
 7276 152b 00       		.byte	0
 7277 152c 2E       		.uleb128 0x2e
 7278 152d 660A0000 		.4byte	0xa66
 7279 1531 52000000 		.4byte	.LBB117
 7280 1535 12000000 		.4byte	.LBE117-.LBB117
 7281 1539 01       		.byte	0x1
 7282 153a DC07     		.2byte	0x7dc
 7283 153c 50150000 		.4byte	0x1550
 7284 1540 1F       		.uleb128 0x1f
 7285 1541 52000000 		.4byte	.LBB118
 7286 1545 12000000 		.4byte	.LBE118-.LBB118
 7287 1549 20       		.uleb128 0x20
 7288 154a 720A0000 		.4byte	0xa72
 7289 154e 00       		.byte	0
 7290 154f 00       		.byte	0
 7291 1550 28       		.uleb128 0x28
 7292 1551 16000000 		.4byte	.LVL141
 7293 1555 270F0000 		.4byte	0xf27
 7294 1559 8B150000 		.4byte	0x158b
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 231


 7295 155d 24       		.uleb128 0x24
 7296 155e 01       		.uleb128 0x1
 7297 155f 50       		.byte	0x50
 7298 1560 05       		.uleb128 0x5
 7299 1561 03       		.byte	0x3
 7300 1562 00000000 		.4byte	prvIdleTask
 7301 1566 24       		.uleb128 0x24
 7302 1567 01       		.uleb128 0x1
 7303 1568 51       		.byte	0x51
 7304 1569 05       		.uleb128 0x5
 7305 156a 03       		.byte	0x3
 7306 156b 00000000 		.4byte	.LC0
 7307 156f 24       		.uleb128 0x24
 7308 1570 01       		.uleb128 0x1
 7309 1571 52       		.byte	0x52
 7310 1572 02       		.uleb128 0x2
 7311 1573 08       		.byte	0x8
 7312 1574 80       		.byte	0x80
 7313 1575 24       		.uleb128 0x24
 7314 1576 01       		.uleb128 0x1
 7315 1577 53       		.byte	0x53
 7316 1578 01       		.uleb128 0x1
 7317 1579 30       		.byte	0x30
 7318 157a 24       		.uleb128 0x24
 7319 157b 02       		.uleb128 0x2
 7320 157c 7D       		.byte	0x7d
 7321 157d 00       		.sleb128 0
 7322 157e 01       		.uleb128 0x1
 7323 157f 30       		.byte	0x30
 7324 1580 24       		.uleb128 0x24
 7325 1581 02       		.uleb128 0x2
 7326 1582 7D       		.byte	0x7d
 7327 1583 04       		.sleb128 4
 7328 1584 05       		.uleb128 0x5
 7329 1585 03       		.byte	0x3
 7330 1586 20020000 		.4byte	.LANCHOR0+544
 7331 158a 00       		.byte	0
 7332 158b 22       		.uleb128 0x22
 7333 158c 1E000000 		.4byte	.LVL142
 7334 1590 8B290000 		.4byte	0x298b
 7335 1594 22       		.uleb128 0x22
 7336 1595 4A000000 		.4byte	.LVL143
 7337 1599 97290000 		.4byte	0x2997
 7338 159d 00       		.byte	0
 7339 159e 2D       		.uleb128 0x2d
 7340 159f 9A080000 		.4byte	.LASF249
 7341 15a3 01       		.byte	0x1
 7342 15a4 E507     		.2byte	0x7e5
 7343 15a6 00000000 		.4byte	.LFB526
 7344 15aa 24000000 		.4byte	.LFE526-.LFB526
 7345 15ae 01       		.uleb128 0x1
 7346 15af 9C       		.byte	0x9c
 7347 15b0 E2150000 		.4byte	0x15e2
 7348 15b4 2E       		.uleb128 0x2e
 7349 15b5 660A0000 		.4byte	0xa66
 7350 15b9 02000000 		.4byte	.LBB119
 7351 15bd 10000000 		.4byte	.LBE119-.LBB119
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 232


 7352 15c1 01       		.byte	0x1
 7353 15c2 EA07     		.2byte	0x7ea
 7354 15c4 D8150000 		.4byte	0x15d8
 7355 15c8 1F       		.uleb128 0x1f
 7356 15c9 02000000 		.4byte	.LBB120
 7357 15cd 10000000 		.4byte	.LBE120-.LBB120
 7358 15d1 20       		.uleb128 0x20
 7359 15d2 720A0000 		.4byte	0xa72
 7360 15d6 00       		.byte	0
 7361 15d7 00       		.byte	0
 7362 15d8 22       		.uleb128 0x22
 7363 15d9 1E000000 		.4byte	.LVL147
 7364 15dd A2290000 		.4byte	0x29a2
 7365 15e1 00       		.byte	0
 7366 15e2 31       		.uleb128 0x31
 7367 15e3 9B070000 		.4byte	.LASF289
 7368 15e7 01       		.byte	0x1
 7369 15e8 F007     		.2byte	0x7f0
 7370 15ea 00000000 		.4byte	.LFB527
 7371 15ee 14000000 		.4byte	.LFE527-.LFB527
 7372 15f2 01       		.uleb128 0x1
 7373 15f3 9C       		.byte	0x9c
 7374 15f4 2C       		.uleb128 0x2c
 7375 15f5 550D0000 		.4byte	.LASF250
 7376 15f9 01       		.byte	0x1
 7377 15fa A708     		.2byte	0x8a7
 7378 15fc 00080000 		.4byte	0x800
 7379 1600 00000000 		.4byte	.LFB529
 7380 1604 0C000000 		.4byte	.LFE529-.LFB529
 7381 1608 01       		.uleb128 0x1
 7382 1609 9C       		.byte	0x9c
 7383 160a 1D160000 		.4byte	0x161d
 7384 160e 26       		.uleb128 0x26
 7385 160f E0120000 		.4byte	.LASF251
 7386 1613 01       		.byte	0x1
 7387 1614 A908     		.2byte	0x8a9
 7388 1616 00080000 		.4byte	0x800
 7389 161a 01       		.uleb128 0x1
 7390 161b 50       		.byte	0x50
 7391 161c 00       		.byte	0
 7392 161d 2C       		.uleb128 0x2c
 7393 161e BD060000 		.4byte	.LASF252
 7394 1622 01       		.byte	0x1
 7395 1623 B608     		.2byte	0x8b6
 7396 1625 00080000 		.4byte	0x800
 7397 1629 00000000 		.4byte	.LFB530
 7398 162d 14000000 		.4byte	.LFE530-.LFB530
 7399 1631 01       		.uleb128 0x1
 7400 1632 9C       		.byte	0x9c
 7401 1633 5C160000 		.4byte	0x165c
 7402 1637 26       		.uleb128 0x26
 7403 1638 5A120000 		.4byte	.LASF208
 7404 163c 01       		.byte	0x1
 7405 163d B808     		.2byte	0x8b8
 7406 163f 00080000 		.4byte	0x800
 7407 1643 01       		.uleb128 0x1
 7408 1644 50       		.byte	0x50
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 233


 7409 1645 32       		.uleb128 0x32
 7410 1646 EC160000 		.4byte	.LASF247
 7411 164a 01       		.byte	0x1
 7412 164b B908     		.2byte	0x8b9
 7413 164d F5070000 		.4byte	0x7f5
 7414 1651 00       		.byte	0
 7415 1652 22       		.uleb128 0x22
 7416 1653 06000000 		.4byte	.LVL149
 7417 1657 80290000 		.4byte	0x2980
 7418 165b 00       		.byte	0
 7419 165c 33       		.uleb128 0x33
 7420 165d 37010000 		.4byte	.LASF364
 7421 1661 01       		.byte	0x1
 7422 1662 D508     		.2byte	0x8d5
 7423 1664 F5070000 		.4byte	0x7f5
 7424 1668 00000000 		.4byte	.LFB531
 7425 166c 0C000000 		.4byte	.LFE531-.LFB531
 7426 1670 01       		.uleb128 0x1
 7427 1671 9C       		.byte	0x9c
 7428 1672 2C       		.uleb128 0x2c
 7429 1673 CA120000 		.4byte	.LASF253
 7430 1677 01       		.byte	0x1
 7431 1678 DD08     		.2byte	0x8dd
 7432 167a BD000000 		.4byte	0xbd
 7433 167e 00000000 		.4byte	.LFB532
 7434 1682 28000000 		.4byte	.LFE532-.LFB532
 7435 1686 01       		.uleb128 0x1
 7436 1687 9C       		.byte	0x9c
 7437 1688 CD160000 		.4byte	0x16cd
 7438 168c 1C       		.uleb128 0x1c
 7439 168d 540E0000 		.4byte	.LASF254
 7440 1691 01       		.byte	0x1
 7441 1692 DD08     		.2byte	0x8dd
 7442 1694 F8080000 		.4byte	0x8f8
 7443 1698 7C060000 		.4byte	.LLST47
 7444 169c 1D       		.uleb128 0x1d
 7445 169d BC150000 		.4byte	.LASF209
 7446 16a1 01       		.byte	0x1
 7447 16a2 DF08     		.2byte	0x8df
 7448 16a4 640B0000 		.4byte	0xb64
 7449 16a8 8F060000 		.4byte	.LLST48
 7450 16ac 1E       		.uleb128 0x1e
 7451 16ad 660A0000 		.4byte	0xa66
 7452 16b1 0C000000 		.4byte	.LBB121
 7453 16b5 12000000 		.4byte	.LBE121-.LBB121
 7454 16b9 01       		.byte	0x1
 7455 16ba E408     		.2byte	0x8e4
 7456 16bc 1F       		.uleb128 0x1f
 7457 16bd 0C000000 		.4byte	.LBB122
 7458 16c1 12000000 		.4byte	.LBE122-.LBB122
 7459 16c5 20       		.uleb128 0x20
 7460 16c6 720A0000 		.4byte	0xa72
 7461 16ca 00       		.byte	0
 7462 16cb 00       		.byte	0
 7463 16cc 00       		.byte	0
 7464 16cd 2C       		.uleb128 0x2c
 7465 16ce DD020000 		.4byte	.LASF255
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 234


 7466 16d2 01       		.byte	0x1
 7467 16d3 1D0A     		.2byte	0xa1d
 7468 16d5 EA070000 		.4byte	0x7ea
 7469 16d9 00000000 		.4byte	.LFB533
 7470 16dd FC000000 		.4byte	.LFE533-.LFB533
 7471 16e1 01       		.uleb128 0x1
 7472 16e2 9C       		.byte	0x9c
 7473 16e3 B1170000 		.4byte	0x17b1
 7474 16e7 1D       		.uleb128 0x1d
 7475 16e8 BC150000 		.4byte	.LASF209
 7476 16ec 01       		.byte	0x1
 7477 16ed 1F0A     		.2byte	0xa1f
 7478 16ef 640B0000 		.4byte	0xb64
 7479 16f3 AD060000 		.4byte	.LLST49
 7480 16f7 1D       		.uleb128 0x1d
 7481 16f8 3C100000 		.4byte	.LASF163
 7482 16fc 01       		.byte	0x1
 7483 16fd 200A     		.2byte	0xa20
 7484 16ff 00080000 		.4byte	0x800
 7485 1703 CB060000 		.4byte	.LLST50
 7486 1707 1D       		.uleb128 0x1d
 7487 1708 FF100000 		.4byte	.LASF256
 7488 170c 01       		.byte	0x1
 7489 170d 210A     		.2byte	0xa21
 7490 170f EA070000 		.4byte	0x7ea
 7491 1713 DE060000 		.4byte	.LLST51
 7492 1717 34       		.uleb128 0x34
 7493 1718 00000000 		.4byte	.Ldebug_ranges0+0
 7494 171c 1D       		.uleb128 0x1d
 7495 171d BE080000 		.4byte	.LASF228
 7496 1721 01       		.byte	0x1
 7497 1722 2B0A     		.2byte	0xa2b
 7498 1724 D30E0000 		.4byte	0xed3
 7499 1728 36070000 		.4byte	.LLST52
 7500 172c 2A       		.uleb128 0x2a
 7501 172d 1C000000 		.4byte	.LBB124
 7502 1731 34000000 		.4byte	.LBE124-.LBB124
 7503 1735 77170000 		.4byte	0x1777
 7504 1739 1D       		.uleb128 0x1d
 7505 173a 77070000 		.4byte	.LASF257
 7506 173e 01       		.byte	0x1
 7507 173f 330A     		.2byte	0xa33
 7508 1741 B1170000 		.4byte	0x17b1
 7509 1745 49070000 		.4byte	.LLST53
 7510 1749 2E       		.uleb128 0x2e
 7511 174a 660A0000 		.4byte	0xa66
 7512 174e 22000000 		.4byte	.LBB125
 7513 1752 12000000 		.4byte	.LBE125-.LBB125
 7514 1756 01       		.byte	0x1
 7515 1757 330A     		.2byte	0xa33
 7516 1759 6D170000 		.4byte	0x176d
 7517 175d 1F       		.uleb128 0x1f
 7518 175e 22000000 		.4byte	.LBB126
 7519 1762 12000000 		.4byte	.LBE126-.LBB126
 7520 1766 20       		.uleb128 0x20
 7521 1767 720A0000 		.4byte	0xa72
 7522 176b 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 235


 7523 176c 00       		.byte	0
 7524 176d 22       		.uleb128 0x22
 7525 176e 50000000 		.4byte	.LVL161
 7526 1772 3D0B0000 		.4byte	0xb3d
 7527 1776 00       		.byte	0
 7528 1777 28       		.uleb128 0x28
 7529 1778 9A000000 		.4byte	.LVL168
 7530 177c 51290000 		.4byte	0x2951
 7531 1780 8B170000 		.4byte	0x178b
 7532 1784 24       		.uleb128 0x24
 7533 1785 01       		.uleb128 0x1
 7534 1786 50       		.byte	0x50
 7535 1787 02       		.uleb128 0x2
 7536 1788 78       		.byte	0x78
 7537 1789 00       		.sleb128 0
 7538 178a 00       		.byte	0
 7539 178b 28       		.uleb128 0x28
 7540 178c A6000000 		.4byte	.LVL169
 7541 1790 51290000 		.4byte	0x2951
 7542 1794 9F170000 		.4byte	0x179f
 7543 1798 24       		.uleb128 0x24
 7544 1799 01       		.uleb128 0x1
 7545 179a 50       		.byte	0x50
 7546 179b 02       		.uleb128 0x2
 7547 179c 75       		.byte	0x75
 7548 179d 18       		.sleb128 24
 7549 179e 00       		.byte	0
 7550 179f 23       		.uleb128 0x23
 7551 17a0 CC000000 		.4byte	.LVL170
 7552 17a4 3A290000 		.4byte	0x293a
 7553 17a8 24       		.uleb128 0x24
 7554 17a9 01       		.uleb128 0x1
 7555 17aa 51       		.byte	0x51
 7556 17ab 02       		.uleb128 0x2
 7557 17ac 78       		.byte	0x78
 7558 17ad 00       		.sleb128 0
 7559 17ae 00       		.byte	0
 7560 17af 00       		.byte	0
 7561 17b0 00       		.byte	0
 7562 17b1 06       		.uleb128 0x6
 7563 17b2 04       		.byte	0x4
 7564 17b3 ED080000 		.4byte	0x8ed
 7565 17b7 2C       		.uleb128 0x2c
 7566 17b8 76100000 		.4byte	.LASF258
 7567 17bc 01       		.byte	0x1
 7568 17bd 3908     		.2byte	0x839
 7569 17bf EA070000 		.4byte	0x7ea
 7570 17c3 00000000 		.4byte	.LFB528
 7571 17c7 F0000000 		.4byte	.LFE528-.LFB528
 7572 17cb 01       		.uleb128 0x1
 7573 17cc 9C       		.byte	0x9c
 7574 17cd 94180000 		.4byte	0x1894
 7575 17d1 1D       		.uleb128 0x1d
 7576 17d2 BC150000 		.4byte	.LASF209
 7577 17d6 01       		.byte	0x1
 7578 17d7 3B08     		.2byte	0x83b
 7579 17d9 640B0000 		.4byte	0xb64
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 236


 7580 17dd 6B070000 		.4byte	.LLST54
 7581 17e1 1D       		.uleb128 0x1d
 7582 17e2 B3140000 		.4byte	.LASF259
 7583 17e6 01       		.byte	0x1
 7584 17e7 3C08     		.2byte	0x83c
 7585 17e9 EA070000 		.4byte	0x7ea
 7586 17ed AD070000 		.4byte	.LLST55
 7587 17f1 2E       		.uleb128 0x2e
 7588 17f2 660A0000 		.4byte	0xa66
 7589 17f6 08000000 		.4byte	.LBB128
 7590 17fa 12000000 		.4byte	.LBE128-.LBB128
 7591 17fe 01       		.byte	0x1
 7592 17ff 4008     		.2byte	0x840
 7593 1801 15180000 		.4byte	0x1815
 7594 1805 1F       		.uleb128 0x1f
 7595 1806 08000000 		.4byte	.LBB129
 7596 180a 12000000 		.4byte	.LBE129-.LBB129
 7597 180e 20       		.uleb128 0x20
 7598 180f 720A0000 		.4byte	0xa72
 7599 1813 00       		.byte	0
 7600 1814 00       		.byte	0
 7601 1815 2A       		.uleb128 0x2a
 7602 1816 9C000000 		.4byte	.LBB130
 7603 181a 22000000 		.4byte	.LBE130-.LBB130
 7604 181e 3C180000 		.4byte	0x183c
 7605 1822 1D       		.uleb128 0x1d
 7606 1823 DD000000 		.4byte	.LASF260
 7607 1827 01       		.byte	0x1
 7608 1828 7408     		.2byte	0x874
 7609 182a F5070000 		.4byte	0x7f5
 7610 182e EF070000 		.4byte	.LLST56
 7611 1832 22       		.uleb128 0x22
 7612 1833 A8000000 		.4byte	.LVL187
 7613 1837 CD160000 		.4byte	0x16cd
 7614 183b 00       		.byte	0
 7615 183c 22       		.uleb128 0x22
 7616 183d 20000000 		.4byte	.LVL177
 7617 1841 2F290000 		.4byte	0x292f
 7618 1845 28       		.uleb128 0x28
 7619 1846 4E000000 		.4byte	.LVL180
 7620 184a 51290000 		.4byte	0x2951
 7621 184e 59180000 		.4byte	0x1859
 7622 1852 24       		.uleb128 0x24
 7623 1853 01       		.uleb128 0x1
 7624 1854 50       		.byte	0x50
 7625 1855 02       		.uleb128 0x2
 7626 1856 74       		.byte	0x74
 7627 1857 18       		.sleb128 24
 7628 1858 00       		.byte	0
 7629 1859 28       		.uleb128 0x28
 7630 185a 56000000 		.4byte	.LVL181
 7631 185e 51290000 		.4byte	0x2951
 7632 1862 6D180000 		.4byte	0x186d
 7633 1866 24       		.uleb128 0x24
 7634 1867 01       		.uleb128 0x1
 7635 1868 50       		.byte	0x50
 7636 1869 02       		.uleb128 0x2
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 237


 7637 186a 76       		.byte	0x76
 7638 186b 00       		.sleb128 0
 7639 186c 00       		.byte	0
 7640 186d 28       		.uleb128 0x28
 7641 186e 78000000 		.4byte	.LVL182
 7642 1872 3A290000 		.4byte	0x293a
 7643 1876 81180000 		.4byte	0x1881
 7644 187a 24       		.uleb128 0x24
 7645 187b 01       		.uleb128 0x1
 7646 187c 51       		.byte	0x51
 7647 187d 02       		.uleb128 0x2
 7648 187e 76       		.byte	0x76
 7649 187f 00       		.sleb128 0
 7650 1880 00       		.byte	0
 7651 1881 22       		.uleb128 0x22
 7652 1882 9C000000 		.4byte	.LVL185
 7653 1886 3D0B0000 		.4byte	0xb3d
 7654 188a 22       		.uleb128 0x22
 7655 188b E4000000 		.4byte	.LVL195
 7656 188f 46290000 		.4byte	0x2946
 7657 1893 00       		.byte	0
 7658 1894 2D       		.uleb128 0x2d
 7659 1895 FA130000 		.4byte	.LASF261
 7660 1899 01       		.byte	0x1
 7661 189a B404     		.2byte	0x4b4
 7662 189c 00000000 		.4byte	.LFB516
 7663 18a0 AC000000 		.4byte	.LFE516-.LFB516
 7664 18a4 01       		.uleb128 0x1
 7665 18a5 9C       		.byte	0x9c
 7666 18a6 A0190000 		.4byte	0x19a0
 7667 18aa 1C       		.uleb128 0x1c
 7668 18ab 80110000 		.4byte	.LASF262
 7669 18af 01       		.byte	0x1
 7670 18b0 B404     		.2byte	0x4b4
 7671 18b2 A6190000 		.4byte	0x19a6
 7672 18b6 25080000 		.4byte	.LLST57
 7673 18ba 1C       		.uleb128 0x1c
 7674 18bb 66150000 		.4byte	.LASF263
 7675 18bf 01       		.byte	0x1
 7676 18c0 B404     		.2byte	0x4b4
 7677 18c2 D30E0000 		.4byte	0xed3
 7678 18c6 51080000 		.4byte	.LLST58
 7679 18ca 1D       		.uleb128 0x1d
 7680 18cb 9A150000 		.4byte	.LASF227
 7681 18cf 01       		.byte	0x1
 7682 18d0 B604     		.2byte	0x4b6
 7683 18d2 00080000 		.4byte	0x800
 7684 18d6 7D080000 		.4byte	.LLST59
 7685 18da 26       		.uleb128 0x26
 7686 18db B3140000 		.4byte	.LASF259
 7687 18df 01       		.byte	0x1
 7688 18e0 B704     		.2byte	0x4b7
 7689 18e2 EA070000 		.4byte	0x7ea
 7690 18e6 01       		.uleb128 0x1
 7691 18e7 50       		.byte	0x50
 7692 18e8 1D       		.uleb128 0x1d
 7693 18e9 830A0000 		.4byte	.LASF264
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 238


 7694 18ed 01       		.byte	0x1
 7695 18ee B704     		.2byte	0x4b7
 7696 18f0 EA070000 		.4byte	0x7ea
 7697 18f4 90080000 		.4byte	.LLST60
 7698 18f8 2E       		.uleb128 0x2e
 7699 18f9 660A0000 		.4byte	0xa66
 7700 18fd 04000000 		.4byte	.LBB131
 7701 1901 14000000 		.4byte	.LBE131-.LBB131
 7702 1905 01       		.byte	0x1
 7703 1906 B904     		.2byte	0x4b9
 7704 1908 1C190000 		.4byte	0x191c
 7705 190c 1F       		.uleb128 0x1f
 7706 190d 04000000 		.4byte	.LBB132
 7707 1911 14000000 		.4byte	.LBE132-.LBB132
 7708 1915 20       		.uleb128 0x20
 7709 1916 720A0000 		.4byte	0xa72
 7710 191a 00       		.byte	0
 7711 191b 00       		.byte	0
 7712 191c 2E       		.uleb128 0x2e
 7713 191d 660A0000 		.4byte	0xa66
 7714 1921 1A000000 		.4byte	.LBB133
 7715 1925 12000000 		.4byte	.LBE133-.LBB133
 7716 1929 01       		.byte	0x1
 7717 192a BA04     		.2byte	0x4ba
 7718 192c 40190000 		.4byte	0x1940
 7719 1930 1F       		.uleb128 0x1f
 7720 1931 1A000000 		.4byte	.LBB134
 7721 1935 12000000 		.4byte	.LBE134-.LBB134
 7722 1939 20       		.uleb128 0x20
 7723 193a 720A0000 		.4byte	0xa72
 7724 193e 00       		.byte	0
 7725 193f 00       		.byte	0
 7726 1940 2E       		.uleb128 0x2e
 7727 1941 660A0000 		.4byte	0xa66
 7728 1945 34000000 		.4byte	.LBB135
 7729 1949 14000000 		.4byte	.LBE135-.LBB135
 7730 194d 01       		.byte	0x1
 7731 194e BB04     		.2byte	0x4bb
 7732 1950 64190000 		.4byte	0x1964
 7733 1954 1F       		.uleb128 0x1f
 7734 1955 34000000 		.4byte	.LBB136
 7735 1959 14000000 		.4byte	.LBE136-.LBB136
 7736 195d 20       		.uleb128 0x20
 7737 195e 720A0000 		.4byte	0xa72
 7738 1962 00       		.byte	0
 7739 1963 00       		.byte	0
 7740 1964 35       		.uleb128 0x35
 7741 1965 18000000 		.4byte	.Ldebug_ranges0+0x18
 7742 1969 8D190000 		.4byte	0x198d
 7743 196d 1D       		.uleb128 0x1d
 7744 196e BE080000 		.4byte	.LASF228
 7745 1972 01       		.byte	0x1
 7746 1973 C104     		.2byte	0x4c1
 7747 1975 D30E0000 		.4byte	0xed3
 7748 1979 AF080000 		.4byte	.LLST61
 7749 197d 23       		.uleb128 0x23
 7750 197e 8C000000 		.4byte	.LVL207
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 239


 7751 1982 450E0000 		.4byte	0xe45
 7752 1986 24       		.uleb128 0x24
 7753 1987 01       		.uleb128 0x1
 7754 1988 51       		.byte	0x51
 7755 1989 01       		.uleb128 0x1
 7756 198a 30       		.byte	0x30
 7757 198b 00       		.byte	0
 7758 198c 00       		.byte	0
 7759 198d 22       		.uleb128 0x22
 7760 198e 4C000000 		.4byte	.LVL202
 7761 1992 E2150000 		.4byte	0x15e2
 7762 1996 22       		.uleb128 0x22
 7763 1997 90000000 		.4byte	.LVL208
 7764 199b B7170000 		.4byte	0x17b7
 7765 199f 00       		.byte	0
 7766 19a0 06       		.uleb128 0x6
 7767 19a1 04       		.byte	0x4
 7768 19a2 00080000 		.4byte	0x800
 7769 19a6 07       		.uleb128 0x7
 7770 19a7 A0190000 		.4byte	0x19a0
 7771 19ab 2D       		.uleb128 0x2d
 7772 19ac 26080000 		.4byte	.LASF265
 7773 19b0 01       		.byte	0x1
 7774 19b1 0805     		.2byte	0x508
 7775 19b3 00000000 		.4byte	.LFB517
 7776 19b7 50000000 		.4byte	.LFE517-.LFB517
 7777 19bb 01       		.uleb128 0x1
 7778 19bc 9C       		.byte	0x9c
 7779 19bd 311A0000 		.4byte	0x1a31
 7780 19c1 1C       		.uleb128 0x1c
 7781 19c2 5A130000 		.4byte	.LASF266
 7782 19c6 01       		.byte	0x1
 7783 19c7 0805     		.2byte	0x508
 7784 19c9 D30E0000 		.4byte	0xed3
 7785 19cd C2080000 		.4byte	.LLST62
 7786 19d1 1D       		.uleb128 0x1d
 7787 19d2 B3140000 		.4byte	.LASF259
 7788 19d6 01       		.byte	0x1
 7789 19d7 0A05     		.2byte	0x50a
 7790 19d9 EA070000 		.4byte	0x7ea
 7791 19dd F9080000 		.4byte	.LLST63
 7792 19e1 2E       		.uleb128 0x2e
 7793 19e2 660A0000 		.4byte	0xa66
 7794 19e6 0E000000 		.4byte	.LBB140
 7795 19ea 12000000 		.4byte	.LBE140-.LBB140
 7796 19ee 01       		.byte	0x1
 7797 19ef 0F05     		.2byte	0x50f
 7798 19f1 051A0000 		.4byte	0x1a05
 7799 19f5 1F       		.uleb128 0x1f
 7800 19f6 0E000000 		.4byte	.LBB141
 7801 19fa 12000000 		.4byte	.LBE141-.LBB141
 7802 19fe 20       		.uleb128 0x20
 7803 19ff 720A0000 		.4byte	0xa72
 7804 1a03 00       		.byte	0
 7805 1a04 00       		.byte	0
 7806 1a05 22       		.uleb128 0x22
 7807 1a06 24000000 		.4byte	.LVL213
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 240


 7808 1a0a E2150000 		.4byte	0x15e2
 7809 1a0e 28       		.uleb128 0x28
 7810 1a0f 2C000000 		.4byte	.LVL214
 7811 1a13 450E0000 		.4byte	0xe45
 7812 1a17 271A0000 		.4byte	0x1a27
 7813 1a1b 24       		.uleb128 0x24
 7814 1a1c 01       		.uleb128 0x1
 7815 1a1d 50       		.byte	0x50
 7816 1a1e 02       		.uleb128 0x2
 7817 1a1f 74       		.byte	0x74
 7818 1a20 00       		.sleb128 0
 7819 1a21 24       		.uleb128 0x24
 7820 1a22 01       		.uleb128 0x1
 7821 1a23 51       		.byte	0x51
 7822 1a24 01       		.uleb128 0x1
 7823 1a25 30       		.byte	0x30
 7824 1a26 00       		.byte	0
 7825 1a27 22       		.uleb128 0x22
 7826 1a28 30000000 		.4byte	.LVL215
 7827 1a2c B7170000 		.4byte	0x17b7
 7828 1a30 00       		.byte	0
 7829 1a31 2D       		.uleb128 0x2d
 7830 1a32 200F0000 		.4byte	.LASF267
 7831 1a36 01       		.byte	0x1
 7832 1a37 230B     		.2byte	0xb23
 7833 1a39 00000000 		.4byte	.LFB534
 7834 1a3d C8000000 		.4byte	.LFE534-.LFB534
 7835 1a41 01       		.uleb128 0x1
 7836 1a42 9C       		.byte	0x9c
 7837 1a43 E01A0000 		.4byte	0x1ae0
 7838 1a47 2A       		.uleb128 0x2a
 7839 1a48 1C000000 		.4byte	.LBB142
 7840 1a4c 36000000 		.4byte	.LBE142-.LBB142
 7841 1a50 7F1A0000 		.4byte	0x1a7f
 7842 1a54 1D       		.uleb128 0x1d
 7843 1a55 20130000 		.4byte	.LASF268
 7844 1a59 01       		.byte	0x1
 7845 1a5a 4D0B     		.2byte	0xb4d
 7846 1a5c E61A0000 		.4byte	0x1ae6
 7847 1a60 2F090000 		.4byte	.LLST64
 7848 1a64 36       		.uleb128 0x36
 7849 1a65 870C0000 		.4byte	.LASF269
 7850 1a69 01       		.byte	0x1
 7851 1a6a 4E0B     		.2byte	0xb4e
 7852 1a6c BA0C0000 		.4byte	0xcba
 7853 1a70 A5CB96AD 		.sleb128 -1515870811
 7853      7A
 7854 1a75 22       		.uleb128 0x22
 7855 1a76 52000000 		.4byte	.LVL220
 7856 1a7a AD290000 		.4byte	0x29ad
 7857 1a7e 00       		.byte	0
 7858 1a7f 1F       		.uleb128 0x1f
 7859 1a80 52000000 		.4byte	.LBB143
 7860 1a84 76000000 		.4byte	.LBE143-.LBB143
 7861 1a88 1D       		.uleb128 0x1d
 7862 1a89 EC130000 		.4byte	.LASF270
 7863 1a8d 01       		.byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 241


 7864 1a8e 5B0B     		.2byte	0xb5b
 7865 1a90 F5070000 		.4byte	0x7f5
 7866 1a94 42090000 		.4byte	.LLST65
 7867 1a98 2E       		.uleb128 0x2e
 7868 1a99 660A0000 		.4byte	0xa66
 7869 1a9d 5C000000 		.4byte	.LBB144
 7870 1aa1 12000000 		.4byte	.LBE144-.LBB144
 7871 1aa5 01       		.byte	0x1
 7872 1aa6 5B0B     		.2byte	0xb5b
 7873 1aa8 BC1A0000 		.4byte	0x1abc
 7874 1aac 1F       		.uleb128 0x1f
 7875 1aad 5C000000 		.4byte	.LBB145
 7876 1ab1 12000000 		.4byte	.LBE145-.LBB145
 7877 1ab5 20       		.uleb128 0x20
 7878 1ab6 720A0000 		.4byte	0xa72
 7879 1aba 00       		.byte	0
 7880 1abb 00       		.byte	0
 7881 1abc 1F       		.uleb128 0x1f
 7882 1abd 80000000 		.4byte	.LBB146
 7883 1ac1 3E000000 		.4byte	.LBE146-.LBB146
 7884 1ac5 26       		.uleb128 0x26
 7885 1ac6 AB000000 		.4byte	.LASF271
 7886 1aca 01       		.byte	0x1
 7887 1acb 5B0B     		.2byte	0xb5b
 7888 1acd EB1A0000 		.4byte	0x1aeb
 7889 1ad1 0B       		.uleb128 0xb
 7890 1ad2 73       		.byte	0x73
 7891 1ad3 00       		.sleb128 0
 7892 1ad4 44       		.byte	0x44
 7893 1ad5 1E       		.byte	0x1e
 7894 1ad6 03       		.byte	0x3
 7895 1ad7 30000000 		.4byte	pxReadyTasksLists
 7896 1adb 22       		.byte	0x22
 7897 1adc 9F       		.byte	0x9f
 7898 1add 00       		.byte	0
 7899 1ade 00       		.byte	0
 7900 1adf 00       		.byte	0
 7901 1ae0 06       		.uleb128 0x6
 7902 1ae1 04       		.byte	0x4
 7903 1ae2 BA0C0000 		.4byte	0xcba
 7904 1ae6 07       		.uleb128 0x7
 7905 1ae7 E01A0000 		.4byte	0x1ae0
 7906 1aeb 07       		.uleb128 0x7
 7907 1aec B1170000 		.4byte	0x17b1
 7908 1af0 2D       		.uleb128 0x2d
 7909 1af1 67140000 		.4byte	.LASF272
 7910 1af5 01       		.byte	0x1
 7911 1af6 5E06     		.2byte	0x65e
 7912 1af8 00000000 		.4byte	.LFB521
 7913 1afc B8000000 		.4byte	.LFE521-.LFB521
 7914 1b00 01       		.uleb128 0x1
 7915 1b01 9C       		.byte	0x9c
 7916 1b02 C61B0000 		.4byte	0x1bc6
 7917 1b06 1C       		.uleb128 0x1c
 7918 1b07 2D110000 		.4byte	.LASF273
 7919 1b0b 01       		.byte	0x1
 7920 1b0c 5E06     		.2byte	0x65e
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 242


 7921 1b0e F8080000 		.4byte	0x8f8
 7922 1b12 60090000 		.4byte	.LLST66
 7923 1b16 1D       		.uleb128 0x1d
 7924 1b17 BC150000 		.4byte	.LASF209
 7925 1b1b 01       		.byte	0x1
 7926 1b1c 6006     		.2byte	0x660
 7927 1b1e 640B0000 		.4byte	0xb64
 7928 1b22 7E090000 		.4byte	.LLST67
 7929 1b26 2E       		.uleb128 0x2e
 7930 1b27 660A0000 		.4byte	0xa66
 7931 1b2b 6E000000 		.4byte	.LBB147
 7932 1b2f 12000000 		.4byte	.LBE147-.LBB147
 7933 1b33 01       		.byte	0x1
 7934 1b34 A206     		.2byte	0x6a2
 7935 1b36 4A1B0000 		.4byte	0x1b4a
 7936 1b3a 1F       		.uleb128 0x1f
 7937 1b3b 6E000000 		.4byte	.LBB148
 7938 1b3f 12000000 		.4byte	.LBE148-.LBB148
 7939 1b43 20       		.uleb128 0x20
 7940 1b44 720A0000 		.4byte	0xa72
 7941 1b48 00       		.byte	0
 7942 1b49 00       		.byte	0
 7943 1b4a 22       		.uleb128 0x22
 7944 1b4b 08000000 		.4byte	.LVL227
 7945 1b4f 2F290000 		.4byte	0x292f
 7946 1b53 28       		.uleb128 0x28
 7947 1b54 18000000 		.4byte	.LVL229
 7948 1b58 51290000 		.4byte	0x2951
 7949 1b5c 671B0000 		.4byte	0x1b67
 7950 1b60 24       		.uleb128 0x24
 7951 1b61 01       		.uleb128 0x1
 7952 1b62 50       		.byte	0x50
 7953 1b63 02       		.uleb128 0x2
 7954 1b64 75       		.byte	0x75
 7955 1b65 00       		.sleb128 0
 7956 1b66 00       		.byte	0
 7957 1b67 28       		.uleb128 0x28
 7958 1b68 24000000 		.4byte	.LVL230
 7959 1b6c 51290000 		.4byte	0x2951
 7960 1b70 7B1B0000 		.4byte	0x1b7b
 7961 1b74 24       		.uleb128 0x24
 7962 1b75 01       		.uleb128 0x1
 7963 1b76 50       		.byte	0x50
 7964 1b77 02       		.uleb128 0x2
 7965 1b78 74       		.byte	0x74
 7966 1b79 18       		.sleb128 24
 7967 1b7a 00       		.byte	0
 7968 1b7b 28       		.uleb128 0x28
 7969 1b7c 2C000000 		.4byte	.LVL231
 7970 1b80 3A290000 		.4byte	0x293a
 7971 1b84 981B0000 		.4byte	0x1b98
 7972 1b88 24       		.uleb128 0x24
 7973 1b89 01       		.uleb128 0x1
 7974 1b8a 50       		.byte	0x50
 7975 1b8b 05       		.uleb128 0x5
 7976 1b8c 03       		.byte	0x3
 7977 1b8d 00000000 		.4byte	.LANCHOR0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 243


 7978 1b91 24       		.uleb128 0x24
 7979 1b92 01       		.uleb128 0x1
 7980 1b93 51       		.byte	0x51
 7981 1b94 02       		.uleb128 0x2
 7982 1b95 75       		.byte	0x75
 7983 1b96 00       		.sleb128 0
 7984 1b97 00       		.byte	0
 7985 1b98 22       		.uleb128 0x22
 7986 1b99 40000000 		.4byte	.LVL232
 7987 1b9d 46290000 		.4byte	0x2946
 7988 1ba1 22       		.uleb128 0x22
 7989 1ba2 4C000000 		.4byte	.LVL233
 7990 1ba6 2F290000 		.4byte	0x292f
 7991 1baa 22       		.uleb128 0x22
 7992 1bab 50000000 		.4byte	.LVL234
 7993 1baf 3D0B0000 		.4byte	0xb3d
 7994 1bb3 22       		.uleb128 0x22
 7995 1bb4 54000000 		.4byte	.LVL235
 7996 1bb8 46290000 		.4byte	0x2946
 7997 1bbc 22       		.uleb128 0x22
 7998 1bbd AC000000 		.4byte	.LVL239
 7999 1bc1 311A0000 		.4byte	0x1a31
 8000 1bc5 00       		.byte	0
 8001 1bc6 2D       		.uleb128 0x2d
 8002 1bc7 34090000 		.4byte	.LASF274
 8003 1bcb 01       		.byte	0x1
 8004 1bcc 690B     		.2byte	0xb69
 8005 1bce 00000000 		.4byte	.LFB535
 8006 1bd2 34000000 		.4byte	.LFE535-.LFB535
 8007 1bd6 01       		.uleb128 0x1
 8008 1bd7 9C       		.byte	0x9c
 8009 1bd8 3F1C0000 		.4byte	0x1c3f
 8010 1bdc 1C       		.uleb128 0x1c
 8011 1bdd A6010000 		.4byte	.LASF275
 8012 1be1 01       		.byte	0x1
 8013 1be2 690B     		.2byte	0xb69
 8014 1be4 EB1A0000 		.4byte	0x1aeb
 8015 1be8 91090000 		.4byte	.LLST68
 8016 1bec 1C       		.uleb128 0x1c
 8017 1bed 45140000 		.4byte	.LASF225
 8018 1bf1 01       		.byte	0x1
 8019 1bf2 690B     		.2byte	0xb69
 8020 1bf4 D30E0000 		.4byte	0xed3
 8021 1bf8 B2090000 		.4byte	.LLST69
 8022 1bfc 2E       		.uleb128 0x2e
 8023 1bfd 660A0000 		.4byte	0xa66
 8024 1c01 02000000 		.4byte	.LBB149
 8025 1c05 12000000 		.4byte	.LBE149-.LBB149
 8026 1c09 01       		.byte	0x1
 8027 1c0a 6B0B     		.2byte	0xb6b
 8028 1c0c 201C0000 		.4byte	0x1c20
 8029 1c10 1F       		.uleb128 0x1f
 8030 1c11 02000000 		.4byte	.LBB150
 8031 1c15 12000000 		.4byte	.LBE150-.LBB150
 8032 1c19 20       		.uleb128 0x20
 8033 1c1a 720A0000 		.4byte	0xa72
 8034 1c1e 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 244


 8035 1c1f 00       		.byte	0
 8036 1c20 22       		.uleb128 0x22
 8037 1c21 24000000 		.4byte	.LVL244
 8038 1c25 5D290000 		.4byte	0x295d
 8039 1c29 23       		.uleb128 0x23
 8040 1c2a 2C000000 		.4byte	.LVL245
 8041 1c2e 450E0000 		.4byte	0xe45
 8042 1c32 24       		.uleb128 0x24
 8043 1c33 01       		.uleb128 0x1
 8044 1c34 50       		.byte	0x50
 8045 1c35 02       		.uleb128 0x2
 8046 1c36 74       		.byte	0x74
 8047 1c37 00       		.sleb128 0
 8048 1c38 24       		.uleb128 0x24
 8049 1c39 01       		.uleb128 0x1
 8050 1c3a 51       		.byte	0x51
 8051 1c3b 01       		.uleb128 0x1
 8052 1c3c 31       		.byte	0x31
 8053 1c3d 00       		.byte	0
 8054 1c3e 00       		.byte	0
 8055 1c3f 2D       		.uleb128 0x2d
 8056 1c40 73130000 		.4byte	.LASF276
 8057 1c44 01       		.byte	0x1
 8058 1c45 7A0B     		.2byte	0xb7a
 8059 1c47 00000000 		.4byte	.LFB536
 8060 1c4b 5C000000 		.4byte	.LFE536-.LFB536
 8061 1c4f 01       		.uleb128 0x1
 8062 1c50 9C       		.byte	0x9c
 8063 1c51 F81C0000 		.4byte	0x1cf8
 8064 1c55 1C       		.uleb128 0x1c
 8065 1c56 A6010000 		.4byte	.LASF275
 8066 1c5a 01       		.byte	0x1
 8067 1c5b 7A0B     		.2byte	0xb7a
 8068 1c5d B1170000 		.4byte	0x17b1
 8069 1c61 DE090000 		.4byte	.LLST70
 8070 1c65 1C       		.uleb128 0x1c
 8071 1c66 3C100000 		.4byte	.LASF163
 8072 1c6a 01       		.byte	0x1
 8073 1c6b 7A0B     		.2byte	0xb7a
 8074 1c6d D30E0000 		.4byte	0xed3
 8075 1c71 2E0A0000 		.4byte	.LLST71
 8076 1c75 1C       		.uleb128 0x1c
 8077 1c76 45140000 		.4byte	.LASF225
 8078 1c7a 01       		.byte	0x1
 8079 1c7b 7A0B     		.2byte	0xb7a
 8080 1c7d D30E0000 		.4byte	0xed3
 8081 1c81 5A0A0000 		.4byte	.LLST72
 8082 1c85 2E       		.uleb128 0x2e
 8083 1c86 660A0000 		.4byte	0xa66
 8084 1c8a 02000000 		.4byte	.LBB151
 8085 1c8e 14000000 		.4byte	.LBE151-.LBB151
 8086 1c92 01       		.byte	0x1
 8087 1c93 7C0B     		.2byte	0xb7c
 8088 1c95 A91C0000 		.4byte	0x1ca9
 8089 1c99 1F       		.uleb128 0x1f
 8090 1c9a 02000000 		.4byte	.LBB152
 8091 1c9e 14000000 		.4byte	.LBE152-.LBB152
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 245


 8092 1ca2 20       		.uleb128 0x20
 8093 1ca3 720A0000 		.4byte	0xa72
 8094 1ca7 00       		.byte	0
 8095 1ca8 00       		.byte	0
 8096 1ca9 2E       		.uleb128 0x2e
 8097 1caa 660A0000 		.4byte	0xa66
 8098 1cae 1E000000 		.4byte	.LBB153
 8099 1cb2 12000000 		.4byte	.LBE153-.LBB153
 8100 1cb6 01       		.byte	0x1
 8101 1cb7 800B     		.2byte	0xb80
 8102 1cb9 CD1C0000 		.4byte	0x1ccd
 8103 1cbd 1F       		.uleb128 0x1f
 8104 1cbe 1E000000 		.4byte	.LBB154
 8105 1cc2 12000000 		.4byte	.LBE154-.LBB154
 8106 1cc6 20       		.uleb128 0x20
 8107 1cc7 720A0000 		.4byte	0xa72
 8108 1ccb 00       		.byte	0
 8109 1ccc 00       		.byte	0
 8110 1ccd 28       		.uleb128 0x28
 8111 1cce 4E000000 		.4byte	.LVL256
 8112 1cd2 3A290000 		.4byte	0x293a
 8113 1cd6 E21C0000 		.4byte	0x1ce2
 8114 1cda 24       		.uleb128 0x24
 8115 1cdb 01       		.uleb128 0x1
 8116 1cdc 50       		.byte	0x50
 8117 1cdd 03       		.uleb128 0x3
 8118 1cde F3       		.byte	0xf3
 8119 1cdf 01       		.uleb128 0x1
 8120 1ce0 50       		.byte	0x50
 8121 1ce1 00       		.byte	0
 8122 1ce2 23       		.uleb128 0x23
 8123 1ce3 56000000 		.4byte	.LVL257
 8124 1ce7 450E0000 		.4byte	0xe45
 8125 1ceb 24       		.uleb128 0x24
 8126 1cec 01       		.uleb128 0x1
 8127 1ced 50       		.byte	0x50
 8128 1cee 02       		.uleb128 0x2
 8129 1cef 74       		.byte	0x74
 8130 1cf0 00       		.sleb128 0
 8131 1cf1 24       		.uleb128 0x24
 8132 1cf2 01       		.uleb128 0x1
 8133 1cf3 51       		.byte	0x51
 8134 1cf4 01       		.uleb128 0x1
 8135 1cf5 31       		.byte	0x31
 8136 1cf6 00       		.byte	0
 8137 1cf7 00       		.byte	0
 8138 1cf8 2D       		.uleb128 0x2d
 8139 1cf9 CC0A0000 		.4byte	.LASF277
 8140 1cfd 01       		.byte	0x1
 8141 1cfe 940B     		.2byte	0xb94
 8142 1d00 00000000 		.4byte	.LFB537
 8143 1d04 3C000000 		.4byte	.LFE537-.LFB537
 8144 1d08 01       		.uleb128 0x1
 8145 1d09 9C       		.byte	0x9c
 8146 1d0a 821D0000 		.4byte	0x1d82
 8147 1d0e 1C       		.uleb128 0x1c
 8148 1d0f A6010000 		.4byte	.LASF275
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 246


 8149 1d13 01       		.byte	0x1
 8150 1d14 940B     		.2byte	0xb94
 8151 1d16 EB1A0000 		.4byte	0x1aeb
 8152 1d1a 860A0000 		.4byte	.LLST73
 8153 1d1e 1C       		.uleb128 0x1c
 8154 1d1f 45140000 		.4byte	.LASF225
 8155 1d23 01       		.byte	0x1
 8156 1d24 940B     		.2byte	0xb94
 8157 1d26 00080000 		.4byte	0x800
 8158 1d2a A70A0000 		.4byte	.LLST74
 8159 1d2e 1C       		.uleb128 0x1c
 8160 1d2f 53080000 		.4byte	.LASF278
 8161 1d33 01       		.byte	0x1
 8162 1d34 940B     		.2byte	0xb94
 8163 1d36 CE0E0000 		.4byte	0xece
 8164 1d3a C50A0000 		.4byte	.LLST75
 8165 1d3e 2E       		.uleb128 0x2e
 8166 1d3f 660A0000 		.4byte	0xa66
 8167 1d43 04000000 		.4byte	.LBB155
 8168 1d47 16000000 		.4byte	.LBE155-.LBB155
 8169 1d4b 01       		.byte	0x1
 8170 1d4c 960B     		.2byte	0xb96
 8171 1d4e 621D0000 		.4byte	0x1d62
 8172 1d52 1F       		.uleb128 0x1f
 8173 1d53 04000000 		.4byte	.LBB156
 8174 1d57 16000000 		.4byte	.LBE156-.LBB156
 8175 1d5b 20       		.uleb128 0x20
 8176 1d5c 720A0000 		.4byte	0xa72
 8177 1d60 00       		.byte	0
 8178 1d61 00       		.byte	0
 8179 1d62 22       		.uleb128 0x22
 8180 1d63 26000000 		.4byte	.LVL263
 8181 1d67 3A290000 		.4byte	0x293a
 8182 1d6b 23       		.uleb128 0x23
 8183 1d6c 34000000 		.4byte	.LVL265
 8184 1d70 450E0000 		.4byte	0xe45
 8185 1d74 24       		.uleb128 0x24
 8186 1d75 01       		.uleb128 0x1
 8187 1d76 50       		.byte	0x50
 8188 1d77 02       		.uleb128 0x2
 8189 1d78 74       		.byte	0x74
 8190 1d79 00       		.sleb128 0
 8191 1d7a 24       		.uleb128 0x24
 8192 1d7b 01       		.uleb128 0x1
 8193 1d7c 51       		.byte	0x51
 8194 1d7d 02       		.uleb128 0x2
 8195 1d7e 75       		.byte	0x75
 8196 1d7f 00       		.sleb128 0
 8197 1d80 00       		.byte	0
 8198 1d81 00       		.byte	0
 8199 1d82 2C       		.uleb128 0x2c
 8200 1d83 0E170000 		.4byte	.LASF279
 8201 1d87 01       		.byte	0x1
 8202 1d88 B30B     		.2byte	0xbb3
 8203 1d8a EA070000 		.4byte	0x7ea
 8204 1d8e 00000000 		.4byte	.LFB538
 8205 1d92 88000000 		.4byte	.LFE538-.LFB538
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 247


 8206 1d96 01       		.uleb128 0x1
 8207 1d97 9C       		.byte	0x9c
 8208 1d98 461E0000 		.4byte	0x1e46
 8209 1d9c 1C       		.uleb128 0x1c
 8210 1d9d A6010000 		.4byte	.LASF275
 8211 1da1 01       		.byte	0x1
 8212 1da2 B30B     		.2byte	0xbb3
 8213 1da4 511E0000 		.4byte	0x1e51
 8214 1da8 F10A0000 		.4byte	.LLST76
 8215 1dac 1D       		.uleb128 0x1d
 8216 1dad 07060000 		.4byte	.LASF280
 8217 1db1 01       		.byte	0x1
 8218 1db2 B50B     		.2byte	0xbb5
 8219 1db4 640B0000 		.4byte	0xb64
 8220 1db8 120B0000 		.4byte	.LLST77
 8221 1dbc 1D       		.uleb128 0x1d
 8222 1dbd 5A120000 		.4byte	.LASF208
 8223 1dc1 01       		.byte	0x1
 8224 1dc2 B60B     		.2byte	0xbb6
 8225 1dc4 EA070000 		.4byte	0x7ea
 8226 1dc8 250B0000 		.4byte	.LLST78
 8227 1dcc 2E       		.uleb128 0x2e
 8228 1dcd 660A0000 		.4byte	0xa66
 8229 1dd1 08000000 		.4byte	.LBB157
 8230 1dd5 12000000 		.4byte	.LBE157-.LBB157
 8231 1dd9 01       		.byte	0x1
 8232 1dda C60B     		.2byte	0xbc6
 8233 1ddc F01D0000 		.4byte	0x1df0
 8234 1de0 1F       		.uleb128 0x1f
 8235 1de1 08000000 		.4byte	.LBB158
 8236 1de5 12000000 		.4byte	.LBE158-.LBB158
 8237 1de9 20       		.uleb128 0x20
 8238 1dea 720A0000 		.4byte	0xa72
 8239 1dee 00       		.byte	0
 8240 1def 00       		.byte	0
 8241 1df0 28       		.uleb128 0x28
 8242 1df1 24000000 		.4byte	.LVL271
 8243 1df5 51290000 		.4byte	0x2951
 8244 1df9 041E0000 		.4byte	0x1e04
 8245 1dfd 24       		.uleb128 0x24
 8246 1dfe 01       		.uleb128 0x1
 8247 1dff 50       		.byte	0x50
 8248 1e00 02       		.uleb128 0x2
 8249 1e01 75       		.byte	0x75
 8250 1e02 00       		.sleb128 0
 8251 1e03 00       		.byte	0
 8252 1e04 28       		.uleb128 0x28
 8253 1e05 34000000 		.4byte	.LVL272
 8254 1e09 51290000 		.4byte	0x2951
 8255 1e0d 181E0000 		.4byte	0x1e18
 8256 1e11 24       		.uleb128 0x24
 8257 1e12 01       		.uleb128 0x1
 8258 1e13 50       		.byte	0x50
 8259 1e14 02       		.uleb128 0x2
 8260 1e15 75       		.byte	0x75
 8261 1e16 00       		.sleb128 0
 8262 1e17 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 248


 8263 1e18 28       		.uleb128 0x28
 8264 1e19 56000000 		.4byte	.LVL273
 8265 1e1d 3A290000 		.4byte	0x293a
 8266 1e21 2C1E0000 		.4byte	0x1e2c
 8267 1e25 24       		.uleb128 0x24
 8268 1e26 01       		.uleb128 0x1
 8269 1e27 51       		.byte	0x51
 8270 1e28 02       		.uleb128 0x2
 8271 1e29 75       		.byte	0x75
 8272 1e2a 00       		.sleb128 0
 8273 1e2b 00       		.byte	0
 8274 1e2c 23       		.uleb128 0x23
 8275 1e2d 60000000 		.4byte	.LVL274
 8276 1e31 3A290000 		.4byte	0x293a
 8277 1e35 24       		.uleb128 0x24
 8278 1e36 01       		.uleb128 0x1
 8279 1e37 50       		.byte	0x50
 8280 1e38 05       		.uleb128 0x5
 8281 1e39 03       		.byte	0x3
 8282 1e3a 14000000 		.4byte	.LANCHOR0+20
 8283 1e3e 24       		.uleb128 0x24
 8284 1e3f 01       		.uleb128 0x1
 8285 1e40 51       		.byte	0x51
 8286 1e41 02       		.uleb128 0x2
 8287 1e42 75       		.byte	0x75
 8288 1e43 00       		.sleb128 0
 8289 1e44 00       		.byte	0
 8290 1e45 00       		.byte	0
 8291 1e46 06       		.uleb128 0x6
 8292 1e47 04       		.byte	0x4
 8293 1e48 4C1E0000 		.4byte	0x1e4c
 8294 1e4c 07       		.uleb128 0x7
 8295 1e4d ED080000 		.4byte	0x8ed
 8296 1e51 07       		.uleb128 0x7
 8297 1e52 461E0000 		.4byte	0x1e46
 8298 1e56 2D       		.uleb128 0x2d
 8299 1e57 A5090000 		.4byte	.LASF281
 8300 1e5b 01       		.byte	0x1
 8301 1e5c F70B     		.2byte	0xbf7
 8302 1e5e 00000000 		.4byte	.LFB539
 8303 1e62 84000000 		.4byte	.LFE539-.LFB539
 8304 1e66 01       		.uleb128 0x1
 8305 1e67 9C       		.byte	0x9c
 8306 1e68 121F0000 		.4byte	0x1f12
 8307 1e6c 1C       		.uleb128 0x1c
 8308 1e6d A6160000 		.4byte	.LASF282
 8309 1e71 01       		.byte	0x1
 8310 1e72 F70B     		.2byte	0xbf7
 8311 1e74 E7080000 		.4byte	0x8e7
 8312 1e78 440B0000 		.4byte	.LLST79
 8313 1e7c 1C       		.uleb128 0x1c
 8314 1e7d 3C100000 		.4byte	.LASF163
 8315 1e81 01       		.byte	0x1
 8316 1e82 F70B     		.2byte	0xbf7
 8317 1e84 D30E0000 		.4byte	0xed3
 8318 1e88 650B0000 		.4byte	.LLST80
 8319 1e8c 1D       		.uleb128 0x1d
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 249


 8320 1e8d 07060000 		.4byte	.LASF280
 8321 1e91 01       		.byte	0x1
 8322 1e92 F90B     		.2byte	0xbf9
 8323 1e94 640B0000 		.4byte	0xb64
 8324 1e98 860B0000 		.4byte	.LLST81
 8325 1e9c 2E       		.uleb128 0x2e
 8326 1e9d 660A0000 		.4byte	0xa66
 8327 1ea1 08000000 		.4byte	.LBB159
 8328 1ea5 12000000 		.4byte	.LBE159-.LBB159
 8329 1ea9 01       		.byte	0x1
 8330 1eaa FD0B     		.2byte	0xbfd
 8331 1eac C01E0000 		.4byte	0x1ec0
 8332 1eb0 1F       		.uleb128 0x1f
 8333 1eb1 08000000 		.4byte	.LBB160
 8334 1eb5 12000000 		.4byte	.LBE160-.LBB160
 8335 1eb9 20       		.uleb128 0x20
 8336 1eba 720A0000 		.4byte	0xa72
 8337 1ebe 00       		.byte	0
 8338 1ebf 00       		.byte	0
 8339 1ec0 2E       		.uleb128 0x2e
 8340 1ec1 660A0000 		.4byte	0xa66
 8341 1ec5 26000000 		.4byte	.LBB161
 8342 1ec9 12000000 		.4byte	.LBE161-.LBB161
 8343 1ecd 01       		.byte	0x1
 8344 1ece 050C     		.2byte	0xc05
 8345 1ed0 E41E0000 		.4byte	0x1ee4
 8346 1ed4 1F       		.uleb128 0x1f
 8347 1ed5 26000000 		.4byte	.LBB162
 8348 1ed9 12000000 		.4byte	.LBE162-.LBB162
 8349 1edd 20       		.uleb128 0x20
 8350 1ede 720A0000 		.4byte	0xa72
 8351 1ee2 00       		.byte	0
 8352 1ee3 00       		.byte	0
 8353 1ee4 22       		.uleb128 0x22
 8354 1ee5 3C000000 		.4byte	.LVL283
 8355 1ee9 51290000 		.4byte	0x2951
 8356 1eed 28       		.uleb128 0x28
 8357 1eee 44000000 		.4byte	.LVL284
 8358 1ef2 51290000 		.4byte	0x2951
 8359 1ef6 011F0000 		.4byte	0x1f01
 8360 1efa 24       		.uleb128 0x24
 8361 1efb 01       		.uleb128 0x1
 8362 1efc 50       		.byte	0x50
 8363 1efd 02       		.uleb128 0x2
 8364 1efe 76       		.byte	0x76
 8365 1eff 00       		.sleb128 0
 8366 1f00 00       		.byte	0
 8367 1f01 23       		.uleb128 0x23
 8368 1f02 6A000000 		.4byte	.LVL285
 8369 1f06 3A290000 		.4byte	0x293a
 8370 1f0a 24       		.uleb128 0x24
 8371 1f0b 01       		.uleb128 0x1
 8372 1f0c 51       		.byte	0x51
 8373 1f0d 02       		.uleb128 0x2
 8374 1f0e 76       		.byte	0x76
 8375 1f0f 00       		.sleb128 0
 8376 1f10 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 250


 8377 1f11 00       		.byte	0
 8378 1f12 2D       		.uleb128 0x2d
 8379 1f13 C8020000 		.4byte	.LASF283
 8380 1f17 01       		.byte	0x1
 8381 1f18 190C     		.2byte	0xc19
 8382 1f1a 00000000 		.4byte	.LFB540
 8383 1f1e 34000000 		.4byte	.LFE540-.LFB540
 8384 1f22 01       		.uleb128 0x1
 8385 1f23 9C       		.byte	0x9c
 8386 1f24 6F1F0000 		.4byte	0x1f6f
 8387 1f28 1C       		.uleb128 0x1c
 8388 1f29 0D0D0000 		.4byte	.LASF284
 8389 1f2d 01       		.byte	0x1
 8390 1f2e 190C     		.2byte	0xc19
 8391 1f30 751F0000 		.4byte	0x1f75
 8392 1f34 990B0000 		.4byte	.LLST82
 8393 1f38 2E       		.uleb128 0x2e
 8394 1f39 660A0000 		.4byte	0xa66
 8395 1f3d 02000000 		.4byte	.LBB163
 8396 1f41 12000000 		.4byte	.LBE163-.LBB163
 8397 1f45 01       		.byte	0x1
 8398 1f46 1B0C     		.2byte	0xc1b
 8399 1f48 5C1F0000 		.4byte	0x1f5c
 8400 1f4c 1F       		.uleb128 0x1f
 8401 1f4d 02000000 		.4byte	.LBB164
 8402 1f51 12000000 		.4byte	.LBE164-.LBB164
 8403 1f55 20       		.uleb128 0x20
 8404 1f56 720A0000 		.4byte	0xa72
 8405 1f5a 00       		.byte	0
 8406 1f5b 00       		.byte	0
 8407 1f5c 22       		.uleb128 0x22
 8408 1f5d 1C000000 		.4byte	.LVL289
 8409 1f61 2F290000 		.4byte	0x292f
 8410 1f65 22       		.uleb128 0x22
 8411 1f66 2E000000 		.4byte	.LVL290
 8412 1f6a 46290000 		.4byte	0x2946
 8413 1f6e 00       		.byte	0
 8414 1f6f 06       		.uleb128 0x6
 8415 1f70 04       		.byte	0x4
 8416 1f71 5E090000 		.4byte	0x95e
 8417 1f75 07       		.uleb128 0x7
 8418 1f76 6F1F0000 		.4byte	0x1f6f
 8419 1f7a 2D       		.uleb128 0x2d
 8420 1f7b 8A0D0000 		.4byte	.LASF285
 8421 1f7f 01       		.byte	0x1
 8422 1f80 250C     		.2byte	0xc25
 8423 1f82 00000000 		.4byte	.LFB541
 8424 1f86 14000000 		.4byte	.LFE541-.LFB541
 8425 1f8a 01       		.uleb128 0x1
 8426 1f8b 9C       		.byte	0x9c
 8427 1f8c 9F1F0000 		.4byte	0x1f9f
 8428 1f90 25       		.uleb128 0x25
 8429 1f91 0D0D0000 		.4byte	.LASF284
 8430 1f95 01       		.byte	0x1
 8431 1f96 250C     		.2byte	0xc25
 8432 1f98 751F0000 		.4byte	0x1f75
 8433 1f9c 01       		.uleb128 0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 251


 8434 1f9d 50       		.byte	0x50
 8435 1f9e 00       		.byte	0
 8436 1f9f 2C       		.uleb128 0x2c
 8437 1fa0 3C110000 		.4byte	.LASF286
 8438 1fa4 01       		.byte	0x1
 8439 1fa5 2D0C     		.2byte	0xc2d
 8440 1fa7 EA070000 		.4byte	0x7ea
 8441 1fab 00000000 		.4byte	.LFB542
 8442 1faf 80000000 		.4byte	.LFE542-.LFB542
 8443 1fb3 01       		.uleb128 0x1
 8444 1fb4 9C       		.byte	0x9c
 8445 1fb5 82200000 		.4byte	0x2082
 8446 1fb9 1C       		.uleb128 0x1c
 8447 1fba 0D0D0000 		.4byte	.LASF284
 8448 1fbe 01       		.byte	0x1
 8449 1fbf 2D0C     		.2byte	0xc2d
 8450 1fc1 751F0000 		.4byte	0x1f75
 8451 1fc5 C50B0000 		.4byte	.LLST83
 8452 1fc9 1C       		.uleb128 0x1c
 8453 1fca BB040000 		.4byte	.LASF287
 8454 1fce 01       		.byte	0x1
 8455 1fcf 2D0C     		.2byte	0xc2d
 8456 1fd1 A6190000 		.4byte	0x19a6
 8457 1fd5 F10B0000 		.4byte	.LLST84
 8458 1fd9 1D       		.uleb128 0x1d
 8459 1fda 5A120000 		.4byte	.LASF208
 8460 1fde 01       		.byte	0x1
 8461 1fdf 2F0C     		.2byte	0xc2f
 8462 1fe1 EA070000 		.4byte	0x7ea
 8463 1fe5 680C0000 		.4byte	.LLST85
 8464 1fe9 2E       		.uleb128 0x2e
 8465 1fea 660A0000 		.4byte	0xa66
 8466 1fee 04000000 		.4byte	.LBB165
 8467 1ff2 14000000 		.4byte	.LBE165-.LBB165
 8468 1ff6 01       		.byte	0x1
 8469 1ff7 310C     		.2byte	0xc31
 8470 1ff9 0D200000 		.4byte	0x200d
 8471 1ffd 1F       		.uleb128 0x1f
 8472 1ffe 04000000 		.4byte	.LBB166
 8473 2002 14000000 		.4byte	.LBE166-.LBB166
 8474 2006 20       		.uleb128 0x20
 8475 2007 720A0000 		.4byte	0xa72
 8476 200b 00       		.byte	0
 8477 200c 00       		.byte	0
 8478 200d 2E       		.uleb128 0x2e
 8479 200e 660A0000 		.4byte	0xa66
 8480 2012 1A000000 		.4byte	.LBB167
 8481 2016 14000000 		.4byte	.LBE167-.LBB167
 8482 201a 01       		.byte	0x1
 8483 201b 320C     		.2byte	0xc32
 8484 201d 31200000 		.4byte	0x2031
 8485 2021 1F       		.uleb128 0x1f
 8486 2022 1A000000 		.4byte	.LBB168
 8487 2026 14000000 		.4byte	.LBE168-.LBB168
 8488 202a 20       		.uleb128 0x20
 8489 202b 720A0000 		.4byte	0xa72
 8490 202f 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 252


 8491 2030 00       		.byte	0
 8492 2031 2A       		.uleb128 0x2a
 8493 2032 32000000 		.4byte	.LBB169
 8494 2036 42000000 		.4byte	.LBE169-.LBB169
 8495 203a 6F200000 		.4byte	0x206f
 8496 203e 1D       		.uleb128 0x1d
 8497 203f BE080000 		.4byte	.LASF228
 8498 2043 01       		.byte	0x1
 8499 2044 370C     		.2byte	0xc37
 8500 2046 D30E0000 		.4byte	0xed3
 8501 204a 9E0C0000 		.4byte	.LLST86
 8502 204e 1D       		.uleb128 0x1d
 8503 204f 82060000 		.4byte	.LASF288
 8504 2053 01       		.byte	0x1
 8505 2054 380C     		.2byte	0xc38
 8506 2056 D30E0000 		.4byte	0xed3
 8507 205a BC0C0000 		.4byte	.LLST87
 8508 205e 23       		.uleb128 0x23
 8509 205f 62000000 		.4byte	.LVL300
 8510 2063 7A1F0000 		.4byte	0x1f7a
 8511 2067 24       		.uleb128 0x24
 8512 2068 01       		.uleb128 0x1
 8513 2069 50       		.byte	0x50
 8514 206a 02       		.uleb128 0x2
 8515 206b 75       		.byte	0x75
 8516 206c 00       		.sleb128 0
 8517 206d 00       		.byte	0
 8518 206e 00       		.byte	0
 8519 206f 22       		.uleb128 0x22
 8520 2070 32000000 		.4byte	.LVL296
 8521 2074 2F290000 		.4byte	0x292f
 8522 2078 22       		.uleb128 0x22
 8523 2079 78000000 		.4byte	.LVL309
 8524 207d 46290000 		.4byte	0x2946
 8525 2081 00       		.byte	0
 8526 2082 31       		.uleb128 0x31
 8527 2083 6F120000 		.4byte	.LASF290
 8528 2087 01       		.byte	0x1
 8529 2088 6C0C     		.2byte	0xc6c
 8530 208a 00000000 		.4byte	.LFB543
 8531 208e 10000000 		.4byte	.LFE543-.LFB543
 8532 2092 01       		.uleb128 0x1
 8533 2093 9C       		.byte	0x9c
 8534 2094 2D       		.uleb128 0x2d
 8535 2095 EC000000 		.4byte	.LASF291
 8536 2099 01       		.byte	0x1
 8537 209a 420D     		.2byte	0xd42
 8538 209c 00000000 		.4byte	.LFB545
 8539 20a0 1C000000 		.4byte	.LFE545-.LFB545
 8540 20a4 01       		.uleb128 0x1
 8541 20a5 9C       		.byte	0x9c
 8542 20a6 E9200000 		.4byte	0x20e9
 8543 20aa 1C       		.uleb128 0x1c
 8544 20ab 00090000 		.4byte	.LASF292
 8545 20af 01       		.byte	0x1
 8546 20b0 420D     		.2byte	0xd42
 8547 20b2 F8080000 		.4byte	0x8f8
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 253


 8548 20b6 DA0C0000 		.4byte	.LLST88
 8549 20ba 1C       		.uleb128 0x1c
 8550 20bb C3110000 		.4byte	.LASF293
 8551 20bf 01       		.byte	0x1
 8552 20c0 420D     		.2byte	0xd42
 8553 20c2 EA070000 		.4byte	0x7ea
 8554 20c6 ED0C0000 		.4byte	.LLST89
 8555 20ca 25       		.uleb128 0x25
 8556 20cb B6160000 		.4byte	.LASF294
 8557 20cf 01       		.byte	0x1
 8558 20d0 420D     		.2byte	0xd42
 8559 20d2 BB000000 		.4byte	0xbb
 8560 20d6 01       		.uleb128 0x1
 8561 20d7 52       		.byte	0x52
 8562 20d8 1D       		.uleb128 0x1d
 8563 20d9 BC150000 		.4byte	.LASF209
 8564 20dd 01       		.byte	0x1
 8565 20de 440D     		.2byte	0xd44
 8566 20e0 640B0000 		.4byte	0xb64
 8567 20e4 1B0D0000 		.4byte	.LLST90
 8568 20e8 00       		.byte	0
 8569 20e9 2C       		.uleb128 0x2c
 8570 20ea 29130000 		.4byte	.LASF295
 8571 20ee 01       		.byte	0x1
 8572 20ef 520D     		.2byte	0xd52
 8573 20f1 BB000000 		.4byte	0xbb
 8574 20f5 00000000 		.4byte	.LFB546
 8575 20f9 20000000 		.4byte	.LFE546-.LFB546
 8576 20fd 01       		.uleb128 0x1
 8577 20fe 9C       		.byte	0x9c
 8578 20ff 44210000 		.4byte	0x2144
 8579 2103 1C       		.uleb128 0x1c
 8580 2104 540E0000 		.4byte	.LASF254
 8581 2108 01       		.byte	0x1
 8582 2109 520D     		.2byte	0xd52
 8583 210b F8080000 		.4byte	0x8f8
 8584 210f 2E0D0000 		.4byte	.LLST91
 8585 2113 1C       		.uleb128 0x1c
 8586 2114 C3110000 		.4byte	.LASF293
 8587 2118 01       		.byte	0x1
 8588 2119 520D     		.2byte	0xd52
 8589 211b EA070000 		.4byte	0x7ea
 8590 211f 5A0D0000 		.4byte	.LLST92
 8591 2123 1D       		.uleb128 0x1d
 8592 2124 6E070000 		.4byte	.LASF296
 8593 2128 01       		.byte	0x1
 8594 2129 540D     		.2byte	0xd54
 8595 212b BB000000 		.4byte	0xbb
 8596 212f 850D0000 		.4byte	.LLST93
 8597 2133 1D       		.uleb128 0x1d
 8598 2134 BC150000 		.4byte	.LASF209
 8599 2138 01       		.byte	0x1
 8600 2139 550D     		.2byte	0xd55
 8601 213b 640B0000 		.4byte	0xb64
 8602 213f BB0D0000 		.4byte	.LLST94
 8603 2143 00       		.byte	0
 8604 2144 2C       		.uleb128 0x2c
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 254


 8605 2145 C3140000 		.4byte	.LASF297
 8606 2149 01       		.byte	0x1
 8607 214a B70E     		.2byte	0xeb7
 8608 214c F8080000 		.4byte	0x8f8
 8609 2150 00000000 		.4byte	.LFB551
 8610 2154 0C000000 		.4byte	.LFE551-.LFB551
 8611 2158 01       		.uleb128 0x1
 8612 2159 9C       		.byte	0x9c
 8613 215a 6D210000 		.4byte	0x216d
 8614 215e 26       		.uleb128 0x26
 8615 215f 5A120000 		.4byte	.LASF208
 8616 2163 01       		.byte	0x1
 8617 2164 B90E     		.2byte	0xeb9
 8618 2166 F8080000 		.4byte	0x8f8
 8619 216a 01       		.uleb128 0x1
 8620 216b 50       		.byte	0x50
 8621 216c 00       		.byte	0
 8622 216d 2C       		.uleb128 0x2c
 8623 216e E7150000 		.4byte	.LASF298
 8624 2172 01       		.byte	0x1
 8625 2173 C80E     		.2byte	0xec8
 8626 2175 EA070000 		.4byte	0x7ea
 8627 2179 00000000 		.4byte	.LFB552
 8628 217d 20000000 		.4byte	.LFE552-.LFB552
 8629 2181 01       		.uleb128 0x1
 8630 2182 9C       		.byte	0x9c
 8631 2183 96210000 		.4byte	0x2196
 8632 2187 26       		.uleb128 0x26
 8633 2188 5A120000 		.4byte	.LASF208
 8634 218c 01       		.byte	0x1
 8635 218d CA0E     		.2byte	0xeca
 8636 218f EA070000 		.4byte	0x7ea
 8637 2193 01       		.uleb128 0x1
 8638 2194 50       		.byte	0x50
 8639 2195 00       		.byte	0
 8640 2196 2C       		.uleb128 0x2c
 8641 2197 080E0000 		.4byte	.LASF299
 8642 219b 01       		.byte	0x1
 8643 219c 2911     		.2byte	0x1129
 8644 219e 00080000 		.4byte	0x800
 8645 21a2 00000000 		.4byte	.LFB553
 8646 21a6 20000000 		.4byte	.LFE553-.LFB553
 8647 21aa 01       		.uleb128 0x1
 8648 21ab 9C       		.byte	0x9c
 8649 21ac BF210000 		.4byte	0x21bf
 8650 21b0 26       		.uleb128 0x26
 8651 21b1 1E0C0000 		.4byte	.LASF235
 8652 21b5 01       		.byte	0x1
 8653 21b6 2B11     		.2byte	0x112b
 8654 21b8 00080000 		.4byte	0x800
 8655 21bc 01       		.uleb128 0x1
 8656 21bd 50       		.byte	0x50
 8657 21be 00       		.byte	0
 8658 21bf 2C       		.uleb128 0x2c
 8659 21c0 A30A0000 		.4byte	.LASF300
 8660 21c4 01       		.byte	0x1
 8661 21c5 4A11     		.2byte	0x114a
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 255


 8662 21c7 01010000 		.4byte	0x101
 8663 21cb 00000000 		.4byte	.LFB554
 8664 21cf 80000000 		.4byte	.LFE554-.LFB554
 8665 21d3 01       		.uleb128 0x1
 8666 21d4 9C       		.byte	0x9c
 8667 21d5 47220000 		.4byte	0x2247
 8668 21d9 1C       		.uleb128 0x1c
 8669 21da 3D060000 		.4byte	.LASF301
 8670 21de 01       		.byte	0x1
 8671 21df 4A11     		.2byte	0x114a
 8672 21e1 EA070000 		.4byte	0x7ea
 8673 21e5 CE0D0000 		.4byte	.LLST95
 8674 21e9 1C       		.uleb128 0x1c
 8675 21ea 45140000 		.4byte	.LASF225
 8676 21ee 01       		.byte	0x1
 8677 21ef 4A11     		.2byte	0x114a
 8678 21f1 00080000 		.4byte	0x800
 8679 21f5 FA0D0000 		.4byte	.LLST96
 8680 21f9 1D       		.uleb128 0x1d
 8681 21fa 3C0C0000 		.4byte	.LASF302
 8682 21fe 01       		.byte	0x1
 8683 21ff 4C11     		.2byte	0x114c
 8684 2201 01010000 		.4byte	0x101
 8685 2205 260E0000 		.4byte	.LLST97
 8686 2209 22       		.uleb128 0x22
 8687 220a 0A000000 		.4byte	.LVL327
 8688 220e 2F290000 		.4byte	0x292f
 8689 2212 28       		.uleb128 0x28
 8690 2213 2A000000 		.4byte	.LVL328
 8691 2217 450E0000 		.4byte	0xe45
 8692 221b 2B220000 		.4byte	0x222b
 8693 221f 24       		.uleb128 0x24
 8694 2220 01       		.uleb128 0x1
 8695 2221 50       		.byte	0x50
 8696 2222 02       		.uleb128 0x2
 8697 2223 74       		.byte	0x74
 8698 2224 00       		.sleb128 0
 8699 2225 24       		.uleb128 0x24
 8700 2226 01       		.uleb128 0x1
 8701 2227 51       		.byte	0x51
 8702 2228 01       		.uleb128 0x1
 8703 2229 31       		.byte	0x31
 8704 222a 00       		.byte	0
 8705 222b 22       		.uleb128 0x22
 8706 222c 3E000000 		.4byte	.LVL329
 8707 2230 46290000 		.4byte	0x2946
 8708 2234 22       		.uleb128 0x22
 8709 2235 42000000 		.4byte	.LVL330
 8710 2239 2F290000 		.4byte	0x292f
 8711 223d 22       		.uleb128 0x22
 8712 223e 74000000 		.4byte	.LVL332
 8713 2242 46290000 		.4byte	0x2946
 8714 2246 00       		.byte	0
 8715 2247 2C       		.uleb128 0x2c
 8716 2248 270A0000 		.4byte	.LASF303
 8717 224c 01       		.byte	0x1
 8718 224d 8E11     		.2byte	0x118e
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 256


 8719 224f EA070000 		.4byte	0x7ea
 8720 2253 00000000 		.4byte	.LFB555
 8721 2257 A4000000 		.4byte	.LFE555-.LFB555
 8722 225b 01       		.uleb128 0x1
 8723 225c 9C       		.byte	0x9c
 8724 225d EF220000 		.4byte	0x22ef
 8725 2261 1C       		.uleb128 0x1c
 8726 2262 EA060000 		.4byte	.LASF304
 8727 2266 01       		.byte	0x1
 8728 2267 8E11     		.2byte	0x118e
 8729 2269 01010000 		.4byte	0x101
 8730 226d 440E0000 		.4byte	.LLST98
 8731 2271 1C       		.uleb128 0x1c
 8732 2272 0E010000 		.4byte	.LASF305
 8733 2276 01       		.byte	0x1
 8734 2277 8E11     		.2byte	0x118e
 8735 2279 01010000 		.4byte	0x101
 8736 227d 700E0000 		.4byte	.LLST99
 8737 2281 1C       		.uleb128 0x1c
 8738 2282 19120000 		.4byte	.LASF306
 8739 2286 01       		.byte	0x1
 8740 2287 8E11     		.2byte	0x118e
 8741 2289 40050000 		.4byte	0x540
 8742 228d B50E0000 		.4byte	.LLST100
 8743 2291 1C       		.uleb128 0x1c
 8744 2292 45140000 		.4byte	.LASF225
 8745 2296 01       		.byte	0x1
 8746 2297 8E11     		.2byte	0x118e
 8747 2299 00080000 		.4byte	0x800
 8748 229d FA0E0000 		.4byte	.LLST101
 8749 22a1 1D       		.uleb128 0x1d
 8750 22a2 5A120000 		.4byte	.LASF208
 8751 22a6 01       		.byte	0x1
 8752 22a7 9011     		.2byte	0x1190
 8753 22a9 EA070000 		.4byte	0x7ea
 8754 22ad 260F0000 		.4byte	.LLST102
 8755 22b1 22       		.uleb128 0x22
 8756 22b2 0E000000 		.4byte	.LVL335
 8757 22b6 2F290000 		.4byte	0x292f
 8758 22ba 28       		.uleb128 0x28
 8759 22bb 40000000 		.4byte	.LVL336
 8760 22bf 450E0000 		.4byte	0xe45
 8761 22c3 D3220000 		.4byte	0x22d3
 8762 22c7 24       		.uleb128 0x24
 8763 22c8 01       		.uleb128 0x1
 8764 22c9 50       		.byte	0x50
 8765 22ca 02       		.uleb128 0x2
 8766 22cb 76       		.byte	0x76
 8767 22cc 00       		.sleb128 0
 8768 22cd 24       		.uleb128 0x24
 8769 22ce 01       		.uleb128 0x1
 8770 22cf 51       		.byte	0x51
 8771 22d0 01       		.uleb128 0x1
 8772 22d1 31       		.byte	0x31
 8773 22d2 00       		.byte	0
 8774 22d3 22       		.uleb128 0x22
 8775 22d4 54000000 		.4byte	.LVL337
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 257


 8776 22d8 46290000 		.4byte	0x2946
 8777 22dc 22       		.uleb128 0x22
 8778 22dd 58000000 		.4byte	.LVL338
 8779 22e1 2F290000 		.4byte	0x292f
 8780 22e5 22       		.uleb128 0x22
 8781 22e6 98000000 		.4byte	.LVL344
 8782 22ea 46290000 		.4byte	0x2946
 8783 22ee 00       		.byte	0
 8784 22ef 2C       		.uleb128 0x2c
 8785 22f0 EE050000 		.4byte	.LASF307
 8786 22f4 01       		.byte	0x1
 8787 22f5 DE11     		.2byte	0x11de
 8788 22f7 EA070000 		.4byte	0x7ea
 8789 22fb 00000000 		.4byte	.LFB556
 8790 22ff E4000000 		.4byte	.LFE556-.LFB556
 8791 2303 01       		.uleb128 0x1
 8792 2304 9C       		.byte	0x9c
 8793 2305 FC230000 		.4byte	0x23fc
 8794 2309 1C       		.uleb128 0x1c
 8795 230a 720E0000 		.4byte	.LASF308
 8796 230e 01       		.byte	0x1
 8797 230f DE11     		.2byte	0x11de
 8798 2311 F8080000 		.4byte	0x8f8
 8799 2315 500F0000 		.4byte	.LLST103
 8800 2319 1C       		.uleb128 0x1c
 8801 231a 25110000 		.4byte	.LASF309
 8802 231e 01       		.byte	0x1
 8803 231f DE11     		.2byte	0x11de
 8804 2321 01010000 		.4byte	0x101
 8805 2325 7C0F0000 		.4byte	.LLST104
 8806 2329 1C       		.uleb128 0x1c
 8807 232a E10D0000 		.4byte	.LASF310
 8808 232e 01       		.byte	0x1
 8809 232f DE11     		.2byte	0x11de
 8810 2331 2E090000 		.4byte	0x92e
 8811 2335 C10F0000 		.4byte	.LLST105
 8812 2339 1C       		.uleb128 0x1c
 8813 233a E90C0000 		.4byte	.LASF311
 8814 233e 01       		.byte	0x1
 8815 233f DE11     		.2byte	0x11de
 8816 2341 40050000 		.4byte	0x540
 8817 2345 E20F0000 		.4byte	.LLST106
 8818 2349 1D       		.uleb128 0x1d
 8819 234a BC150000 		.4byte	.LASF209
 8820 234e 01       		.byte	0x1
 8821 234f E011     		.2byte	0x11e0
 8822 2351 640B0000 		.4byte	0xb64
 8823 2355 27100000 		.4byte	.LLST107
 8824 2359 1D       		.uleb128 0x1d
 8825 235a 5A120000 		.4byte	.LASF208
 8826 235e 01       		.byte	0x1
 8827 235f E111     		.2byte	0x11e1
 8828 2361 EA070000 		.4byte	0x7ea
 8829 2365 48100000 		.4byte	.LLST108
 8830 2369 1D       		.uleb128 0x1d
 8831 236a B2020000 		.4byte	.LASF312
 8832 236e 01       		.byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 258


 8833 236f E211     		.2byte	0x11e2
 8834 2371 D5000000 		.4byte	0xd5
 8835 2375 72100000 		.4byte	.LLST109
 8836 2379 2E       		.uleb128 0x2e
 8837 237a 660A0000 		.4byte	0xa66
 8838 237e 04000000 		.4byte	.LBB170
 8839 2382 1A000000 		.4byte	.LBE170-.LBB170
 8840 2386 01       		.byte	0x1
 8841 2387 E411     		.2byte	0x11e4
 8842 2389 9D230000 		.4byte	0x239d
 8843 238d 1F       		.uleb128 0x1f
 8844 238e 04000000 		.4byte	.LBB171
 8845 2392 1A000000 		.4byte	.LBE171-.LBB171
 8846 2396 20       		.uleb128 0x20
 8847 2397 720A0000 		.4byte	0xa72
 8848 239b 00       		.byte	0
 8849 239c 00       		.byte	0
 8850 239d 2E       		.uleb128 0x2e
 8851 239e 660A0000 		.4byte	0xa66
 8852 23a2 9E000000 		.4byte	.LBB172
 8853 23a6 12000000 		.4byte	.LBE172-.LBB172
 8854 23aa 01       		.byte	0x1
 8855 23ab 1C12     		.2byte	0x121c
 8856 23ad C1230000 		.4byte	0x23c1
 8857 23b1 1F       		.uleb128 0x1f
 8858 23b2 9E000000 		.4byte	.LBB173
 8859 23b6 12000000 		.4byte	.LBE173-.LBB173
 8860 23ba 20       		.uleb128 0x20
 8861 23bb 720A0000 		.4byte	0xa72
 8862 23bf 00       		.byte	0
 8863 23c0 00       		.byte	0
 8864 23c1 22       		.uleb128 0x22
 8865 23c2 22000000 		.4byte	.LVL351
 8866 23c6 2F290000 		.4byte	0x292f
 8867 23ca 28       		.uleb128 0x28
 8868 23cb 78000000 		.4byte	.LVL356
 8869 23cf 51290000 		.4byte	0x2951
 8870 23d3 DE230000 		.4byte	0x23de
 8871 23d7 24       		.uleb128 0x24
 8872 23d8 01       		.uleb128 0x1
 8873 23d9 50       		.byte	0x50
 8874 23da 02       		.uleb128 0x2
 8875 23db 76       		.byte	0x76
 8876 23dc 00       		.sleb128 0
 8877 23dd 00       		.byte	0
 8878 23de 28       		.uleb128 0x28
 8879 23df 9A000000 		.4byte	.LVL357
 8880 23e3 3A290000 		.4byte	0x293a
 8881 23e7 F2230000 		.4byte	0x23f2
 8882 23eb 24       		.uleb128 0x24
 8883 23ec 01       		.uleb128 0x1
 8884 23ed 51       		.byte	0x51
 8885 23ee 02       		.uleb128 0x2
 8886 23ef 76       		.byte	0x76
 8887 23f0 00       		.sleb128 0
 8888 23f1 00       		.byte	0
 8889 23f2 22       		.uleb128 0x22
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 259


 8890 23f3 D2000000 		.4byte	.LVL359
 8891 23f7 46290000 		.4byte	0x2946
 8892 23fb 00       		.byte	0
 8893 23fc 2C       		.uleb128 0x2c
 8894 23fd 1B050000 		.4byte	.LASF313
 8895 2401 01       		.byte	0x1
 8896 2402 4812     		.2byte	0x1248
 8897 2404 EA070000 		.4byte	0x7ea
 8898 2408 00000000 		.4byte	.LFB557
 8899 240c 20010000 		.4byte	.LFE557-.LFB557
 8900 2410 01       		.uleb128 0x1
 8901 2411 9C       		.byte	0x9c
 8902 2412 7C250000 		.4byte	0x257c
 8903 2416 1C       		.uleb128 0x1c
 8904 2417 720E0000 		.4byte	.LASF308
 8905 241b 01       		.byte	0x1
 8906 241c 4812     		.2byte	0x1248
 8907 241e F8080000 		.4byte	0x8f8
 8908 2422 85100000 		.4byte	.LLST110
 8909 2426 1C       		.uleb128 0x1c
 8910 2427 25110000 		.4byte	.LASF309
 8911 242b 01       		.byte	0x1
 8912 242c 4812     		.2byte	0x1248
 8913 242e 01010000 		.4byte	0x101
 8914 2432 B1100000 		.4byte	.LLST111
 8915 2436 1C       		.uleb128 0x1c
 8916 2437 E10D0000 		.4byte	.LASF310
 8917 243b 01       		.byte	0x1
 8918 243c 4812     		.2byte	0x1248
 8919 243e 2E090000 		.4byte	0x92e
 8920 2442 F6100000 		.4byte	.LLST112
 8921 2446 1C       		.uleb128 0x1c
 8922 2447 E90C0000 		.4byte	.LASF311
 8923 244b 01       		.byte	0x1
 8924 244c 4812     		.2byte	0x1248
 8925 244e 40050000 		.4byte	0x540
 8926 2452 17110000 		.4byte	.LLST113
 8927 2456 1C       		.uleb128 0x1c
 8928 2457 57010000 		.4byte	.LASF314
 8929 245b 01       		.byte	0x1
 8930 245c 4812     		.2byte	0x1248
 8931 245e 7C250000 		.4byte	0x257c
 8932 2462 5C110000 		.4byte	.LLST114
 8933 2466 1D       		.uleb128 0x1d
 8934 2467 BC150000 		.4byte	.LASF209
 8935 246b 01       		.byte	0x1
 8936 246c 4A12     		.2byte	0x124a
 8937 246e 640B0000 		.4byte	0xb64
 8938 2472 7C110000 		.4byte	.LLST115
 8939 2476 1D       		.uleb128 0x1d
 8940 2477 B2020000 		.4byte	.LASF312
 8941 247b 01       		.byte	0x1
 8942 247c 4B12     		.2byte	0x124b
 8943 247e D5000000 		.4byte	0xd5
 8944 2482 9D110000 		.4byte	.LLST116
 8945 2486 1D       		.uleb128 0x1d
 8946 2487 5A120000 		.4byte	.LASF208
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 260


 8947 248b 01       		.byte	0x1
 8948 248c 4C12     		.2byte	0x124c
 8949 248e EA070000 		.4byte	0x7ea
 8950 2492 B0110000 		.4byte	.LLST117
 8951 2496 2F       		.uleb128 0x2f
 8952 2497 EC160000 		.4byte	.LASF247
 8953 249b 01       		.byte	0x1
 8954 249c 4D12     		.2byte	0x124d
 8955 249e F5070000 		.4byte	0x7f5
 8956 24a2 2E       		.uleb128 0x2e
 8957 24a3 660A0000 		.4byte	0xa66
 8958 24a7 08000000 		.4byte	.LBB174
 8959 24ab 1A000000 		.4byte	.LBE174-.LBB174
 8960 24af 01       		.byte	0x1
 8961 24b0 4F12     		.2byte	0x124f
 8962 24b2 C6240000 		.4byte	0x24c6
 8963 24b6 1F       		.uleb128 0x1f
 8964 24b7 08000000 		.4byte	.LBB175
 8965 24bb 1A000000 		.4byte	.LBE175-.LBB175
 8966 24bf 20       		.uleb128 0x20
 8967 24c0 720A0000 		.4byte	0xa72
 8968 24c4 00       		.byte	0
 8969 24c5 00       		.byte	0
 8970 24c6 2E       		.uleb128 0x2e
 8971 24c7 7E0A0000 		.4byte	0xa7e
 8972 24cb 26000000 		.4byte	.LBB176
 8973 24cf 14000000 		.4byte	.LBE176-.LBB176
 8974 24d3 01       		.byte	0x1
 8975 24d4 6512     		.2byte	0x1265
 8976 24d6 EF240000 		.4byte	0x24ef
 8977 24da 1F       		.uleb128 0x1f
 8978 24db 26000000 		.4byte	.LBB177
 8979 24df 14000000 		.4byte	.LBE177-.LBB177
 8980 24e3 20       		.uleb128 0x20
 8981 24e4 8E0A0000 		.4byte	0xa8e
 8982 24e8 20       		.uleb128 0x20
 8983 24e9 990A0000 		.4byte	0xa99
 8984 24ed 00       		.byte	0
 8985 24ee 00       		.byte	0
 8986 24ef 2E       		.uleb128 0x2e
 8987 24f0 660A0000 		.4byte	0xa66
 8988 24f4 98000000 		.4byte	.LBB178
 8989 24f8 12000000 		.4byte	.LBE178-.LBB178
 8990 24fc 01       		.byte	0x1
 8991 24fd 9612     		.2byte	0x1296
 8992 24ff 13250000 		.4byte	0x2513
 8993 2503 1F       		.uleb128 0x1f
 8994 2504 98000000 		.4byte	.LBB179
 8995 2508 12000000 		.4byte	.LBE179-.LBB179
 8996 250c 20       		.uleb128 0x20
 8997 250d 720A0000 		.4byte	0xa72
 8998 2511 00       		.byte	0
 8999 2512 00       		.byte	0
 9000 2513 2E       		.uleb128 0x2e
 9001 2514 A50A0000 		.4byte	0xaa5
 9002 2518 08010000 		.4byte	.LBB180
 9003 251c 04000000 		.4byte	.LBE180-.LBB180
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 261


 9004 2520 01       		.byte	0x1
 9005 2521 BA12     		.2byte	0x12ba
 9006 2523 31250000 		.4byte	0x2531
 9007 2527 30       		.uleb128 0x30
 9008 2528 B10A0000 		.4byte	0xab1
 9009 252c DA110000 		.4byte	.LLST118
 9010 2530 00       		.byte	0
 9011 2531 22       		.uleb128 0x22
 9012 2532 26000000 		.4byte	.LVL365
 9013 2536 80290000 		.4byte	0x2980
 9014 253a 28       		.uleb128 0x28
 9015 253b BC000000 		.4byte	.LVL371
 9016 253f 51290000 		.4byte	0x2951
 9017 2543 4E250000 		.4byte	0x254e
 9018 2547 24       		.uleb128 0x24
 9019 2548 01       		.uleb128 0x1
 9020 2549 50       		.byte	0x50
 9021 254a 02       		.uleb128 0x2
 9022 254b 78       		.byte	0x78
 9023 254c 00       		.sleb128 0
 9024 254d 00       		.byte	0
 9025 254e 28       		.uleb128 0x28
 9026 254f DE000000 		.4byte	.LVL372
 9027 2553 3A290000 		.4byte	0x293a
 9028 2557 62250000 		.4byte	0x2562
 9029 255b 24       		.uleb128 0x24
 9030 255c 01       		.uleb128 0x1
 9031 255d 51       		.byte	0x51
 9032 255e 02       		.uleb128 0x2
 9033 255f 78       		.byte	0x78
 9034 2560 00       		.sleb128 0
 9035 2561 00       		.byte	0
 9036 2562 23       		.uleb128 0x23
 9037 2563 EA000000 		.4byte	.LVL374
 9038 2567 3A290000 		.4byte	0x293a
 9039 256b 24       		.uleb128 0x24
 9040 256c 01       		.uleb128 0x1
 9041 256d 50       		.byte	0x50
 9042 256e 05       		.uleb128 0x5
 9043 256f 03       		.byte	0x3
 9044 2570 14000000 		.4byte	.LANCHOR0+20
 9045 2574 24       		.uleb128 0x24
 9046 2575 01       		.uleb128 0x1
 9047 2576 51       		.byte	0x51
 9048 2577 02       		.uleb128 0x2
 9049 2578 74       		.byte	0x74
 9050 2579 18       		.sleb128 24
 9051 257a 00       		.byte	0
 9052 257b 00       		.byte	0
 9053 257c 06       		.uleb128 0x6
 9054 257d 04       		.byte	0x4
 9055 257e EA070000 		.4byte	0x7ea
 9056 2582 2D       		.uleb128 0x2d
 9057 2583 85100000 		.4byte	.LASF315
 9058 2587 01       		.byte	0x1
 9059 2588 C412     		.2byte	0x12c4
 9060 258a 00000000 		.4byte	.LFB558
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 262


 9061 258e CC000000 		.4byte	.LFE558-.LFB558
 9062 2592 01       		.uleb128 0x1
 9063 2593 9C       		.byte	0x9c
 9064 2594 BE260000 		.4byte	0x26be
 9065 2598 1C       		.uleb128 0x1c
 9066 2599 720E0000 		.4byte	.LASF308
 9067 259d 01       		.byte	0x1
 9068 259e C412     		.2byte	0x12c4
 9069 25a0 F8080000 		.4byte	0x8f8
 9070 25a4 ED110000 		.4byte	.LLST119
 9071 25a8 1C       		.uleb128 0x1c
 9072 25a9 57010000 		.4byte	.LASF314
 9073 25ad 01       		.byte	0x1
 9074 25ae C412     		.2byte	0x12c4
 9075 25b0 7C250000 		.4byte	0x257c
 9076 25b4 19120000 		.4byte	.LLST120
 9077 25b8 1D       		.uleb128 0x1d
 9078 25b9 BC150000 		.4byte	.LASF209
 9079 25bd 01       		.byte	0x1
 9080 25be C612     		.2byte	0x12c6
 9081 25c0 640B0000 		.4byte	0xb64
 9082 25c4 45120000 		.4byte	.LLST121
 9083 25c8 1D       		.uleb128 0x1d
 9084 25c9 B2020000 		.4byte	.LASF312
 9085 25cd 01       		.byte	0x1
 9086 25ce C712     		.2byte	0x12c7
 9087 25d0 D5000000 		.4byte	0xd5
 9088 25d4 66120000 		.4byte	.LLST122
 9089 25d8 2F       		.uleb128 0x2f
 9090 25d9 EC160000 		.4byte	.LASF247
 9091 25dd 01       		.byte	0x1
 9092 25de C812     		.2byte	0x12c8
 9093 25e0 F5070000 		.4byte	0x7f5
 9094 25e4 2E       		.uleb128 0x2e
 9095 25e5 660A0000 		.4byte	0xa66
 9096 25e9 04000000 		.4byte	.LBB182
 9097 25ed 16000000 		.4byte	.LBE182-.LBB182
 9098 25f1 01       		.byte	0x1
 9099 25f2 CA12     		.2byte	0x12ca
 9100 25f4 08260000 		.4byte	0x2608
 9101 25f8 1F       		.uleb128 0x1f
 9102 25f9 04000000 		.4byte	.LBB183
 9103 25fd 16000000 		.4byte	.LBE183-.LBB183
 9104 2601 20       		.uleb128 0x20
 9105 2602 720A0000 		.4byte	0xa72
 9106 2606 00       		.byte	0
 9107 2607 00       		.byte	0
 9108 2608 2E       		.uleb128 0x2e
 9109 2609 7E0A0000 		.4byte	0xa7e
 9110 260d 1E000000 		.4byte	.LBB184
 9111 2611 14000000 		.4byte	.LBE184-.LBB184
 9112 2615 01       		.byte	0x1
 9113 2616 E012     		.2byte	0x12e0
 9114 2618 31260000 		.4byte	0x2631
 9115 261c 1F       		.uleb128 0x1f
 9116 261d 1E000000 		.4byte	.LBB185
 9117 2621 14000000 		.4byte	.LBE185-.LBB185
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 263


 9118 2625 20       		.uleb128 0x20
 9119 2626 8E0A0000 		.4byte	0xa8e
 9120 262a 20       		.uleb128 0x20
 9121 262b 990A0000 		.4byte	0xa99
 9122 262f 00       		.byte	0
 9123 2630 00       		.byte	0
 9124 2631 2E       		.uleb128 0x2e
 9125 2632 660A0000 		.4byte	0xa66
 9126 2636 4C000000 		.4byte	.LBB186
 9127 263a 12000000 		.4byte	.LBE186-.LBB186
 9128 263e 01       		.byte	0x1
 9129 263f F012     		.2byte	0x12f0
 9130 2641 55260000 		.4byte	0x2655
 9131 2645 1F       		.uleb128 0x1f
 9132 2646 4C000000 		.4byte	.LBB187
 9133 264a 12000000 		.4byte	.LBE187-.LBB187
 9134 264e 20       		.uleb128 0x20
 9135 264f 720A0000 		.4byte	0xa72
 9136 2653 00       		.byte	0
 9137 2654 00       		.byte	0
 9138 2655 2E       		.uleb128 0x2e
 9139 2656 A50A0000 		.4byte	0xaa5
 9140 265a BA000000 		.4byte	.LBB188
 9141 265e 12000000 		.4byte	.LBE188-.LBB188
 9142 2662 01       		.byte	0x1
 9143 2663 1413     		.2byte	0x1314
 9144 2665 73260000 		.4byte	0x2673
 9145 2669 30       		.uleb128 0x30
 9146 266a B10A0000 		.4byte	0xab1
 9147 266e 79120000 		.4byte	.LLST123
 9148 2672 00       		.byte	0
 9149 2673 22       		.uleb128 0x22
 9150 2674 1E000000 		.4byte	.LVL380
 9151 2678 80290000 		.4byte	0x2980
 9152 267c 28       		.uleb128 0x28
 9153 267d 6E000000 		.4byte	.LVL384
 9154 2681 51290000 		.4byte	0x2951
 9155 2685 90260000 		.4byte	0x2690
 9156 2689 24       		.uleb128 0x24
 9157 268a 01       		.uleb128 0x1
 9158 268b 50       		.byte	0x50
 9159 268c 02       		.uleb128 0x2
 9160 268d 77       		.byte	0x77
 9161 268e 00       		.sleb128 0
 9162 268f 00       		.byte	0
 9163 2690 28       		.uleb128 0x28
 9164 2691 90000000 		.4byte	.LVL385
 9165 2695 3A290000 		.4byte	0x293a
 9166 2699 A4260000 		.4byte	0x26a4
 9167 269d 24       		.uleb128 0x24
 9168 269e 01       		.uleb128 0x1
 9169 269f 51       		.byte	0x51
 9170 26a0 02       		.uleb128 0x2
 9171 26a1 77       		.byte	0x77
 9172 26a2 00       		.sleb128 0
 9173 26a3 00       		.byte	0
 9174 26a4 23       		.uleb128 0x23
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 264


 9175 26a5 9C000000 		.4byte	.LVL386
 9176 26a9 3A290000 		.4byte	0x293a
 9177 26ad 24       		.uleb128 0x24
 9178 26ae 01       		.uleb128 0x1
 9179 26af 50       		.byte	0x50
 9180 26b0 05       		.uleb128 0x5
 9181 26b1 03       		.byte	0x3
 9182 26b2 14000000 		.4byte	.LANCHOR0+20
 9183 26b6 24       		.uleb128 0x24
 9184 26b7 01       		.uleb128 0x1
 9185 26b8 51       		.byte	0x51
 9186 26b9 02       		.uleb128 0x2
 9187 26ba 74       		.byte	0x74
 9188 26bb 18       		.sleb128 24
 9189 26bc 00       		.byte	0
 9190 26bd 00       		.byte	0
 9191 26be 2C       		.uleb128 0x2c
 9192 26bf A6150000 		.4byte	.LASF316
 9193 26c3 01       		.byte	0x1
 9194 26c4 1D13     		.2byte	0x131d
 9195 26c6 EA070000 		.4byte	0x7ea
 9196 26ca 00000000 		.4byte	.LFB559
 9197 26ce 34000000 		.4byte	.LFE559-.LFB559
 9198 26d2 01       		.uleb128 0x1
 9199 26d3 9C       		.byte	0x9c
 9200 26d4 1B270000 		.4byte	0x271b
 9201 26d8 1C       		.uleb128 0x1c
 9202 26d9 800E0000 		.4byte	.LASF212
 9203 26dd 01       		.byte	0x1
 9204 26de 1D13     		.2byte	0x131d
 9205 26e0 F8080000 		.4byte	0x8f8
 9206 26e4 8C120000 		.4byte	.LLST124
 9207 26e8 1D       		.uleb128 0x1d
 9208 26e9 BC150000 		.4byte	.LASF209
 9209 26ed 01       		.byte	0x1
 9210 26ee 1F13     		.2byte	0x131f
 9211 26f0 640B0000 		.4byte	0xb64
 9212 26f4 9F120000 		.4byte	.LLST125
 9213 26f8 1D       		.uleb128 0x1d
 9214 26f9 5A120000 		.4byte	.LASF208
 9215 26fd 01       		.byte	0x1
 9216 26fe 2013     		.2byte	0x1320
 9217 2700 EA070000 		.4byte	0x7ea
 9218 2704 BD120000 		.4byte	.LLST126
 9219 2708 22       		.uleb128 0x22
 9220 2709 10000000 		.4byte	.LVL392
 9221 270d 2F290000 		.4byte	0x292f
 9222 2711 22       		.uleb128 0x22
 9223 2712 2A000000 		.4byte	.LVL397
 9224 2716 46290000 		.4byte	0x2946
 9225 271a 00       		.byte	0
 9226 271b 13       		.uleb128 0x13
 9227 271c ED080000 		.4byte	0x8ed
 9228 2720 2B270000 		.4byte	0x272b
 9229 2724 14       		.uleb128 0x14
 9230 2725 B4000000 		.4byte	0xb4
 9231 2729 13       		.byte	0x13
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 265


 9232 272a 00       		.byte	0
 9233 272b 26       		.uleb128 0x26
 9234 272c 47020000 		.4byte	.LASF317
 9235 2730 01       		.byte	0x1
 9236 2731 5F01     		.2byte	0x15f
 9237 2733 1B270000 		.4byte	0x271b
 9238 2737 05       		.uleb128 0x5
 9239 2738 03       		.byte	0x3
 9240 2739 30000000 		.4byte	pxReadyTasksLists
 9241 273d 26       		.uleb128 0x26
 9242 273e 87010000 		.4byte	.LASF318
 9243 2742 01       		.byte	0x1
 9244 2743 6001     		.2byte	0x160
 9245 2745 ED080000 		.4byte	0x8ed
 9246 2749 05       		.uleb128 0x5
 9247 274a 03       		.byte	0x3
 9248 274b C0010000 		.4byte	xDelayedTaskList1
 9249 274f 26       		.uleb128 0x26
 9250 2750 39030000 		.4byte	.LASF319
 9251 2754 01       		.byte	0x1
 9252 2755 6101     		.2byte	0x161
 9253 2757 ED080000 		.4byte	0x8ed
 9254 275b 05       		.uleb128 0x5
 9255 275c 03       		.byte	0x3
 9256 275d D4010000 		.4byte	xDelayedTaskList2
 9257 2761 26       		.uleb128 0x26
 9258 2762 9C100000 		.4byte	.LASF320
 9259 2766 01       		.byte	0x1
 9260 2767 6201     		.2byte	0x162
 9261 2769 73270000 		.4byte	0x2773
 9262 276d 05       		.uleb128 0x5
 9263 276e 03       		.byte	0x3
 9264 276f 28000000 		.4byte	pxDelayedTaskList
 9265 2773 08       		.uleb128 0x8
 9266 2774 B1170000 		.4byte	0x17b1
 9267 2778 26       		.uleb128 0x26
 9268 2779 0B090000 		.4byte	.LASF321
 9269 277d 01       		.byte	0x1
 9270 277e 6301     		.2byte	0x163
 9271 2780 73270000 		.4byte	0x2773
 9272 2784 05       		.uleb128 0x5
 9273 2785 03       		.byte	0x3
 9274 2786 FC010000 		.4byte	pxOverflowDelayedTaskList
 9275 278a 26       		.uleb128 0x26
 9276 278b 1E070000 		.4byte	.LASF322
 9277 278f 01       		.byte	0x1
 9278 2790 6401     		.2byte	0x164
 9279 2792 ED080000 		.4byte	0x8ed
 9280 2796 05       		.uleb128 0x5
 9281 2797 03       		.byte	0x3
 9282 2798 14000000 		.4byte	xPendingReadyList
 9283 279c 26       		.uleb128 0x26
 9284 279d 3B070000 		.4byte	.LASF323
 9285 27a1 01       		.byte	0x1
 9286 27a2 6801     		.2byte	0x168
 9287 27a4 ED080000 		.4byte	0x8ed
 9288 27a8 05       		.uleb128 0x5
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 266


 9289 27a9 03       		.byte	0x3
 9290 27aa E8010000 		.4byte	xTasksWaitingTermination
 9291 27ae 26       		.uleb128 0x26
 9292 27af 15020000 		.4byte	.LASF324
 9293 27b3 01       		.byte	0x1
 9294 27b4 6901     		.2byte	0x169
 9295 27b6 E2080000 		.4byte	0x8e2
 9296 27ba 05       		.uleb128 0x5
 9297 27bb 03       		.byte	0x3
 9298 27bc 14020000 		.4byte	uxDeletedTasksWaitingCleanUp
 9299 27c0 26       		.uleb128 0x26
 9300 27c1 E6080000 		.4byte	.LASF325
 9301 27c5 01       		.byte	0x1
 9302 27c6 6F01     		.2byte	0x16f
 9303 27c8 ED080000 		.4byte	0x8ed
 9304 27cc 05       		.uleb128 0x5
 9305 27cd 03       		.byte	0x3
 9306 27ce 00000000 		.4byte	xSuspendedTaskList
 9307 27d2 26       		.uleb128 0x26
 9308 27d3 4F150000 		.4byte	.LASF326
 9309 27d7 01       		.byte	0x1
 9310 27d8 7401     		.2byte	0x174
 9311 27da E2080000 		.4byte	0x8e2
 9312 27de 05       		.uleb128 0x5
 9313 27df 03       		.byte	0x3
 9314 27e0 00020000 		.4byte	uxCurrentNumberOfTasks
 9315 27e4 26       		.uleb128 0x26
 9316 27e5 65080000 		.4byte	.LASF327
 9317 27e9 01       		.byte	0x1
 9318 27ea 7501     		.2byte	0x175
 9319 27ec F6270000 		.4byte	0x27f6
 9320 27f0 05       		.uleb128 0x5
 9321 27f1 03       		.byte	0x3
 9322 27f2 18020000 		.4byte	xTickCount
 9323 27f6 08       		.uleb128 0x8
 9324 27f7 00080000 		.4byte	0x800
 9325 27fb 26       		.uleb128 0x26
 9326 27fc 6D110000 		.4byte	.LASF328
 9327 2800 01       		.byte	0x1
 9328 2801 7601     		.2byte	0x176
 9329 2803 E2080000 		.4byte	0x8e2
 9330 2807 05       		.uleb128 0x5
 9331 2808 03       		.byte	0x3
 9332 2809 10020000 		.4byte	uxTopReadyPriority
 9333 280d 26       		.uleb128 0x26
 9334 280e 7A000000 		.4byte	.LASF329
 9335 2812 01       		.byte	0x1
 9336 2813 7701     		.2byte	0x177
 9337 2815 1F280000 		.4byte	0x281f
 9338 2819 05       		.uleb128 0x5
 9339 281a 03       		.byte	0x3
 9340 281b 08020000 		.4byte	xSchedulerRunning
 9341 281f 08       		.uleb128 0x8
 9342 2820 EA070000 		.4byte	0x7ea
 9343 2824 26       		.uleb128 0x26
 9344 2825 80120000 		.4byte	.LASF330
 9345 2829 01       		.byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 267


 9346 282a 7801     		.2byte	0x178
 9347 282c E2080000 		.4byte	0x8e2
 9348 2830 05       		.uleb128 0x5
 9349 2831 03       		.byte	0x3
 9350 2832 28020000 		.4byte	uxPendedTicks
 9351 2836 26       		.uleb128 0x26
 9352 2837 69170000 		.4byte	.LASF331
 9353 283b 01       		.byte	0x1
 9354 283c 7901     		.2byte	0x179
 9355 283e 1F280000 		.4byte	0x281f
 9356 2842 05       		.uleb128 0x5
 9357 2843 03       		.byte	0x3
 9358 2844 2C020000 		.4byte	xYieldPending
 9359 2848 26       		.uleb128 0x26
 9360 2849 330F0000 		.4byte	.LASF332
 9361 284d 01       		.byte	0x1
 9362 284e 7A01     		.2byte	0x17a
 9363 2850 1F280000 		.4byte	0x281f
 9364 2854 05       		.uleb128 0x5
 9365 2855 03       		.byte	0x3
 9366 2856 24020000 		.4byte	xNumOfOverflows
 9367 285a 26       		.uleb128 0x26
 9368 285b B20D0000 		.4byte	.LASF333
 9369 285f 01       		.byte	0x1
 9370 2860 7B01     		.2byte	0x17b
 9371 2862 F5070000 		.4byte	0x7f5
 9372 2866 05       		.uleb128 0x5
 9373 2867 03       		.byte	0x3
 9374 2868 0C020000 		.4byte	uxTaskNumber
 9375 286c 26       		.uleb128 0x26
 9376 286d 830B0000 		.4byte	.LASF334
 9377 2871 01       		.byte	0x1
 9378 2872 7C01     		.2byte	0x17c
 9379 2874 F6270000 		.4byte	0x27f6
 9380 2878 05       		.uleb128 0x5
 9381 2879 03       		.byte	0x3
 9382 287a 2C000000 		.4byte	xNextTaskUnblockTime
 9383 287e 26       		.uleb128 0x26
 9384 287f CA110000 		.4byte	.LASF335
 9385 2883 01       		.byte	0x1
 9386 2884 7D01     		.2byte	0x17d
 9387 2886 F8080000 		.4byte	0x8f8
 9388 288a 05       		.uleb128 0x5
 9389 288b 03       		.byte	0x3
 9390 288c 20020000 		.4byte	xIdleTaskHandle
 9391 2890 26       		.uleb128 0x26
 9392 2891 34160000 		.4byte	.LASF336
 9393 2895 01       		.byte	0x1
 9394 2896 8701     		.2byte	0x187
 9395 2898 E2080000 		.4byte	0x8e2
 9396 289c 05       		.uleb128 0x5
 9397 289d 03       		.byte	0x3
 9398 289e 1C020000 		.4byte	uxSchedulerSuspended
 9399 28a2 37       		.uleb128 0x37
 9400 28a3 36000000 		.4byte	.LASF337
 9401 28a7 06       		.byte	0x6
 9402 28a8 A7       		.byte	0xa7
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 268


 9403 28a9 AD280000 		.4byte	0x28ad
 9404 28ad 06       		.uleb128 0x6
 9405 28ae 04       		.byte	0x4
 9406 28af B3280000 		.4byte	0x28b3
 9407 28b3 07       		.uleb128 0x7
 9408 28b4 27050000 		.4byte	0x527
 9409 28b8 38       		.uleb128 0x38
 9410 28b9 5D100000 		.4byte	.LASF338
 9411 28bd 0C       		.byte	0xc
 9412 28be 0108     		.2byte	0x801
 9413 28c0 C4280000 		.4byte	0x28c4
 9414 28c4 08       		.uleb128 0x8
 9415 28c5 F6000000 		.4byte	0xf6
 9416 28c9 37       		.uleb128 0x37
 9417 28ca 860E0000 		.4byte	.LASF339
 9418 28ce 0D       		.byte	0xd
 9419 28cf 87       		.byte	0x87
 9420 28d0 B7070000 		.4byte	0x7b7
 9421 28d4 37       		.uleb128 0x37
 9422 28d5 0A160000 		.4byte	.LASF340
 9423 28d9 0E       		.byte	0xe
 9424 28da 7F       		.byte	0x7f
 9425 28db DB060000 		.4byte	0x6db
 9426 28df 39       		.uleb128 0x39
 9427 28e0 7D0F0000 		.4byte	.LASF341
 9428 28e4 01       		.byte	0x1
 9429 28e5 5C01     		.2byte	0x15c
 9430 28e7 F1280000 		.4byte	0x28f1
 9431 28eb 05       		.uleb128 0x5
 9432 28ec 03       		.byte	0x3
 9433 28ed 00000000 		.4byte	pxCurrentTCB
 9434 28f1 08       		.uleb128 0x8
 9435 28f2 640B0000 		.4byte	0xb64
 9436 28f6 3A       		.uleb128 0x3a
 9437 28f7 63110000 		.4byte	.LASF342
 9438 28fb 63110000 		.4byte	.LASF342
 9439 28ff 0F       		.byte	0xf
 9440 2900 82       		.byte	0x82
 9441 2901 3A       		.uleb128 0x3a
 9442 2902 060D0000 		.4byte	.LASF343
 9443 2906 060D0000 		.4byte	.LASF343
 9444 290a 10       		.byte	0x10
 9445 290b 19       		.byte	0x19
 9446 290c 3B       		.uleb128 0x3b
 9447 290d 06100000 		.4byte	.LASF344
 9448 2911 06100000 		.4byte	.LASF344
 9449 2915 0A       		.byte	0xa
 9450 2916 6301     		.2byte	0x163
 9451 2918 3A       		.uleb128 0x3a
 9452 2919 CA0B0000 		.4byte	.LASF345
 9453 291d CA0B0000 		.4byte	.LASF345
 9454 2921 0F       		.byte	0xf
 9455 2922 66       		.byte	0x66
 9456 2923 3B       		.uleb128 0x3b
 9457 2924 B1130000 		.4byte	.LASF346
 9458 2928 B1130000 		.4byte	.LASF346
 9459 292c 0A       		.byte	0xa
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 269


 9460 292d 5801     		.2byte	0x158
 9461 292f 3A       		.uleb128 0x3a
 9462 2930 69030000 		.4byte	.LASF347
 9463 2934 69030000 		.4byte	.LASF347
 9464 2938 02       		.byte	0x2
 9465 2939 61       		.byte	0x61
 9466 293a 3B       		.uleb128 0x3b
 9467 293b D7080000 		.4byte	.LASF348
 9468 293f D7080000 		.4byte	.LASF348
 9469 2943 0A       		.byte	0xa
 9470 2944 8501     		.2byte	0x185
 9471 2946 3A       		.uleb128 0x3a
 9472 2947 24000000 		.4byte	.LASF349
 9473 294b 24000000 		.4byte	.LASF349
 9474 294f 02       		.byte	0x2
 9475 2950 62       		.byte	0x62
 9476 2951 3B       		.uleb128 0x3b
 9477 2952 41050000 		.4byte	.LASF350
 9478 2956 41050000 		.4byte	.LASF350
 9479 295a 0A       		.byte	0xa
 9480 295b 9401     		.2byte	0x194
 9481 295d 3B       		.uleb128 0x3b
 9482 295e E0130000 		.4byte	.LASF351
 9483 2962 E0130000 		.4byte	.LASF351
 9484 2966 0A       		.byte	0xa
 9485 2967 7001     		.2byte	0x170
 9486 2969 3B       		.uleb128 0x3b
 9487 296a BF0D0000 		.4byte	.LASF352
 9488 296e BF0D0000 		.4byte	.LASF352
 9489 2972 01       		.byte	0x1
 9490 2973 D80C     		.2byte	0xcd8
 9491 2975 3A       		.uleb128 0x3a
 9492 2976 8E070000 		.4byte	.LASF353
 9493 297a 8E070000 		.4byte	.LASF353
 9494 297e 0F       		.byte	0xf
 9495 297f 81       		.byte	0x81
 9496 2980 3A       		.uleb128 0x3a
 9497 2981 C1130000 		.4byte	.LASF354
 9498 2985 C1130000 		.4byte	.LASF354
 9499 2989 02       		.byte	0x2
 9500 298a 75       		.byte	0x75
 9501 298b 3B       		.uleb128 0x3b
 9502 298c DF040000 		.4byte	.LASF355
 9503 2990 DF040000 		.4byte	.LASF355
 9504 2994 11       		.byte	0x11
 9505 2995 EF04     		.2byte	0x4ef
 9506 2997 3A       		.uleb128 0x3a
 9507 2998 8C000000 		.4byte	.LASF356
 9508 299c 8C000000 		.4byte	.LASF356
 9509 29a0 0F       		.byte	0xf
 9510 29a1 8B       		.byte	0x8b
 9511 29a2 3A       		.uleb128 0x3a
 9512 29a3 51110000 		.4byte	.LASF357
 9513 29a7 51110000 		.4byte	.LASF357
 9514 29ab 0F       		.byte	0xf
 9515 29ac 92       		.byte	0x92
 9516 29ad 3B       		.uleb128 0x3b
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 270


 9517 29ae CB0F0000 		.4byte	.LASF358
 9518 29b2 CB0F0000 		.4byte	.LASF358
 9519 29b6 01       		.byte	0x1
 9520 29b7 9701     		.2byte	0x197
 9521 29b9 00       		.byte	0
 9522              		.section	.debug_abbrev,"",%progbits
 9523              	.Ldebug_abbrev0:
 9524 0000 01       		.uleb128 0x1
 9525 0001 11       		.uleb128 0x11
 9526 0002 01       		.byte	0x1
 9527 0003 25       		.uleb128 0x25
 9528 0004 0E       		.uleb128 0xe
 9529 0005 13       		.uleb128 0x13
 9530 0006 0B       		.uleb128 0xb
 9531 0007 03       		.uleb128 0x3
 9532 0008 0E       		.uleb128 0xe
 9533 0009 1B       		.uleb128 0x1b
 9534 000a 0E       		.uleb128 0xe
 9535 000b 55       		.uleb128 0x55
 9536 000c 17       		.uleb128 0x17
 9537 000d 11       		.uleb128 0x11
 9538 000e 01       		.uleb128 0x1
 9539 000f 10       		.uleb128 0x10
 9540 0010 17       		.uleb128 0x17
 9541 0011 00       		.byte	0
 9542 0012 00       		.byte	0
 9543 0013 02       		.uleb128 0x2
 9544 0014 16       		.uleb128 0x16
 9545 0015 00       		.byte	0
 9546 0016 03       		.uleb128 0x3
 9547 0017 0E       		.uleb128 0xe
 9548 0018 3A       		.uleb128 0x3a
 9549 0019 0B       		.uleb128 0xb
 9550 001a 3B       		.uleb128 0x3b
 9551 001b 0B       		.uleb128 0xb
 9552 001c 49       		.uleb128 0x49
 9553 001d 13       		.uleb128 0x13
 9554 001e 00       		.byte	0
 9555 001f 00       		.byte	0
 9556 0020 03       		.uleb128 0x3
 9557 0021 24       		.uleb128 0x24
 9558 0022 00       		.byte	0
 9559 0023 0B       		.uleb128 0xb
 9560 0024 0B       		.uleb128 0xb
 9561 0025 3E       		.uleb128 0x3e
 9562 0026 0B       		.uleb128 0xb
 9563 0027 03       		.uleb128 0x3
 9564 0028 0E       		.uleb128 0xe
 9565 0029 00       		.byte	0
 9566 002a 00       		.byte	0
 9567 002b 04       		.uleb128 0x4
 9568 002c 24       		.uleb128 0x24
 9569 002d 00       		.byte	0
 9570 002e 0B       		.uleb128 0xb
 9571 002f 0B       		.uleb128 0xb
 9572 0030 3E       		.uleb128 0x3e
 9573 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 271


 9574 0032 03       		.uleb128 0x3
 9575 0033 08       		.uleb128 0x8
 9576 0034 00       		.byte	0
 9577 0035 00       		.byte	0
 9578 0036 05       		.uleb128 0x5
 9579 0037 0F       		.uleb128 0xf
 9580 0038 00       		.byte	0
 9581 0039 0B       		.uleb128 0xb
 9582 003a 0B       		.uleb128 0xb
 9583 003b 00       		.byte	0
 9584 003c 00       		.byte	0
 9585 003d 06       		.uleb128 0x6
 9586 003e 0F       		.uleb128 0xf
 9587 003f 00       		.byte	0
 9588 0040 0B       		.uleb128 0xb
 9589 0041 0B       		.uleb128 0xb
 9590 0042 49       		.uleb128 0x49
 9591 0043 13       		.uleb128 0x13
 9592 0044 00       		.byte	0
 9593 0045 00       		.byte	0
 9594 0046 07       		.uleb128 0x7
 9595 0047 26       		.uleb128 0x26
 9596 0048 00       		.byte	0
 9597 0049 49       		.uleb128 0x49
 9598 004a 13       		.uleb128 0x13
 9599 004b 00       		.byte	0
 9600 004c 00       		.byte	0
 9601 004d 08       		.uleb128 0x8
 9602 004e 35       		.uleb128 0x35
 9603 004f 00       		.byte	0
 9604 0050 49       		.uleb128 0x49
 9605 0051 13       		.uleb128 0x13
 9606 0052 00       		.byte	0
 9607 0053 00       		.byte	0
 9608 0054 09       		.uleb128 0x9
 9609 0055 13       		.uleb128 0x13
 9610 0056 01       		.byte	0x1
 9611 0057 0B       		.uleb128 0xb
 9612 0058 0B       		.uleb128 0xb
 9613 0059 3A       		.uleb128 0x3a
 9614 005a 0B       		.uleb128 0xb
 9615 005b 3B       		.uleb128 0x3b
 9616 005c 0B       		.uleb128 0xb
 9617 005d 01       		.uleb128 0x1
 9618 005e 13       		.uleb128 0x13
 9619 005f 00       		.byte	0
 9620 0060 00       		.byte	0
 9621 0061 0A       		.uleb128 0xa
 9622 0062 0D       		.uleb128 0xd
 9623 0063 00       		.byte	0
 9624 0064 03       		.uleb128 0x3
 9625 0065 0E       		.uleb128 0xe
 9626 0066 3A       		.uleb128 0x3a
 9627 0067 0B       		.uleb128 0xb
 9628 0068 3B       		.uleb128 0x3b
 9629 0069 0B       		.uleb128 0xb
 9630 006a 49       		.uleb128 0x49
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 272


 9631 006b 13       		.uleb128 0x13
 9632 006c 38       		.uleb128 0x38
 9633 006d 0B       		.uleb128 0xb
 9634 006e 00       		.byte	0
 9635 006f 00       		.byte	0
 9636 0070 0B       		.uleb128 0xb
 9637 0071 04       		.uleb128 0x4
 9638 0072 01       		.byte	0x1
 9639 0073 0B       		.uleb128 0xb
 9640 0074 0B       		.uleb128 0xb
 9641 0075 49       		.uleb128 0x49
 9642 0076 13       		.uleb128 0x13
 9643 0077 3A       		.uleb128 0x3a
 9644 0078 0B       		.uleb128 0xb
 9645 0079 3B       		.uleb128 0x3b
 9646 007a 05       		.uleb128 0x5
 9647 007b 01       		.uleb128 0x1
 9648 007c 13       		.uleb128 0x13
 9649 007d 00       		.byte	0
 9650 007e 00       		.byte	0
 9651 007f 0C       		.uleb128 0xc
 9652 0080 28       		.uleb128 0x28
 9653 0081 00       		.byte	0
 9654 0082 03       		.uleb128 0x3
 9655 0083 0E       		.uleb128 0xe
 9656 0084 1C       		.uleb128 0x1c
 9657 0085 0B       		.uleb128 0xb
 9658 0086 00       		.byte	0
 9659 0087 00       		.byte	0
 9660 0088 0D       		.uleb128 0xd
 9661 0089 16       		.uleb128 0x16
 9662 008a 00       		.byte	0
 9663 008b 03       		.uleb128 0x3
 9664 008c 0E       		.uleb128 0xe
 9665 008d 3A       		.uleb128 0x3a
 9666 008e 0B       		.uleb128 0xb
 9667 008f 3B       		.uleb128 0x3b
 9668 0090 05       		.uleb128 0x5
 9669 0091 49       		.uleb128 0x49
 9670 0092 13       		.uleb128 0x13
 9671 0093 00       		.byte	0
 9672 0094 00       		.byte	0
 9673 0095 0E       		.uleb128 0xe
 9674 0096 15       		.uleb128 0x15
 9675 0097 01       		.byte	0x1
 9676 0098 27       		.uleb128 0x27
 9677 0099 19       		.uleb128 0x19
 9678 009a 01       		.uleb128 0x1
 9679 009b 13       		.uleb128 0x13
 9680 009c 00       		.byte	0
 9681 009d 00       		.byte	0
 9682 009e 0F       		.uleb128 0xf
 9683 009f 05       		.uleb128 0x5
 9684 00a0 00       		.byte	0
 9685 00a1 49       		.uleb128 0x49
 9686 00a2 13       		.uleb128 0x13
 9687 00a3 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 273


 9688 00a4 00       		.byte	0
 9689 00a5 10       		.uleb128 0x10
 9690 00a6 15       		.uleb128 0x15
 9691 00a7 01       		.byte	0x1
 9692 00a8 27       		.uleb128 0x27
 9693 00a9 19       		.uleb128 0x19
 9694 00aa 49       		.uleb128 0x49
 9695 00ab 13       		.uleb128 0x13
 9696 00ac 01       		.uleb128 0x1
 9697 00ad 13       		.uleb128 0x13
 9698 00ae 00       		.byte	0
 9699 00af 00       		.byte	0
 9700 00b0 11       		.uleb128 0x11
 9701 00b1 13       		.uleb128 0x13
 9702 00b2 01       		.byte	0x1
 9703 00b3 03       		.uleb128 0x3
 9704 00b4 0E       		.uleb128 0xe
 9705 00b5 0B       		.uleb128 0xb
 9706 00b6 0B       		.uleb128 0xb
 9707 00b7 3A       		.uleb128 0x3a
 9708 00b8 0B       		.uleb128 0xb
 9709 00b9 3B       		.uleb128 0x3b
 9710 00ba 05       		.uleb128 0x5
 9711 00bb 01       		.uleb128 0x1
 9712 00bc 13       		.uleb128 0x13
 9713 00bd 00       		.byte	0
 9714 00be 00       		.byte	0
 9715 00bf 12       		.uleb128 0x12
 9716 00c0 0D       		.uleb128 0xd
 9717 00c1 00       		.byte	0
 9718 00c2 03       		.uleb128 0x3
 9719 00c3 0E       		.uleb128 0xe
 9720 00c4 3A       		.uleb128 0x3a
 9721 00c5 0B       		.uleb128 0xb
 9722 00c6 3B       		.uleb128 0x3b
 9723 00c7 05       		.uleb128 0x5
 9724 00c8 49       		.uleb128 0x49
 9725 00c9 13       		.uleb128 0x13
 9726 00ca 38       		.uleb128 0x38
 9727 00cb 0B       		.uleb128 0xb
 9728 00cc 00       		.byte	0
 9729 00cd 00       		.byte	0
 9730 00ce 13       		.uleb128 0x13
 9731 00cf 01       		.uleb128 0x1
 9732 00d0 01       		.byte	0x1
 9733 00d1 49       		.uleb128 0x49
 9734 00d2 13       		.uleb128 0x13
 9735 00d3 01       		.uleb128 0x1
 9736 00d4 13       		.uleb128 0x13
 9737 00d5 00       		.byte	0
 9738 00d6 00       		.byte	0
 9739 00d7 14       		.uleb128 0x14
 9740 00d8 21       		.uleb128 0x21
 9741 00d9 00       		.byte	0
 9742 00da 49       		.uleb128 0x49
 9743 00db 13       		.uleb128 0x13
 9744 00dc 2F       		.uleb128 0x2f
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 274


 9745 00dd 0B       		.uleb128 0xb
 9746 00de 00       		.byte	0
 9747 00df 00       		.byte	0
 9748 00e0 15       		.uleb128 0x15
 9749 00e1 13       		.uleb128 0x13
 9750 00e2 01       		.byte	0x1
 9751 00e3 03       		.uleb128 0x3
 9752 00e4 0E       		.uleb128 0xe
 9753 00e5 0B       		.uleb128 0xb
 9754 00e6 0B       		.uleb128 0xb
 9755 00e7 3A       		.uleb128 0x3a
 9756 00e8 0B       		.uleb128 0xb
 9757 00e9 3B       		.uleb128 0x3b
 9758 00ea 0B       		.uleb128 0xb
 9759 00eb 01       		.uleb128 0x1
 9760 00ec 13       		.uleb128 0x13
 9761 00ed 00       		.byte	0
 9762 00ee 00       		.byte	0
 9763 00ef 16       		.uleb128 0x16
 9764 00f0 04       		.uleb128 0x4
 9765 00f1 01       		.byte	0x1
 9766 00f2 0B       		.uleb128 0xb
 9767 00f3 0B       		.uleb128 0xb
 9768 00f4 49       		.uleb128 0x49
 9769 00f5 13       		.uleb128 0x13
 9770 00f6 3A       		.uleb128 0x3a
 9771 00f7 0B       		.uleb128 0xb
 9772 00f8 3B       		.uleb128 0x3b
 9773 00f9 0B       		.uleb128 0xb
 9774 00fa 01       		.uleb128 0x1
 9775 00fb 13       		.uleb128 0x13
 9776 00fc 00       		.byte	0
 9777 00fd 00       		.byte	0
 9778 00fe 17       		.uleb128 0x17
 9779 00ff 2E       		.uleb128 0x2e
 9780 0100 01       		.byte	0x1
 9781 0101 03       		.uleb128 0x3
 9782 0102 0E       		.uleb128 0xe
 9783 0103 3A       		.uleb128 0x3a
 9784 0104 0B       		.uleb128 0xb
 9785 0105 3B       		.uleb128 0x3b
 9786 0106 0B       		.uleb128 0xb
 9787 0107 27       		.uleb128 0x27
 9788 0108 19       		.uleb128 0x19
 9789 0109 20       		.uleb128 0x20
 9790 010a 0B       		.uleb128 0xb
 9791 010b 01       		.uleb128 0x1
 9792 010c 13       		.uleb128 0x13
 9793 010d 00       		.byte	0
 9794 010e 00       		.byte	0
 9795 010f 18       		.uleb128 0x18
 9796 0110 34       		.uleb128 0x34
 9797 0111 00       		.byte	0
 9798 0112 03       		.uleb128 0x3
 9799 0113 0E       		.uleb128 0xe
 9800 0114 3A       		.uleb128 0x3a
 9801 0115 0B       		.uleb128 0xb
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 275


 9802 0116 3B       		.uleb128 0x3b
 9803 0117 0B       		.uleb128 0xb
 9804 0118 49       		.uleb128 0x49
 9805 0119 13       		.uleb128 0x13
 9806 011a 00       		.byte	0
 9807 011b 00       		.byte	0
 9808 011c 19       		.uleb128 0x19
 9809 011d 2E       		.uleb128 0x2e
 9810 011e 01       		.byte	0x1
 9811 011f 03       		.uleb128 0x3
 9812 0120 0E       		.uleb128 0xe
 9813 0121 3A       		.uleb128 0x3a
 9814 0122 0B       		.uleb128 0xb
 9815 0123 3B       		.uleb128 0x3b
 9816 0124 0B       		.uleb128 0xb
 9817 0125 27       		.uleb128 0x27
 9818 0126 19       		.uleb128 0x19
 9819 0127 49       		.uleb128 0x49
 9820 0128 13       		.uleb128 0x13
 9821 0129 20       		.uleb128 0x20
 9822 012a 0B       		.uleb128 0xb
 9823 012b 01       		.uleb128 0x1
 9824 012c 13       		.uleb128 0x13
 9825 012d 00       		.byte	0
 9826 012e 00       		.byte	0
 9827 012f 1A       		.uleb128 0x1a
 9828 0130 05       		.uleb128 0x5
 9829 0131 00       		.byte	0
 9830 0132 03       		.uleb128 0x3
 9831 0133 0E       		.uleb128 0xe
 9832 0134 3A       		.uleb128 0x3a
 9833 0135 0B       		.uleb128 0xb
 9834 0136 3B       		.uleb128 0x3b
 9835 0137 0B       		.uleb128 0xb
 9836 0138 49       		.uleb128 0x49
 9837 0139 13       		.uleb128 0x13
 9838 013a 00       		.byte	0
 9839 013b 00       		.byte	0
 9840 013c 1B       		.uleb128 0x1b
 9841 013d 2E       		.uleb128 0x2e
 9842 013e 01       		.byte	0x1
 9843 013f 03       		.uleb128 0x3
 9844 0140 0E       		.uleb128 0xe
 9845 0141 3A       		.uleb128 0x3a
 9846 0142 0B       		.uleb128 0xb
 9847 0143 3B       		.uleb128 0x3b
 9848 0144 05       		.uleb128 0x5
 9849 0145 27       		.uleb128 0x27
 9850 0146 19       		.uleb128 0x19
 9851 0147 49       		.uleb128 0x49
 9852 0148 13       		.uleb128 0x13
 9853 0149 11       		.uleb128 0x11
 9854 014a 01       		.uleb128 0x1
 9855 014b 12       		.uleb128 0x12
 9856 014c 06       		.uleb128 0x6
 9857 014d 40       		.uleb128 0x40
 9858 014e 18       		.uleb128 0x18
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 276


 9859 014f 9742     		.uleb128 0x2117
 9860 0151 19       		.uleb128 0x19
 9861 0152 01       		.uleb128 0x1
 9862 0153 13       		.uleb128 0x13
 9863 0154 00       		.byte	0
 9864 0155 00       		.byte	0
 9865 0156 1C       		.uleb128 0x1c
 9866 0157 05       		.uleb128 0x5
 9867 0158 00       		.byte	0
 9868 0159 03       		.uleb128 0x3
 9869 015a 0E       		.uleb128 0xe
 9870 015b 3A       		.uleb128 0x3a
 9871 015c 0B       		.uleb128 0xb
 9872 015d 3B       		.uleb128 0x3b
 9873 015e 05       		.uleb128 0x5
 9874 015f 49       		.uleb128 0x49
 9875 0160 13       		.uleb128 0x13
 9876 0161 02       		.uleb128 0x2
 9877 0162 17       		.uleb128 0x17
 9878 0163 00       		.byte	0
 9879 0164 00       		.byte	0
 9880 0165 1D       		.uleb128 0x1d
 9881 0166 34       		.uleb128 0x34
 9882 0167 00       		.byte	0
 9883 0168 03       		.uleb128 0x3
 9884 0169 0E       		.uleb128 0xe
 9885 016a 3A       		.uleb128 0x3a
 9886 016b 0B       		.uleb128 0xb
 9887 016c 3B       		.uleb128 0x3b
 9888 016d 05       		.uleb128 0x5
 9889 016e 49       		.uleb128 0x49
 9890 016f 13       		.uleb128 0x13
 9891 0170 02       		.uleb128 0x2
 9892 0171 17       		.uleb128 0x17
 9893 0172 00       		.byte	0
 9894 0173 00       		.byte	0
 9895 0174 1E       		.uleb128 0x1e
 9896 0175 1D       		.uleb128 0x1d
 9897 0176 01       		.byte	0x1
 9898 0177 31       		.uleb128 0x31
 9899 0178 13       		.uleb128 0x13
 9900 0179 11       		.uleb128 0x11
 9901 017a 01       		.uleb128 0x1
 9902 017b 12       		.uleb128 0x12
 9903 017c 06       		.uleb128 0x6
 9904 017d 58       		.uleb128 0x58
 9905 017e 0B       		.uleb128 0xb
 9906 017f 59       		.uleb128 0x59
 9907 0180 05       		.uleb128 0x5
 9908 0181 00       		.byte	0
 9909 0182 00       		.byte	0
 9910 0183 1F       		.uleb128 0x1f
 9911 0184 0B       		.uleb128 0xb
 9912 0185 01       		.byte	0x1
 9913 0186 11       		.uleb128 0x11
 9914 0187 01       		.uleb128 0x1
 9915 0188 12       		.uleb128 0x12
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 277


 9916 0189 06       		.uleb128 0x6
 9917 018a 00       		.byte	0
 9918 018b 00       		.byte	0
 9919 018c 20       		.uleb128 0x20
 9920 018d 34       		.uleb128 0x34
 9921 018e 00       		.byte	0
 9922 018f 31       		.uleb128 0x31
 9923 0190 13       		.uleb128 0x13
 9924 0191 00       		.byte	0
 9925 0192 00       		.byte	0
 9926 0193 21       		.uleb128 0x21
 9927 0194 2E       		.uleb128 0x2e
 9928 0195 01       		.byte	0x1
 9929 0196 03       		.uleb128 0x3
 9930 0197 0E       		.uleb128 0xe
 9931 0198 3A       		.uleb128 0x3a
 9932 0199 0B       		.uleb128 0xb
 9933 019a 3B       		.uleb128 0x3b
 9934 019b 05       		.uleb128 0x5
 9935 019c 27       		.uleb128 0x27
 9936 019d 19       		.uleb128 0x19
 9937 019e 11       		.uleb128 0x11
 9938 019f 01       		.uleb128 0x1
 9939 01a0 12       		.uleb128 0x12
 9940 01a1 06       		.uleb128 0x6
 9941 01a2 40       		.uleb128 0x40
 9942 01a3 18       		.uleb128 0x18
 9943 01a4 9742     		.uleb128 0x2117
 9944 01a6 19       		.uleb128 0x19
 9945 01a7 01       		.uleb128 0x1
 9946 01a8 13       		.uleb128 0x13
 9947 01a9 00       		.byte	0
 9948 01aa 00       		.byte	0
 9949 01ab 22       		.uleb128 0x22
 9950 01ac 898201   		.uleb128 0x4109
 9951 01af 00       		.byte	0
 9952 01b0 11       		.uleb128 0x11
 9953 01b1 01       		.uleb128 0x1
 9954 01b2 31       		.uleb128 0x31
 9955 01b3 13       		.uleb128 0x13
 9956 01b4 00       		.byte	0
 9957 01b5 00       		.byte	0
 9958 01b6 23       		.uleb128 0x23
 9959 01b7 898201   		.uleb128 0x4109
 9960 01ba 01       		.byte	0x1
 9961 01bb 11       		.uleb128 0x11
 9962 01bc 01       		.uleb128 0x1
 9963 01bd 31       		.uleb128 0x31
 9964 01be 13       		.uleb128 0x13
 9965 01bf 00       		.byte	0
 9966 01c0 00       		.byte	0
 9967 01c1 24       		.uleb128 0x24
 9968 01c2 8A8201   		.uleb128 0x410a
 9969 01c5 00       		.byte	0
 9970 01c6 02       		.uleb128 0x2
 9971 01c7 18       		.uleb128 0x18
 9972 01c8 9142     		.uleb128 0x2111
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 278


 9973 01ca 18       		.uleb128 0x18
 9974 01cb 00       		.byte	0
 9975 01cc 00       		.byte	0
 9976 01cd 25       		.uleb128 0x25
 9977 01ce 05       		.uleb128 0x5
 9978 01cf 00       		.byte	0
 9979 01d0 03       		.uleb128 0x3
 9980 01d1 0E       		.uleb128 0xe
 9981 01d2 3A       		.uleb128 0x3a
 9982 01d3 0B       		.uleb128 0xb
 9983 01d4 3B       		.uleb128 0x3b
 9984 01d5 05       		.uleb128 0x5
 9985 01d6 49       		.uleb128 0x49
 9986 01d7 13       		.uleb128 0x13
 9987 01d8 02       		.uleb128 0x2
 9988 01d9 18       		.uleb128 0x18
 9989 01da 00       		.byte	0
 9990 01db 00       		.byte	0
 9991 01dc 26       		.uleb128 0x26
 9992 01dd 34       		.uleb128 0x34
 9993 01de 00       		.byte	0
 9994 01df 03       		.uleb128 0x3
 9995 01e0 0E       		.uleb128 0xe
 9996 01e1 3A       		.uleb128 0x3a
 9997 01e2 0B       		.uleb128 0xb
 9998 01e3 3B       		.uleb128 0x3b
 9999 01e4 05       		.uleb128 0x5
 10000 01e5 49       		.uleb128 0x49
 10001 01e6 13       		.uleb128 0x13
 10002 01e7 02       		.uleb128 0x2
 10003 01e8 18       		.uleb128 0x18
 10004 01e9 00       		.byte	0
 10005 01ea 00       		.byte	0
 10006 01eb 27       		.uleb128 0x27
 10007 01ec 34       		.uleb128 0x34
 10008 01ed 00       		.byte	0
 10009 01ee 03       		.uleb128 0x3
 10010 01ef 08       		.uleb128 0x8
 10011 01f0 3A       		.uleb128 0x3a
 10012 01f1 0B       		.uleb128 0xb
 10013 01f2 3B       		.uleb128 0x3b
 10014 01f3 05       		.uleb128 0x5
 10015 01f4 49       		.uleb128 0x49
 10016 01f5 13       		.uleb128 0x13
 10017 01f6 02       		.uleb128 0x2
 10018 01f7 17       		.uleb128 0x17
 10019 01f8 00       		.byte	0
 10020 01f9 00       		.byte	0
 10021 01fa 28       		.uleb128 0x28
 10022 01fb 898201   		.uleb128 0x4109
 10023 01fe 01       		.byte	0x1
 10024 01ff 11       		.uleb128 0x11
 10025 0200 01       		.uleb128 0x1
 10026 0201 31       		.uleb128 0x31
 10027 0202 13       		.uleb128 0x13
 10028 0203 01       		.uleb128 0x1
 10029 0204 13       		.uleb128 0x13
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 279


 10030 0205 00       		.byte	0
 10031 0206 00       		.byte	0
 10032 0207 29       		.uleb128 0x29
 10033 0208 2E       		.uleb128 0x2e
 10034 0209 01       		.byte	0x1
 10035 020a 03       		.uleb128 0x3
 10036 020b 0E       		.uleb128 0xe
 10037 020c 3A       		.uleb128 0x3a
 10038 020d 0B       		.uleb128 0xb
 10039 020e 3B       		.uleb128 0x3b
 10040 020f 05       		.uleb128 0x5
 10041 0210 27       		.uleb128 0x27
 10042 0211 19       		.uleb128 0x19
 10043 0212 8701     		.uleb128 0x87
 10044 0214 19       		.uleb128 0x19
 10045 0215 11       		.uleb128 0x11
 10046 0216 01       		.uleb128 0x1
 10047 0217 12       		.uleb128 0x12
 10048 0218 06       		.uleb128 0x6
 10049 0219 40       		.uleb128 0x40
 10050 021a 18       		.uleb128 0x18
 10051 021b 9742     		.uleb128 0x2117
 10052 021d 19       		.uleb128 0x19
 10053 021e 01       		.uleb128 0x1
 10054 021f 13       		.uleb128 0x13
 10055 0220 00       		.byte	0
 10056 0221 00       		.byte	0
 10057 0222 2A       		.uleb128 0x2a
 10058 0223 0B       		.uleb128 0xb
 10059 0224 01       		.byte	0x1
 10060 0225 11       		.uleb128 0x11
 10061 0226 01       		.uleb128 0x1
 10062 0227 12       		.uleb128 0x12
 10063 0228 06       		.uleb128 0x6
 10064 0229 01       		.uleb128 0x1
 10065 022a 13       		.uleb128 0x13
 10066 022b 00       		.byte	0
 10067 022c 00       		.byte	0
 10068 022d 2B       		.uleb128 0x2b
 10069 022e 2E       		.uleb128 0x2e
 10070 022f 00       		.byte	0
 10071 0230 3F       		.uleb128 0x3f
 10072 0231 19       		.uleb128 0x19
 10073 0232 03       		.uleb128 0x3
 10074 0233 0E       		.uleb128 0xe
 10075 0234 3A       		.uleb128 0x3a
 10076 0235 0B       		.uleb128 0xb
 10077 0236 3B       		.uleb128 0x3b
 10078 0237 05       		.uleb128 0x5
 10079 0238 27       		.uleb128 0x27
 10080 0239 19       		.uleb128 0x19
 10081 023a 3C       		.uleb128 0x3c
 10082 023b 19       		.uleb128 0x19
 10083 023c 00       		.byte	0
 10084 023d 00       		.byte	0
 10085 023e 2C       		.uleb128 0x2c
 10086 023f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 280


 10087 0240 01       		.byte	0x1
 10088 0241 3F       		.uleb128 0x3f
 10089 0242 19       		.uleb128 0x19
 10090 0243 03       		.uleb128 0x3
 10091 0244 0E       		.uleb128 0xe
 10092 0245 3A       		.uleb128 0x3a
 10093 0246 0B       		.uleb128 0xb
 10094 0247 3B       		.uleb128 0x3b
 10095 0248 05       		.uleb128 0x5
 10096 0249 27       		.uleb128 0x27
 10097 024a 19       		.uleb128 0x19
 10098 024b 49       		.uleb128 0x49
 10099 024c 13       		.uleb128 0x13
 10100 024d 11       		.uleb128 0x11
 10101 024e 01       		.uleb128 0x1
 10102 024f 12       		.uleb128 0x12
 10103 0250 06       		.uleb128 0x6
 10104 0251 40       		.uleb128 0x40
 10105 0252 18       		.uleb128 0x18
 10106 0253 9742     		.uleb128 0x2117
 10107 0255 19       		.uleb128 0x19
 10108 0256 01       		.uleb128 0x1
 10109 0257 13       		.uleb128 0x13
 10110 0258 00       		.byte	0
 10111 0259 00       		.byte	0
 10112 025a 2D       		.uleb128 0x2d
 10113 025b 2E       		.uleb128 0x2e
 10114 025c 01       		.byte	0x1
 10115 025d 3F       		.uleb128 0x3f
 10116 025e 19       		.uleb128 0x19
 10117 025f 03       		.uleb128 0x3
 10118 0260 0E       		.uleb128 0xe
 10119 0261 3A       		.uleb128 0x3a
 10120 0262 0B       		.uleb128 0xb
 10121 0263 3B       		.uleb128 0x3b
 10122 0264 05       		.uleb128 0x5
 10123 0265 27       		.uleb128 0x27
 10124 0266 19       		.uleb128 0x19
 10125 0267 11       		.uleb128 0x11
 10126 0268 01       		.uleb128 0x1
 10127 0269 12       		.uleb128 0x12
 10128 026a 06       		.uleb128 0x6
 10129 026b 40       		.uleb128 0x40
 10130 026c 18       		.uleb128 0x18
 10131 026d 9742     		.uleb128 0x2117
 10132 026f 19       		.uleb128 0x19
 10133 0270 01       		.uleb128 0x1
 10134 0271 13       		.uleb128 0x13
 10135 0272 00       		.byte	0
 10136 0273 00       		.byte	0
 10137 0274 2E       		.uleb128 0x2e
 10138 0275 1D       		.uleb128 0x1d
 10139 0276 01       		.byte	0x1
 10140 0277 31       		.uleb128 0x31
 10141 0278 13       		.uleb128 0x13
 10142 0279 11       		.uleb128 0x11
 10143 027a 01       		.uleb128 0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 281


 10144 027b 12       		.uleb128 0x12
 10145 027c 06       		.uleb128 0x6
 10146 027d 58       		.uleb128 0x58
 10147 027e 0B       		.uleb128 0xb
 10148 027f 59       		.uleb128 0x59
 10149 0280 05       		.uleb128 0x5
 10150 0281 01       		.uleb128 0x1
 10151 0282 13       		.uleb128 0x13
 10152 0283 00       		.byte	0
 10153 0284 00       		.byte	0
 10154 0285 2F       		.uleb128 0x2f
 10155 0286 34       		.uleb128 0x34
 10156 0287 00       		.byte	0
 10157 0288 03       		.uleb128 0x3
 10158 0289 0E       		.uleb128 0xe
 10159 028a 3A       		.uleb128 0x3a
 10160 028b 0B       		.uleb128 0xb
 10161 028c 3B       		.uleb128 0x3b
 10162 028d 05       		.uleb128 0x5
 10163 028e 49       		.uleb128 0x49
 10164 028f 13       		.uleb128 0x13
 10165 0290 00       		.byte	0
 10166 0291 00       		.byte	0
 10167 0292 30       		.uleb128 0x30
 10168 0293 05       		.uleb128 0x5
 10169 0294 00       		.byte	0
 10170 0295 31       		.uleb128 0x31
 10171 0296 13       		.uleb128 0x13
 10172 0297 02       		.uleb128 0x2
 10173 0298 17       		.uleb128 0x17
 10174 0299 00       		.byte	0
 10175 029a 00       		.byte	0
 10176 029b 31       		.uleb128 0x31
 10177 029c 2E       		.uleb128 0x2e
 10178 029d 00       		.byte	0
 10179 029e 3F       		.uleb128 0x3f
 10180 029f 19       		.uleb128 0x19
 10181 02a0 03       		.uleb128 0x3
 10182 02a1 0E       		.uleb128 0xe
 10183 02a2 3A       		.uleb128 0x3a
 10184 02a3 0B       		.uleb128 0xb
 10185 02a4 3B       		.uleb128 0x3b
 10186 02a5 05       		.uleb128 0x5
 10187 02a6 27       		.uleb128 0x27
 10188 02a7 19       		.uleb128 0x19
 10189 02a8 11       		.uleb128 0x11
 10190 02a9 01       		.uleb128 0x1
 10191 02aa 12       		.uleb128 0x12
 10192 02ab 06       		.uleb128 0x6
 10193 02ac 40       		.uleb128 0x40
 10194 02ad 18       		.uleb128 0x18
 10195 02ae 9742     		.uleb128 0x2117
 10196 02b0 19       		.uleb128 0x19
 10197 02b1 00       		.byte	0
 10198 02b2 00       		.byte	0
 10199 02b3 32       		.uleb128 0x32
 10200 02b4 34       		.uleb128 0x34
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 282


 10201 02b5 00       		.byte	0
 10202 02b6 03       		.uleb128 0x3
 10203 02b7 0E       		.uleb128 0xe
 10204 02b8 3A       		.uleb128 0x3a
 10205 02b9 0B       		.uleb128 0xb
 10206 02ba 3B       		.uleb128 0x3b
 10207 02bb 05       		.uleb128 0x5
 10208 02bc 49       		.uleb128 0x49
 10209 02bd 13       		.uleb128 0x13
 10210 02be 1C       		.uleb128 0x1c
 10211 02bf 0B       		.uleb128 0xb
 10212 02c0 00       		.byte	0
 10213 02c1 00       		.byte	0
 10214 02c2 33       		.uleb128 0x33
 10215 02c3 2E       		.uleb128 0x2e
 10216 02c4 00       		.byte	0
 10217 02c5 3F       		.uleb128 0x3f
 10218 02c6 19       		.uleb128 0x19
 10219 02c7 03       		.uleb128 0x3
 10220 02c8 0E       		.uleb128 0xe
 10221 02c9 3A       		.uleb128 0x3a
 10222 02ca 0B       		.uleb128 0xb
 10223 02cb 3B       		.uleb128 0x3b
 10224 02cc 05       		.uleb128 0x5
 10225 02cd 27       		.uleb128 0x27
 10226 02ce 19       		.uleb128 0x19
 10227 02cf 49       		.uleb128 0x49
 10228 02d0 13       		.uleb128 0x13
 10229 02d1 11       		.uleb128 0x11
 10230 02d2 01       		.uleb128 0x1
 10231 02d3 12       		.uleb128 0x12
 10232 02d4 06       		.uleb128 0x6
 10233 02d5 40       		.uleb128 0x40
 10234 02d6 18       		.uleb128 0x18
 10235 02d7 9742     		.uleb128 0x2117
 10236 02d9 19       		.uleb128 0x19
 10237 02da 00       		.byte	0
 10238 02db 00       		.byte	0
 10239 02dc 34       		.uleb128 0x34
 10240 02dd 0B       		.uleb128 0xb
 10241 02de 01       		.byte	0x1
 10242 02df 55       		.uleb128 0x55
 10243 02e0 17       		.uleb128 0x17
 10244 02e1 00       		.byte	0
 10245 02e2 00       		.byte	0
 10246 02e3 35       		.uleb128 0x35
 10247 02e4 0B       		.uleb128 0xb
 10248 02e5 01       		.byte	0x1
 10249 02e6 55       		.uleb128 0x55
 10250 02e7 17       		.uleb128 0x17
 10251 02e8 01       		.uleb128 0x1
 10252 02e9 13       		.uleb128 0x13
 10253 02ea 00       		.byte	0
 10254 02eb 00       		.byte	0
 10255 02ec 36       		.uleb128 0x36
 10256 02ed 34       		.uleb128 0x34
 10257 02ee 00       		.byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 283


 10258 02ef 03       		.uleb128 0x3
 10259 02f0 0E       		.uleb128 0xe
 10260 02f1 3A       		.uleb128 0x3a
 10261 02f2 0B       		.uleb128 0xb
 10262 02f3 3B       		.uleb128 0x3b
 10263 02f4 05       		.uleb128 0x5
 10264 02f5 49       		.uleb128 0x49
 10265 02f6 13       		.uleb128 0x13
 10266 02f7 1C       		.uleb128 0x1c
 10267 02f8 0D       		.uleb128 0xd
 10268 02f9 00       		.byte	0
 10269 02fa 00       		.byte	0
 10270 02fb 37       		.uleb128 0x37
 10271 02fc 34       		.uleb128 0x34
 10272 02fd 00       		.byte	0
 10273 02fe 03       		.uleb128 0x3
 10274 02ff 0E       		.uleb128 0xe
 10275 0300 3A       		.uleb128 0x3a
 10276 0301 0B       		.uleb128 0xb
 10277 0302 3B       		.uleb128 0x3b
 10278 0303 0B       		.uleb128 0xb
 10279 0304 49       		.uleb128 0x49
 10280 0305 13       		.uleb128 0x13
 10281 0306 3F       		.uleb128 0x3f
 10282 0307 19       		.uleb128 0x19
 10283 0308 3C       		.uleb128 0x3c
 10284 0309 19       		.uleb128 0x19
 10285 030a 00       		.byte	0
 10286 030b 00       		.byte	0
 10287 030c 38       		.uleb128 0x38
 10288 030d 34       		.uleb128 0x34
 10289 030e 00       		.byte	0
 10290 030f 03       		.uleb128 0x3
 10291 0310 0E       		.uleb128 0xe
 10292 0311 3A       		.uleb128 0x3a
 10293 0312 0B       		.uleb128 0xb
 10294 0313 3B       		.uleb128 0x3b
 10295 0314 05       		.uleb128 0x5
 10296 0315 49       		.uleb128 0x49
 10297 0316 13       		.uleb128 0x13
 10298 0317 3F       		.uleb128 0x3f
 10299 0318 19       		.uleb128 0x19
 10300 0319 3C       		.uleb128 0x3c
 10301 031a 19       		.uleb128 0x19
 10302 031b 00       		.byte	0
 10303 031c 00       		.byte	0
 10304 031d 39       		.uleb128 0x39
 10305 031e 34       		.uleb128 0x34
 10306 031f 00       		.byte	0
 10307 0320 03       		.uleb128 0x3
 10308 0321 0E       		.uleb128 0xe
 10309 0322 3A       		.uleb128 0x3a
 10310 0323 0B       		.uleb128 0xb
 10311 0324 3B       		.uleb128 0x3b
 10312 0325 05       		.uleb128 0x5
 10313 0326 49       		.uleb128 0x49
 10314 0327 13       		.uleb128 0x13
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 284


 10315 0328 3F       		.uleb128 0x3f
 10316 0329 19       		.uleb128 0x19
 10317 032a 02       		.uleb128 0x2
 10318 032b 18       		.uleb128 0x18
 10319 032c 00       		.byte	0
 10320 032d 00       		.byte	0
 10321 032e 3A       		.uleb128 0x3a
 10322 032f 2E       		.uleb128 0x2e
 10323 0330 00       		.byte	0
 10324 0331 3F       		.uleb128 0x3f
 10325 0332 19       		.uleb128 0x19
 10326 0333 3C       		.uleb128 0x3c
 10327 0334 19       		.uleb128 0x19
 10328 0335 6E       		.uleb128 0x6e
 10329 0336 0E       		.uleb128 0xe
 10330 0337 03       		.uleb128 0x3
 10331 0338 0E       		.uleb128 0xe
 10332 0339 3A       		.uleb128 0x3a
 10333 033a 0B       		.uleb128 0xb
 10334 033b 3B       		.uleb128 0x3b
 10335 033c 0B       		.uleb128 0xb
 10336 033d 00       		.byte	0
 10337 033e 00       		.byte	0
 10338 033f 3B       		.uleb128 0x3b
 10339 0340 2E       		.uleb128 0x2e
 10340 0341 00       		.byte	0
 10341 0342 3F       		.uleb128 0x3f
 10342 0343 19       		.uleb128 0x19
 10343 0344 3C       		.uleb128 0x3c
 10344 0345 19       		.uleb128 0x19
 10345 0346 6E       		.uleb128 0x6e
 10346 0347 0E       		.uleb128 0xe
 10347 0348 03       		.uleb128 0x3
 10348 0349 0E       		.uleb128 0xe
 10349 034a 3A       		.uleb128 0x3a
 10350 034b 0B       		.uleb128 0xb
 10351 034c 3B       		.uleb128 0x3b
 10352 034d 05       		.uleb128 0x5
 10353 034e 00       		.byte	0
 10354 034f 00       		.byte	0
 10355 0350 00       		.byte	0
 10356              		.section	.debug_loc,"",%progbits
 10357              	.Ldebug_loc0:
 10358              	.LLST0:
 10359 0000 00000000 		.4byte	.LVL0
 10360 0004 36000000 		.4byte	.LVL2
 10361 0008 0100     		.2byte	0x1
 10362 000a 50       		.byte	0x50
 10363 000b 36000000 		.4byte	.LVL2
 10364 000f 38000000 		.4byte	.LVL3
 10365 0013 0400     		.2byte	0x4
 10366 0015 F3       		.byte	0xf3
 10367 0016 01       		.uleb128 0x1
 10368 0017 50       		.byte	0x50
 10369 0018 9F       		.byte	0x9f
 10370 0019 38000000 		.4byte	.LVL3
 10371 001d 3A000000 		.4byte	.LVL4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 285


 10372 0021 0100     		.2byte	0x1
 10373 0023 50       		.byte	0x50
 10374 0024 3A000000 		.4byte	.LVL4
 10375 0028 3C000000 		.4byte	.LVL5
 10376 002c 0100     		.2byte	0x1
 10377 002e 52       		.byte	0x52
 10378 002f 3C000000 		.4byte	.LVL5
 10379 0033 3E000000 		.4byte	.LVL6
 10380 0037 0100     		.2byte	0x1
 10381 0039 50       		.byte	0x50
 10382 003a 3E000000 		.4byte	.LVL6
 10383 003e 40000000 		.4byte	.LVL7
 10384 0042 0400     		.2byte	0x4
 10385 0044 F3       		.byte	0xf3
 10386 0045 01       		.uleb128 0x1
 10387 0046 50       		.byte	0x50
 10388 0047 9F       		.byte	0x9f
 10389 0048 40000000 		.4byte	.LVL7
 10390 004c 42000000 		.4byte	.LVL8
 10391 0050 0100     		.2byte	0x1
 10392 0052 50       		.byte	0x50
 10393 0053 42000000 		.4byte	.LVL8
 10394 0057 4C000000 		.4byte	.LFE522
 10395 005b 0400     		.2byte	0x4
 10396 005d F3       		.byte	0xf3
 10397 005e 01       		.uleb128 0x1
 10398 005f 50       		.byte	0x50
 10399 0060 9F       		.byte	0x9f
 10400 0061 00000000 		.4byte	0
 10401 0065 00000000 		.4byte	0
 10402              	.LLST1:
 10403 0069 00000000 		.4byte	.LVL0
 10404 006d 42000000 		.4byte	.LVL8
 10405 0071 0200     		.2byte	0x2
 10406 0073 30       		.byte	0x30
 10407 0074 9F       		.byte	0x9f
 10408 0075 42000000 		.4byte	.LVL8
 10409 0079 4C000000 		.4byte	.LFE522
 10410 007d 0100     		.2byte	0x1
 10411 007f 50       		.byte	0x50
 10412 0080 00000000 		.4byte	0
 10413 0084 00000000 		.4byte	0
 10414              	.LLST2:
 10415 0088 00000000 		.4byte	.LVL0
 10416 008c 36000000 		.4byte	.LVL2
 10417 0090 0100     		.2byte	0x1
 10418 0092 50       		.byte	0x50
 10419 0093 36000000 		.4byte	.LVL2
 10420 0097 38000000 		.4byte	.LVL3
 10421 009b 0400     		.2byte	0x4
 10422 009d F3       		.byte	0xf3
 10423 009e 01       		.uleb128 0x1
 10424 009f 50       		.byte	0x50
 10425 00a0 9F       		.byte	0x9f
 10426 00a1 38000000 		.4byte	.LVL3
 10427 00a5 3A000000 		.4byte	.LVL4
 10428 00a9 0100     		.2byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 286


 10429 00ab 50       		.byte	0x50
 10430 00ac 3A000000 		.4byte	.LVL4
 10431 00b0 3C000000 		.4byte	.LVL5
 10432 00b4 0100     		.2byte	0x1
 10433 00b6 52       		.byte	0x52
 10434 00b7 3C000000 		.4byte	.LVL5
 10435 00bb 3E000000 		.4byte	.LVL6
 10436 00bf 0100     		.2byte	0x1
 10437 00c1 50       		.byte	0x50
 10438 00c2 3E000000 		.4byte	.LVL6
 10439 00c6 40000000 		.4byte	.LVL7
 10440 00ca 0400     		.2byte	0x4
 10441 00cc F3       		.byte	0xf3
 10442 00cd 01       		.uleb128 0x1
 10443 00ce 50       		.byte	0x50
 10444 00cf 9F       		.byte	0x9f
 10445 00d0 40000000 		.4byte	.LVL7
 10446 00d4 42000000 		.4byte	.LVL8
 10447 00d8 0100     		.2byte	0x1
 10448 00da 50       		.byte	0x50
 10449 00db 42000000 		.4byte	.LVL8
 10450 00df 4C000000 		.4byte	.LFE522
 10451 00e3 0400     		.2byte	0x4
 10452 00e5 F3       		.byte	0xf3
 10453 00e6 01       		.uleb128 0x1
 10454 00e7 50       		.byte	0x50
 10455 00e8 9F       		.byte	0x9f
 10456 00e9 00000000 		.4byte	0
 10457 00ed 00000000 		.4byte	0
 10458              	.LLST3:
 10459 00f1 22000000 		.4byte	.LVL9
 10460 00f5 24000000 		.4byte	.LVL10
 10461 00f9 0100     		.2byte	0x1
 10462 00fb 52       		.byte	0x52
 10463 00fc 00000000 		.4byte	0
 10464 0100 00000000 		.4byte	0
 10465              	.LLST4:
 10466 0104 00000000 		.4byte	.LVL11
 10467 0108 06000000 		.4byte	.LVL12
 10468 010c 0100     		.2byte	0x1
 10469 010e 50       		.byte	0x50
 10470 010f 06000000 		.4byte	.LVL12
 10471 0113 12000000 		.4byte	.LFE549
 10472 0117 0100     		.2byte	0x1
 10473 0119 54       		.byte	0x54
 10474 011a 00000000 		.4byte	0
 10475 011e 00000000 		.4byte	0
 10476              	.LLST5:
 10477 0122 00000000 		.4byte	.LVL15
 10478 0126 18000000 		.4byte	.LVL18
 10479 012a 0100     		.2byte	0x1
 10480 012c 50       		.byte	0x50
 10481 012d 18000000 		.4byte	.LVL18
 10482 0131 9E000000 		.4byte	.LFE513
 10483 0135 0100     		.2byte	0x1
 10484 0137 5A       		.byte	0x5a
 10485 0138 00000000 		.4byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 287


 10486 013c 00000000 		.4byte	0
 10487              	.LLST6:
 10488 0140 00000000 		.4byte	.LVL15
 10489 0144 16000000 		.4byte	.LVL17
 10490 0148 0100     		.2byte	0x1
 10491 014a 51       		.byte	0x51
 10492 014b 16000000 		.4byte	.LVL17
 10493 014f 9E000000 		.4byte	.LFE513
 10494 0153 0100     		.2byte	0x1
 10495 0155 59       		.byte	0x59
 10496 0156 00000000 		.4byte	0
 10497 015a 00000000 		.4byte	0
 10498              	.LLST7:
 10499 015e 00000000 		.4byte	.LVL15
 10500 0162 14000000 		.4byte	.LVL16
 10501 0166 0100     		.2byte	0x1
 10502 0168 52       		.byte	0x52
 10503 0169 14000000 		.4byte	.LVL16
 10504 016d 28000000 		.4byte	.LVL20
 10505 0171 0100     		.2byte	0x1
 10506 0173 55       		.byte	0x55
 10507 0174 28000000 		.4byte	.LVL20
 10508 0178 30000000 		.4byte	.LVL22
 10509 017c 0700     		.2byte	0x7
 10510 017e 72       		.byte	0x72
 10511 017f 81808080 		.sleb128 -1073741823
 10511      7C
 10512 0184 9F       		.byte	0x9f
 10513 0185 30000000 		.4byte	.LVL22
 10514 0189 9E000000 		.4byte	.LFE513
 10515 018d 0400     		.2byte	0x4
 10516 018f F3       		.byte	0xf3
 10517 0190 01       		.uleb128 0x1
 10518 0191 52       		.byte	0x52
 10519 0192 9F       		.byte	0x9f
 10520 0193 00000000 		.4byte	0
 10521 0197 00000000 		.4byte	0
 10522              	.LLST8:
 10523 019b 00000000 		.4byte	.LVL15
 10524 019f 1B000000 		.4byte	.LVL19-1
 10525 01a3 0100     		.2byte	0x1
 10526 01a5 53       		.byte	0x53
 10527 01a6 1B000000 		.4byte	.LVL19-1
 10528 01aa 9E000000 		.4byte	.LFE513
 10529 01ae 0100     		.2byte	0x1
 10530 01b0 58       		.byte	0x58
 10531 01b1 00000000 		.4byte	0
 10532 01b5 00000000 		.4byte	0
 10533              	.LLST9:
 10534 01b9 00000000 		.4byte	.LVL15
 10535 01bd 52000000 		.4byte	.LVL25
 10536 01c1 0200     		.2byte	0x2
 10537 01c3 91       		.byte	0x91
 10538 01c4 00       		.sleb128 0
 10539 01c5 52000000 		.4byte	.LVL25
 10540 01c9 9E000000 		.4byte	.LFE513
 10541 01cd 0100     		.2byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 288


 10542 01cf 57       		.byte	0x57
 10543 01d0 00000000 		.4byte	0
 10544 01d4 00000000 		.4byte	0
 10545              	.LLST10:
 10546 01d8 30000000 		.4byte	.LVL22
 10547 01dc 48000000 		.4byte	.LVL24
 10548 01e0 0100     		.2byte	0x1
 10549 01e2 53       		.byte	0x53
 10550 01e3 6C000000 		.4byte	.LVL28
 10551 01e7 70000000 		.4byte	.LVL29
 10552 01eb 0200     		.2byte	0x2
 10553 01ed 30       		.byte	0x30
 10554 01ee 9F       		.byte	0x9f
 10555 01ef 70000000 		.4byte	.LVL29
 10556 01f3 84000000 		.4byte	.LVL31
 10557 01f7 0100     		.2byte	0x1
 10558 01f9 53       		.byte	0x53
 10559 01fa 00000000 		.4byte	0
 10560 01fe 00000000 		.4byte	0
 10561              	.LLST11:
 10562 0202 02000000 		.4byte	.LVL33
 10563 0206 06000000 		.4byte	.LVL34
 10564 020a 0200     		.2byte	0x2
 10565 020c 30       		.byte	0x30
 10566 020d 9F       		.byte	0x9f
 10567 020e 06000000 		.4byte	.LVL34
 10568 0212 1C000000 		.4byte	.LVL37
 10569 0216 0100     		.2byte	0x1
 10570 0218 54       		.byte	0x54
 10571 0219 00000000 		.4byte	0
 10572 021d 00000000 		.4byte	0
 10573              	.LLST12:
 10574 0221 00000000 		.4byte	.LVL43
 10575 0225 07000000 		.4byte	.LVL44-1
 10576 0229 0100     		.2byte	0x1
 10577 022b 50       		.byte	0x50
 10578 022c 07000000 		.4byte	.LVL44-1
 10579 0230 A2000000 		.4byte	.LVL48
 10580 0234 0100     		.2byte	0x1
 10581 0236 54       		.byte	0x54
 10582 0237 A2000000 		.4byte	.LVL48
 10583 023b AC000000 		.4byte	.LFE514
 10584 023f 0400     		.2byte	0x4
 10585 0241 F3       		.byte	0xf3
 10586 0242 01       		.uleb128 0x1
 10587 0243 50       		.byte	0x50
 10588 0244 9F       		.byte	0x9f
 10589 0245 00000000 		.4byte	0
 10590 0249 00000000 		.4byte	0
 10591              	.LLST13:
 10592 024d 10000000 		.4byte	.LVL50
 10593 0251 34000000 		.4byte	.LVL53
 10594 0255 0100     		.2byte	0x1
 10595 0257 55       		.byte	0x55
 10596 0258 00000000 		.4byte	0
 10597 025c 00000000 		.4byte	0
 10598              	.LLST14:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 289


 10599 0260 00000000 		.4byte	.LVL54
 10600 0264 10000000 		.4byte	.LVL56
 10601 0268 0100     		.2byte	0x1
 10602 026a 50       		.byte	0x50
 10603 026b 10000000 		.4byte	.LVL56
 10604 026f 2E000000 		.4byte	.LVL60
 10605 0273 0100     		.2byte	0x1
 10606 0275 54       		.byte	0x54
 10607 0276 2E000000 		.4byte	.LVL60
 10608 027a 68000000 		.4byte	.LFE560
 10609 027e 0400     		.2byte	0x4
 10610 0280 F3       		.byte	0xf3
 10611 0281 01       		.uleb128 0x1
 10612 0282 50       		.byte	0x50
 10613 0283 9F       		.byte	0x9f
 10614 0284 00000000 		.4byte	0
 10615 0288 00000000 		.4byte	0
 10616              	.LLST15:
 10617 028c 00000000 		.4byte	.LVL54
 10618 0290 15000000 		.4byte	.LVL57-1
 10619 0294 0100     		.2byte	0x1
 10620 0296 51       		.byte	0x51
 10621 0297 15000000 		.4byte	.LVL57-1
 10622 029b 64000000 		.4byte	.LVL65
 10623 029f 0100     		.2byte	0x1
 10624 02a1 56       		.byte	0x56
 10625 02a2 64000000 		.4byte	.LVL65
 10626 02a6 68000000 		.4byte	.LFE560
 10627 02aa 0400     		.2byte	0x4
 10628 02ac F3       		.byte	0xf3
 10629 02ad 01       		.uleb128 0x1
 10630 02ae 51       		.byte	0x51
 10631 02af 9F       		.byte	0x9f
 10632 02b0 00000000 		.4byte	0
 10633 02b4 00000000 		.4byte	0
 10634              	.LLST16:
 10635 02b8 2E000000 		.4byte	.LVL60
 10636 02bc 64000000 		.4byte	.LVL65
 10637 02c0 0100     		.2byte	0x1
 10638 02c2 54       		.byte	0x54
 10639 02c3 00000000 		.4byte	0
 10640 02c7 00000000 		.4byte	0
 10641              	.LLST17:
 10642 02cb 0C000000 		.4byte	.LVL55
 10643 02cf 4E000000 		.4byte	.LVL63
 10644 02d3 0100     		.2byte	0x1
 10645 02d5 55       		.byte	0x55
 10646 02d6 00000000 		.4byte	0
 10647 02da 00000000 		.4byte	0
 10648              	.LLST18:
 10649 02de 00000000 		.4byte	.LVL66
 10650 02e2 02000000 		.4byte	.LVL67
 10651 02e6 0100     		.2byte	0x1
 10652 02e8 50       		.byte	0x50
 10653 02e9 02000000 		.4byte	.LVL67
 10654 02ed 2C000000 		.4byte	.LFE544
 10655 02f1 0400     		.2byte	0x4
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 290


 10656 02f3 F3       		.byte	0xf3
 10657 02f4 01       		.uleb128 0x1
 10658 02f5 50       		.byte	0x50
 10659 02f6 9F       		.byte	0x9f
 10660 02f7 00000000 		.4byte	0
 10661 02fb 00000000 		.4byte	0
 10662              	.LLST19:
 10663 02ff 00000000 		.4byte	.LVL70
 10664 0303 10000000 		.4byte	.LVL71
 10665 0307 0100     		.2byte	0x1
 10666 0309 50       		.byte	0x50
 10667 030a 10000000 		.4byte	.LVL71
 10668 030e 62000000 		.4byte	.LFE512
 10669 0312 0100     		.2byte	0x1
 10670 0314 56       		.byte	0x56
 10671 0315 00000000 		.4byte	0
 10672 0319 00000000 		.4byte	0
 10673              	.LLST20:
 10674 031d 00000000 		.4byte	.LVL70
 10675 0321 13000000 		.4byte	.LVL72-1
 10676 0325 0100     		.2byte	0x1
 10677 0327 51       		.byte	0x51
 10678 0328 13000000 		.4byte	.LVL72-1
 10679 032c 62000000 		.4byte	.LFE512
 10680 0330 0100     		.2byte	0x1
 10681 0332 57       		.byte	0x57
 10682 0333 00000000 		.4byte	0
 10683 0337 00000000 		.4byte	0
 10684              	.LLST21:
 10685 033b 00000000 		.4byte	.LVL70
 10686 033f 13000000 		.4byte	.LVL72-1
 10687 0343 0100     		.2byte	0x1
 10688 0345 52       		.byte	0x52
 10689 0346 13000000 		.4byte	.LVL72-1
 10690 034a 62000000 		.4byte	.LFE512
 10691 034e 0400     		.2byte	0x4
 10692 0350 F3       		.byte	0xf3
 10693 0351 01       		.uleb128 0x1
 10694 0352 52       		.byte	0x52
 10695 0353 9F       		.byte	0x9f
 10696 0354 00000000 		.4byte	0
 10697 0358 00000000 		.4byte	0
 10698              	.LLST22:
 10699 035c 00000000 		.4byte	.LVL70
 10700 0360 13000000 		.4byte	.LVL72-1
 10701 0364 0100     		.2byte	0x1
 10702 0366 53       		.byte	0x53
 10703 0367 13000000 		.4byte	.LVL72-1
 10704 036b 62000000 		.4byte	.LFE512
 10705 036f 0100     		.2byte	0x1
 10706 0371 58       		.byte	0x58
 10707 0372 00000000 		.4byte	0
 10708 0376 00000000 		.4byte	0
 10709              	.LLST23:
 10710 037a 1E000000 		.4byte	.LVL74
 10711 037e 2A000000 		.4byte	.LVL75
 10712 0382 0100     		.2byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 291


 10713 0384 50       		.byte	0x50
 10714 0385 2A000000 		.4byte	.LVL75
 10715 0389 30000000 		.4byte	.LVL77
 10716 038d 0100     		.2byte	0x1
 10717 038f 54       		.byte	0x54
 10718 0390 32000000 		.4byte	.LVL78
 10719 0394 62000000 		.4byte	.LFE512
 10720 0398 0100     		.2byte	0x1
 10721 039a 54       		.byte	0x54
 10722 039b 00000000 		.4byte	0
 10723 039f 00000000 		.4byte	0
 10724              	.LLST24:
 10725 03a3 54000000 		.4byte	.LVL80
 10726 03a7 58000000 		.4byte	.LVL81
 10727 03ab 0200     		.2byte	0x2
 10728 03ad 31       		.byte	0x31
 10729 03ae 9F       		.byte	0x9f
 10730 03af 5C000000 		.4byte	.LVL82
 10731 03b3 62000000 		.4byte	.LFE512
 10732 03b7 0100     		.2byte	0x1
 10733 03b9 50       		.byte	0x50
 10734 03ba 00000000 		.4byte	0
 10735 03be 00000000 		.4byte	0
 10736              	.LLST25:
 10737 03c2 14000000 		.4byte	.LVL72
 10738 03c6 1A000000 		.4byte	.LVL73
 10739 03ca 0100     		.2byte	0x1
 10740 03cc 50       		.byte	0x50
 10741 03cd 1A000000 		.4byte	.LVL73
 10742 03d1 30000000 		.4byte	.LVL77
 10743 03d5 0100     		.2byte	0x1
 10744 03d7 59       		.byte	0x59
 10745 03d8 30000000 		.4byte	.LVL77
 10746 03dc 32000000 		.4byte	.LVL78
 10747 03e0 0100     		.2byte	0x1
 10748 03e2 50       		.byte	0x50
 10749 03e3 00000000 		.4byte	0
 10750 03e7 00000000 		.4byte	0
 10751              	.LLST26:
 10752 03eb 00000000 		.4byte	.LVL83
 10753 03ef 07000000 		.4byte	.LVL84-1
 10754 03f3 0100     		.2byte	0x1
 10755 03f5 50       		.byte	0x50
 10756 03f6 07000000 		.4byte	.LVL84-1
 10757 03fa 10000000 		.4byte	.LVL85
 10758 03fe 0100     		.2byte	0x1
 10759 0400 54       		.byte	0x54
 10760 0401 00000000 		.4byte	0
 10761 0405 00000000 		.4byte	0
 10762              	.LLST27:
 10763 0409 10000000 		.4byte	.LVL85
 10764 040d A8000000 		.4byte	.LVL93
 10765 0411 0100     		.2byte	0x1
 10766 0413 54       		.byte	0x54
 10767 0414 00000000 		.4byte	0
 10768 0418 00000000 		.4byte	0
 10769              	.LLST28:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 292


 10770 041c 00000000 		.4byte	.LVL94
 10771 0420 07000000 		.4byte	.LVL95-1
 10772 0424 0100     		.2byte	0x1
 10773 0426 50       		.byte	0x50
 10774 0427 07000000 		.4byte	.LVL95-1
 10775 042b 10000000 		.4byte	.LVL96
 10776 042f 0100     		.2byte	0x1
 10777 0431 54       		.byte	0x54
 10778 0432 00000000 		.4byte	0
 10779 0436 00000000 		.4byte	0
 10780              	.LLST29:
 10781 043a 10000000 		.4byte	.LVL96
 10782 043e 12000000 		.4byte	.LVL97
 10783 0442 0100     		.2byte	0x1
 10784 0444 54       		.byte	0x54
 10785 0445 00000000 		.4byte	0
 10786 0449 00000000 		.4byte	0
 10787              	.LLST30:
 10788 044d 12000000 		.4byte	.LVL97
 10789 0451 1A000000 		.4byte	.LVL99
 10790 0455 0100     		.2byte	0x1
 10791 0457 54       		.byte	0x54
 10792 0458 1A000000 		.4byte	.LVL99
 10793 045c 20000000 		.4byte	.LFE518
 10794 0460 0100     		.2byte	0x1
 10795 0462 50       		.byte	0x50
 10796 0463 00000000 		.4byte	0
 10797 0467 00000000 		.4byte	0
 10798              	.LLST31:
 10799 046b 00000000 		.4byte	.LVL100
 10800 046f 07000000 		.4byte	.LVL101-1
 10801 0473 0100     		.2byte	0x1
 10802 0475 50       		.byte	0x50
 10803 0476 07000000 		.4byte	.LVL101-1
 10804 047a 24000000 		.4byte	.LVL102
 10805 047e 0100     		.2byte	0x1
 10806 0480 54       		.byte	0x54
 10807 0481 00000000 		.4byte	0
 10808 0485 00000000 		.4byte	0
 10809              	.LLST32:
 10810 0489 24000000 		.4byte	.LVL102
 10811 048d 2C000000 		.4byte	.LVL105
 10812 0491 0100     		.2byte	0x1
 10813 0493 54       		.byte	0x54
 10814 0494 00000000 		.4byte	0
 10815 0498 00000000 		.4byte	0
 10816              	.LLST33:
 10817 049c 26000000 		.4byte	.LVL103
 10818 04a0 2A000000 		.4byte	.LVL104
 10819 04a4 0100     		.2byte	0x1
 10820 04a6 53       		.byte	0x53
 10821 04a7 00000000 		.4byte	0
 10822 04ab 00000000 		.4byte	0
 10823              	.LLST34:
 10824 04af 00000000 		.4byte	.LVL106
 10825 04b3 25000000 		.4byte	.LVL109-1
 10826 04b7 0100     		.2byte	0x1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 293


 10827 04b9 50       		.byte	0x50
 10828 04ba 25000000 		.4byte	.LVL109-1
 10829 04be 2E000000 		.4byte	.LVL110
 10830 04c2 0100     		.2byte	0x1
 10831 04c4 54       		.byte	0x54
 10832 04c5 00000000 		.4byte	0
 10833 04c9 00000000 		.4byte	0
 10834              	.LLST35:
 10835 04cd 00000000 		.4byte	.LVL106
 10836 04d1 22000000 		.4byte	.LVL108
 10837 04d5 0100     		.2byte	0x1
 10838 04d7 51       		.byte	0x51
 10839 04d8 22000000 		.4byte	.LVL108
 10840 04dc 74000000 		.4byte	.LVL113
 10841 04e0 0100     		.2byte	0x1
 10842 04e2 55       		.byte	0x55
 10843 04e3 74000000 		.4byte	.LVL113
 10844 04e7 95000000 		.4byte	.LVL115-1
 10845 04eb 0200     		.2byte	0x2
 10846 04ed 74       		.byte	0x74
 10847 04ee 2C       		.sleb128 44
 10848 04ef 00000000 		.4byte	0
 10849 04f3 00000000 		.4byte	0
 10850              	.LLST36:
 10851 04f7 2E000000 		.4byte	.LVL110
 10852 04fb D0000000 		.4byte	.LVL119
 10853 04ff 0100     		.2byte	0x1
 10854 0501 54       		.byte	0x54
 10855 0502 00000000 		.4byte	0
 10856 0506 00000000 		.4byte	0
 10857              	.LLST37:
 10858 050a 30000000 		.4byte	.LVL111
 10859 050e 7C000000 		.4byte	.LVL114
 10860 0512 0100     		.2byte	0x1
 10861 0514 53       		.byte	0x53
 10862 0515 00000000 		.4byte	0
 10863 0519 00000000 		.4byte	0
 10864              	.LLST38:
 10865 051d 68000000 		.4byte	.LVL112
 10866 0521 7C000000 		.4byte	.LVL114
 10867 0525 0100     		.2byte	0x1
 10868 0527 53       		.byte	0x53
 10869 0528 00000000 		.4byte	0
 10870 052c 00000000 		.4byte	0
 10871              	.LLST39:
 10872 0530 00000000 		.4byte	.LVL106
 10873 0534 68000000 		.4byte	.LVL112
 10874 0538 0200     		.2byte	0x2
 10875 053a 30       		.byte	0x30
 10876 053b 9F       		.byte	0x9f
 10877 053c 68000000 		.4byte	.LVL112
 10878 0540 CA000000 		.4byte	.LVL117
 10879 0544 0100     		.2byte	0x1
 10880 0546 56       		.byte	0x56
 10881 0547 00000000 		.4byte	0
 10882 054b 00000000 		.4byte	0
 10883              	.LLST40:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 294


 10884 054f 00000000 		.4byte	.LVL120
 10885 0553 27000000 		.4byte	.LVL122-1
 10886 0557 0100     		.2byte	0x1
 10887 0559 50       		.byte	0x50
 10888 055a 27000000 		.4byte	.LVL122-1
 10889 055e 80000000 		.4byte	.LVL127
 10890 0562 0100     		.2byte	0x1
 10891 0564 54       		.byte	0x54
 10892 0565 80000000 		.4byte	.LVL127
 10893 0569 88000000 		.4byte	.LFE523
 10894 056d 0400     		.2byte	0x4
 10895 056f F3       		.byte	0xf3
 10896 0570 01       		.uleb128 0x1
 10897 0571 50       		.byte	0x50
 10898 0572 9F       		.byte	0x9f
 10899 0573 00000000 		.4byte	0
 10900 0577 00000000 		.4byte	0
 10901              	.LLST41:
 10902 057b 00000000 		.4byte	.LVL120
 10903 057f 27000000 		.4byte	.LVL122-1
 10904 0583 0100     		.2byte	0x1
 10905 0585 50       		.byte	0x50
 10906 0586 27000000 		.4byte	.LVL122-1
 10907 058a 80000000 		.4byte	.LVL127
 10908 058e 0100     		.2byte	0x1
 10909 0590 54       		.byte	0x54
 10910 0591 80000000 		.4byte	.LVL127
 10911 0595 88000000 		.4byte	.LFE523
 10912 0599 0400     		.2byte	0x4
 10913 059b F3       		.byte	0xf3
 10914 059c 01       		.uleb128 0x1
 10915 059d 50       		.byte	0x50
 10916 059e 9F       		.byte	0x9f
 10917 059f 00000000 		.4byte	0
 10918 05a3 00000000 		.4byte	0
 10919              	.LLST42:
 10920 05a7 00000000 		.4byte	.LVL128
 10921 05ab 1B000000 		.4byte	.LVL131-1
 10922 05af 0100     		.2byte	0x1
 10923 05b1 50       		.byte	0x50
 10924 05b2 1B000000 		.4byte	.LVL131-1
 10925 05b6 98000000 		.4byte	.LVL140
 10926 05ba 0100     		.2byte	0x1
 10927 05bc 54       		.byte	0x54
 10928 05bd 98000000 		.4byte	.LVL140
 10929 05c1 A4000000 		.4byte	.LFE524
 10930 05c5 0400     		.2byte	0x4
 10931 05c7 F3       		.byte	0xf3
 10932 05c8 01       		.uleb128 0x1
 10933 05c9 50       		.byte	0x50
 10934 05ca 9F       		.byte	0x9f
 10935 05cb 00000000 		.4byte	0
 10936 05cf 00000000 		.4byte	0
 10937              	.LLST43:
 10938 05d3 02000000 		.4byte	.LVL129
 10939 05d7 54000000 		.4byte	.LVL133
 10940 05db 0200     		.2byte	0x2
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 295


 10941 05dd 30       		.byte	0x30
 10942 05de 9F       		.byte	0x9f
 10943 05df 54000000 		.4byte	.LVL133
 10944 05e3 80000000 		.4byte	.LVL136
 10945 05e7 0100     		.2byte	0x1
 10946 05e9 55       		.byte	0x55
 10947 05ea 80000000 		.4byte	.LVL136
 10948 05ee 90000000 		.4byte	.LVL138
 10949 05f2 0200     		.2byte	0x2
 10950 05f4 30       		.byte	0x30
 10951 05f5 9F       		.byte	0x9f
 10952 05f6 90000000 		.4byte	.LVL138
 10953 05fa 98000000 		.4byte	.LVL140
 10954 05fe 0100     		.2byte	0x1
 10955 0600 55       		.byte	0x55
 10956 0601 98000000 		.4byte	.LVL140
 10957 0605 A4000000 		.4byte	.LFE524
 10958 0609 0100     		.2byte	0x1
 10959 060b 50       		.byte	0x50
 10960 060c 00000000 		.4byte	0
 10961 0610 00000000 		.4byte	0
 10962              	.LLST44:
 10963 0614 02000000 		.4byte	.LVL129
 10964 0618 1B000000 		.4byte	.LVL131-1
 10965 061c 0100     		.2byte	0x1
 10966 061e 50       		.byte	0x50
 10967 061f 1B000000 		.4byte	.LVL131-1
 10968 0623 98000000 		.4byte	.LVL140
 10969 0627 0100     		.2byte	0x1
 10970 0629 54       		.byte	0x54
 10971 062a 98000000 		.4byte	.LVL140
 10972 062e A4000000 		.4byte	.LFE524
 10973 0632 0400     		.2byte	0x4
 10974 0634 F3       		.byte	0xf3
 10975 0635 01       		.uleb128 0x1
 10976 0636 50       		.byte	0x50
 10977 0637 9F       		.byte	0x9f
 10978 0638 00000000 		.4byte	0
 10979 063c 00000000 		.4byte	0
 10980              	.LLST45:
 10981 0640 90000000 		.4byte	.LVL138
 10982 0644 94000000 		.4byte	.LVL139
 10983 0648 0100     		.2byte	0x1
 10984 064a 57       		.byte	0x57
 10985 064b 00000000 		.4byte	0
 10986 064f 00000000 		.4byte	0
 10987              	.LLST46:
 10988 0653 16000000 		.4byte	.LVL141
 10989 0657 1D000000 		.4byte	.LVL142-1
 10990 065b 0100     		.2byte	0x1
 10991 065d 50       		.byte	0x50
 10992 065e 1E000000 		.4byte	.LVL142
 10993 0662 49000000 		.4byte	.LVL143-1
 10994 0666 0100     		.2byte	0x1
 10995 0668 50       		.byte	0x50
 10996 0669 4C000000 		.4byte	.LVL144
 10997 066d 64000000 		.4byte	.LVL146
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 296


 10998 0671 0100     		.2byte	0x1
 10999 0673 50       		.byte	0x50
 11000 0674 00000000 		.4byte	0
 11001 0678 00000000 		.4byte	0
 11002              	.LLST47:
 11003 067c 00000000 		.4byte	.LVL151
 11004 0680 0A000000 		.4byte	.LVL152
 11005 0684 0100     		.2byte	0x1
 11006 0686 50       		.byte	0x50
 11007 0687 00000000 		.4byte	0
 11008 068b 00000000 		.4byte	0
 11009              	.LLST48:
 11010 068f 0A000000 		.4byte	.LVL152
 11011 0693 1C000000 		.4byte	.LVL153
 11012 0697 0100     		.2byte	0x1
 11013 0699 53       		.byte	0x53
 11014 069a 1E000000 		.4byte	.LVL154
 11015 069e 28000000 		.4byte	.LFE532
 11016 06a2 0100     		.2byte	0x1
 11017 06a4 53       		.byte	0x53
 11018 06a5 00000000 		.4byte	0
 11019 06a9 00000000 		.4byte	0
 11020              	.LLST49:
 11021 06ad 5C000000 		.4byte	.LVL162
 11022 06b1 60000000 		.4byte	.LVL164
 11023 06b5 0100     		.2byte	0x1
 11024 06b7 55       		.byte	0x55
 11025 06b8 84000000 		.4byte	.LVL166
 11026 06bc DA000000 		.4byte	.LVL171
 11027 06c0 0100     		.2byte	0x1
 11028 06c2 55       		.byte	0x55
 11029 06c3 00000000 		.4byte	0
 11030 06c7 00000000 		.4byte	0
 11031              	.LLST50:
 11032 06cb 86000000 		.4byte	.LVL167
 11033 06cf 99000000 		.4byte	.LVL168-1
 11034 06d3 0100     		.2byte	0x1
 11035 06d5 53       		.byte	0x53
 11036 06d6 00000000 		.4byte	0
 11037 06da 00000000 		.4byte	0
 11038              	.LLST51:
 11039 06de 04000000 		.4byte	.LVL155
 11040 06e2 5C000000 		.4byte	.LVL162
 11041 06e6 0200     		.2byte	0x2
 11042 06e8 30       		.byte	0x30
 11043 06e9 9F       		.byte	0x9f
 11044 06ea 5C000000 		.4byte	.LVL162
 11045 06ee 5E000000 		.4byte	.LVL163
 11046 06f2 0100     		.2byte	0x1
 11047 06f4 56       		.byte	0x56
 11048 06f5 60000000 		.4byte	.LVL164
 11049 06f9 62000000 		.4byte	.LVL165
 11050 06fd 0200     		.2byte	0x2
 11051 06ff 30       		.byte	0x30
 11052 0700 9F       		.byte	0x9f
 11053 0701 62000000 		.4byte	.LVL165
 11054 0705 DA000000 		.4byte	.LVL171
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 297


 11055 0709 0100     		.2byte	0x1
 11056 070b 56       		.byte	0x56
 11057 070c DA000000 		.4byte	.LVL171
 11058 0710 E8000000 		.4byte	.LVL172
 11059 0714 0200     		.2byte	0x2
 11060 0716 30       		.byte	0x30
 11061 0717 9F       		.byte	0x9f
 11062 0718 E8000000 		.4byte	.LVL172
 11063 071c F8000000 		.4byte	.LVL174
 11064 0720 0100     		.2byte	0x1
 11065 0722 56       		.byte	0x56
 11066 0723 F8000000 		.4byte	.LVL174
 11067 0727 FC000000 		.4byte	.LFE533
 11068 072b 0100     		.2byte	0x1
 11069 072d 50       		.byte	0x50
 11070 072e 00000000 		.4byte	0
 11071 0732 00000000 		.4byte	0
 11072              	.LLST52:
 11073 0736 16000000 		.4byte	.LVL156
 11074 073a DA000000 		.4byte	.LVL171
 11075 073e 0100     		.2byte	0x1
 11076 0740 54       		.byte	0x54
 11077 0741 00000000 		.4byte	0
 11078 0745 00000000 		.4byte	0
 11079              	.LLST53:
 11080 0749 38000000 		.4byte	.LVL158
 11081 074d 46000000 		.4byte	.LVL159
 11082 0751 0100     		.2byte	0x1
 11083 0753 52       		.byte	0x52
 11084 0754 46000000 		.4byte	.LVL159
 11085 0758 4C000000 		.4byte	.LVL160
 11086 075c 0500     		.2byte	0x5
 11087 075e 03       		.byte	0x3
 11088 075f FC010000 		.4byte	pxOverflowDelayedTaskList
 11089 0763 00000000 		.4byte	0
 11090 0767 00000000 		.4byte	0
 11091              	.LLST54:
 11092 076b 00000000 		.4byte	.LVL175
 11093 076f 40000000 		.4byte	.LVL178
 11094 0773 0200     		.2byte	0x2
 11095 0775 30       		.byte	0x30
 11096 0776 9F       		.byte	0x9f
 11097 0777 40000000 		.4byte	.LVL178
 11098 077b 8C000000 		.4byte	.LVL183
 11099 077f 0100     		.2byte	0x1
 11100 0781 54       		.byte	0x54
 11101 0782 8C000000 		.4byte	.LVL183
 11102 0786 8E000000 		.4byte	.LVL184
 11103 078a 0200     		.2byte	0x2
 11104 078c 30       		.byte	0x30
 11105 078d 9F       		.byte	0x9f
 11106 078e 8E000000 		.4byte	.LVL184
 11107 0792 A2000000 		.4byte	.LVL186
 11108 0796 0100     		.2byte	0x1
 11109 0798 54       		.byte	0x54
 11110 0799 DA000000 		.4byte	.LVL192
 11111 079d DE000000 		.4byte	.LVL193
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 298


 11112 07a1 0200     		.2byte	0x2
 11113 07a3 30       		.byte	0x30
 11114 07a4 9F       		.byte	0x9f
 11115 07a5 00000000 		.4byte	0
 11116 07a9 00000000 		.4byte	0
 11117              	.LLST55:
 11118 07ad 00000000 		.4byte	.LVL175
 11119 07b1 C6000000 		.4byte	.LVL190
 11120 07b5 0200     		.2byte	0x2
 11121 07b7 30       		.byte	0x30
 11122 07b8 9F       		.byte	0x9f
 11123 07b9 C6000000 		.4byte	.LVL190
 11124 07bd DA000000 		.4byte	.LVL192
 11125 07c1 0200     		.2byte	0x2
 11126 07c3 31       		.byte	0x31
 11127 07c4 9F       		.byte	0x9f
 11128 07c5 DA000000 		.4byte	.LVL192
 11129 07c9 E0000000 		.4byte	.LVL194
 11130 07cd 0200     		.2byte	0x2
 11131 07cf 30       		.byte	0x30
 11132 07d0 9F       		.byte	0x9f
 11133 07d1 E0000000 		.4byte	.LVL194
 11134 07d5 E8000000 		.4byte	.LVL196
 11135 07d9 0100     		.2byte	0x1
 11136 07db 54       		.byte	0x54
 11137 07dc E8000000 		.4byte	.LVL196
 11138 07e0 F0000000 		.4byte	.LFE528
 11139 07e4 0100     		.2byte	0x1
 11140 07e6 50       		.byte	0x50
 11141 07e7 00000000 		.4byte	0
 11142 07eb 00000000 		.4byte	0
 11143              	.LLST56:
 11144 07ef A2000000 		.4byte	.LVL186
 11145 07f3 B2000000 		.4byte	.LVL188
 11146 07f7 0100     		.2byte	0x1
 11147 07f9 54       		.byte	0x54
 11148 07fa B2000000 		.4byte	.LVL188
 11149 07fe B4000000 		.4byte	.LVL189
 11150 0802 0300     		.2byte	0x3
 11151 0804 74       		.byte	0x74
 11152 0805 7F       		.sleb128 -1
 11153 0806 9F       		.byte	0x9f
 11154 0807 B4000000 		.4byte	.LVL189
 11155 080b D8000000 		.4byte	.LVL191
 11156 080f 0100     		.2byte	0x1
 11157 0811 54       		.byte	0x54
 11158 0812 DE000000 		.4byte	.LVL193
 11159 0816 E0000000 		.4byte	.LVL194
 11160 081a 0100     		.2byte	0x1
 11161 081c 54       		.byte	0x54
 11162 081d 00000000 		.4byte	0
 11163 0821 00000000 		.4byte	0
 11164              	.LLST57:
 11165 0825 00000000 		.4byte	.LVL197
 11166 0829 4B000000 		.4byte	.LVL202-1
 11167 082d 0100     		.2byte	0x1
 11168 082f 50       		.byte	0x50
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 299


 11169 0830 4B000000 		.4byte	.LVL202-1
 11170 0834 A4000000 		.4byte	.LVL209
 11171 0838 0100     		.2byte	0x1
 11172 083a 55       		.byte	0x55
 11173 083b A4000000 		.4byte	.LVL209
 11174 083f AC000000 		.4byte	.LFE516
 11175 0843 0400     		.2byte	0x4
 11176 0845 F3       		.byte	0xf3
 11177 0846 01       		.uleb128 0x1
 11178 0847 50       		.byte	0x50
 11179 0848 9F       		.byte	0x9f
 11180 0849 00000000 		.4byte	0
 11181 084d 00000000 		.4byte	0
 11182              	.LLST58:
 11183 0851 00000000 		.4byte	.LVL197
 11184 0855 4B000000 		.4byte	.LVL202-1
 11185 0859 0100     		.2byte	0x1
 11186 085b 51       		.byte	0x51
 11187 085c 4B000000 		.4byte	.LVL202-1
 11188 0860 A4000000 		.4byte	.LVL209
 11189 0864 0100     		.2byte	0x1
 11190 0866 54       		.byte	0x54
 11191 0867 A4000000 		.4byte	.LVL209
 11192 086b AC000000 		.4byte	.LFE516
 11193 086f 0400     		.2byte	0x4
 11194 0871 F3       		.byte	0xf3
 11195 0872 01       		.uleb128 0x1
 11196 0873 51       		.byte	0x51
 11197 0874 9F       		.byte	0x9f
 11198 0875 00000000 		.4byte	0
 11199 0879 00000000 		.4byte	0
 11200              	.LLST59:
 11201 087d 56000000 		.4byte	.LVL204
 11202 0881 8B000000 		.4byte	.LVL207-1
 11203 0885 0100     		.2byte	0x1
 11204 0887 53       		.byte	0x53
 11205 0888 00000000 		.4byte	0
 11206 088c 00000000 		.4byte	0
 11207              	.LLST60:
 11208 0890 02000000 		.4byte	.LVL198
 11209 0894 80000000 		.4byte	.LVL205
 11210 0898 0200     		.2byte	0x2
 11211 089a 30       		.byte	0x30
 11212 089b 9F       		.byte	0x9f
 11213 089c 80000000 		.4byte	.LVL205
 11214 08a0 8B000000 		.4byte	.LVL207-1
 11215 08a4 0100     		.2byte	0x1
 11216 08a6 52       		.byte	0x52
 11217 08a7 00000000 		.4byte	0
 11218 08ab 00000000 		.4byte	0
 11219              	.LLST61:
 11220 08af 52000000 		.4byte	.LVL203
 11221 08b3 88000000 		.4byte	.LVL206
 11222 08b7 0100     		.2byte	0x1
 11223 08b9 50       		.byte	0x50
 11224 08ba 00000000 		.4byte	0
 11225 08be 00000000 		.4byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 300


 11226              	.LLST62:
 11227 08c2 00000000 		.4byte	.LVL210
 11228 08c6 23000000 		.4byte	.LVL213-1
 11229 08ca 0100     		.2byte	0x1
 11230 08cc 50       		.byte	0x50
 11231 08cd 23000000 		.4byte	.LVL213-1
 11232 08d1 32000000 		.4byte	.LVL216
 11233 08d5 0100     		.2byte	0x1
 11234 08d7 54       		.byte	0x54
 11235 08d8 32000000 		.4byte	.LVL216
 11236 08dc 34000000 		.4byte	.LVL217
 11237 08e0 0100     		.2byte	0x1
 11238 08e2 50       		.byte	0x50
 11239 08e3 34000000 		.4byte	.LVL217
 11240 08e7 50000000 		.4byte	.LFE517
 11241 08eb 0400     		.2byte	0x4
 11242 08ed F3       		.byte	0xf3
 11243 08ee 01       		.uleb128 0x1
 11244 08ef 50       		.byte	0x50
 11245 08f0 9F       		.byte	0x9f
 11246 08f1 00000000 		.4byte	0
 11247 08f5 00000000 		.4byte	0
 11248              	.LLST63:
 11249 08f9 02000000 		.4byte	.LVL211
 11250 08fd 30000000 		.4byte	.LVL215
 11251 0901 0200     		.2byte	0x2
 11252 0903 30       		.byte	0x30
 11253 0904 9F       		.byte	0x9f
 11254 0905 30000000 		.4byte	.LVL215
 11255 0909 32000000 		.4byte	.LVL216
 11256 090d 0100     		.2byte	0x1
 11257 090f 50       		.byte	0x50
 11258 0910 32000000 		.4byte	.LVL216
 11259 0914 34000000 		.4byte	.LVL217
 11260 0918 0200     		.2byte	0x2
 11261 091a 30       		.byte	0x30
 11262 091b 9F       		.byte	0x9f
 11263 091c 34000000 		.4byte	.LVL217
 11264 0920 50000000 		.4byte	.LFE517
 11265 0924 0100     		.2byte	0x1
 11266 0926 50       		.byte	0x50
 11267 0927 00000000 		.4byte	0
 11268 092b 00000000 		.4byte	0
 11269              	.LLST64:
 11270 092f 22000000 		.4byte	.LVL218
 11271 0933 3C000000 		.4byte	.LVL219
 11272 0937 0100     		.2byte	0x1
 11273 0939 53       		.byte	0x53
 11274 093a 00000000 		.4byte	0
 11275 093e 00000000 		.4byte	0
 11276              	.LLST65:
 11277 0942 58000000 		.4byte	.LVL221
 11278 0946 6C000000 		.4byte	.LVL222
 11279 094a 0100     		.2byte	0x1
 11280 094c 53       		.byte	0x53
 11281 094d 6E000000 		.4byte	.LVL223
 11282 0951 C8000000 		.4byte	.LFE534
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 301


 11283 0955 0100     		.2byte	0x1
 11284 0957 53       		.byte	0x53
 11285 0958 00000000 		.4byte	0
 11286 095c 00000000 		.4byte	0
 11287              	.LLST66:
 11288 0960 00000000 		.4byte	.LVL226
 11289 0964 07000000 		.4byte	.LVL227-1
 11290 0968 0100     		.2byte	0x1
 11291 096a 50       		.byte	0x50
 11292 096b 07000000 		.4byte	.LVL227-1
 11293 096f 10000000 		.4byte	.LVL228
 11294 0973 0100     		.2byte	0x1
 11295 0975 54       		.byte	0x54
 11296 0976 00000000 		.4byte	0
 11297 097a 00000000 		.4byte	0
 11298              	.LLST67:
 11299 097e 10000000 		.4byte	.LVL228
 11300 0982 AE000000 		.4byte	.LVL240
 11301 0986 0100     		.2byte	0x1
 11302 0988 54       		.byte	0x54
 11303 0989 00000000 		.4byte	0
 11304 098d 00000000 		.4byte	0
 11305              	.LLST68:
 11306 0991 00000000 		.4byte	.LVL241
 11307 0995 23000000 		.4byte	.LVL244-1
 11308 0999 0100     		.2byte	0x1
 11309 099b 50       		.byte	0x50
 11310 099c 23000000 		.4byte	.LVL244-1
 11311 09a0 34000000 		.4byte	.LFE535
 11312 09a4 0400     		.2byte	0x4
 11313 09a6 F3       		.byte	0xf3
 11314 09a7 01       		.uleb128 0x1
 11315 09a8 50       		.byte	0x50
 11316 09a9 9F       		.byte	0x9f
 11317 09aa 00000000 		.4byte	0
 11318 09ae 00000000 		.4byte	0
 11319              	.LLST69:
 11320 09b2 00000000 		.4byte	.LVL241
 11321 09b6 1E000000 		.4byte	.LVL243
 11322 09ba 0100     		.2byte	0x1
 11323 09bc 51       		.byte	0x51
 11324 09bd 1E000000 		.4byte	.LVL243
 11325 09c1 2E000000 		.4byte	.LVL246
 11326 09c5 0100     		.2byte	0x1
 11327 09c7 54       		.byte	0x54
 11328 09c8 2E000000 		.4byte	.LVL246
 11329 09cc 34000000 		.4byte	.LFE535
 11330 09d0 0400     		.2byte	0x4
 11331 09d2 F3       		.byte	0xf3
 11332 09d3 01       		.uleb128 0x1
 11333 09d4 51       		.byte	0x51
 11334 09d5 9F       		.byte	0x9f
 11335 09d6 00000000 		.4byte	0
 11336 09da 00000000 		.4byte	0
 11337              	.LLST70:
 11338 09de 00000000 		.4byte	.LVL247
 11339 09e2 18000000 		.4byte	.LVL249
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 302


 11340 09e6 0100     		.2byte	0x1
 11341 09e8 50       		.byte	0x50
 11342 09e9 18000000 		.4byte	.LVL249
 11343 09ed 2E000000 		.4byte	.LVL250
 11344 09f1 0100     		.2byte	0x1
 11345 09f3 53       		.byte	0x53
 11346 09f4 2E000000 		.4byte	.LVL250
 11347 09f8 30000000 		.4byte	.LVL251
 11348 09fc 0400     		.2byte	0x4
 11349 09fe F3       		.byte	0xf3
 11350 09ff 01       		.uleb128 0x1
 11351 0a00 50       		.byte	0x50
 11352 0a01 9F       		.byte	0x9f
 11353 0a02 30000000 		.4byte	.LVL251
 11354 0a06 38000000 		.4byte	.LVL252
 11355 0a0a 0100     		.2byte	0x1
 11356 0a0c 53       		.byte	0x53
 11357 0a0d 38000000 		.4byte	.LVL252
 11358 0a11 4D000000 		.4byte	.LVL256-1
 11359 0a15 0100     		.2byte	0x1
 11360 0a17 50       		.byte	0x50
 11361 0a18 4D000000 		.4byte	.LVL256-1
 11362 0a1c 5C000000 		.4byte	.LFE536
 11363 0a20 0400     		.2byte	0x4
 11364 0a22 F3       		.byte	0xf3
 11365 0a23 01       		.uleb128 0x1
 11366 0a24 50       		.byte	0x50
 11367 0a25 9F       		.byte	0x9f
 11368 0a26 00000000 		.4byte	0
 11369 0a2a 00000000 		.4byte	0
 11370              	.LLST71:
 11371 0a2e 00000000 		.4byte	.LVL247
 11372 0a32 3E000000 		.4byte	.LVL254
 11373 0a36 0100     		.2byte	0x1
 11374 0a38 51       		.byte	0x51
 11375 0a39 3E000000 		.4byte	.LVL254
 11376 0a3d 42000000 		.4byte	.LVL255
 11377 0a41 0100     		.2byte	0x1
 11378 0a43 53       		.byte	0x53
 11379 0a44 42000000 		.4byte	.LVL255
 11380 0a48 5C000000 		.4byte	.LFE536
 11381 0a4c 0400     		.2byte	0x4
 11382 0a4e F3       		.byte	0xf3
 11383 0a4f 01       		.uleb128 0x1
 11384 0a50 51       		.byte	0x51
 11385 0a51 9F       		.byte	0x9f
 11386 0a52 00000000 		.4byte	0
 11387 0a56 00000000 		.4byte	0
 11388              	.LLST72:
 11389 0a5a 00000000 		.4byte	.LVL247
 11390 0a5e 3A000000 		.4byte	.LVL253
 11391 0a62 0100     		.2byte	0x1
 11392 0a64 52       		.byte	0x52
 11393 0a65 3A000000 		.4byte	.LVL253
 11394 0a69 58000000 		.4byte	.LVL258
 11395 0a6d 0100     		.2byte	0x1
 11396 0a6f 54       		.byte	0x54
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 303


 11397 0a70 58000000 		.4byte	.LVL258
 11398 0a74 5C000000 		.4byte	.LFE536
 11399 0a78 0400     		.2byte	0x4
 11400 0a7a F3       		.byte	0xf3
 11401 0a7b 01       		.uleb128 0x1
 11402 0a7c 52       		.byte	0x52
 11403 0a7d 9F       		.byte	0x9f
 11404 0a7e 00000000 		.4byte	0
 11405 0a82 00000000 		.4byte	0
 11406              	.LLST73:
 11407 0a86 00000000 		.4byte	.LVL259
 11408 0a8a 25000000 		.4byte	.LVL263-1
 11409 0a8e 0100     		.2byte	0x1
 11410 0a90 50       		.byte	0x50
 11411 0a91 25000000 		.4byte	.LVL263-1
 11412 0a95 3C000000 		.4byte	.LFE537
 11413 0a99 0400     		.2byte	0x4
 11414 0a9b F3       		.byte	0xf3
 11415 0a9c 01       		.uleb128 0x1
 11416 0a9d 50       		.byte	0x50
 11417 0a9e 9F       		.byte	0x9f
 11418 0a9f 00000000 		.4byte	0
 11419 0aa3 00000000 		.4byte	0
 11420              	.LLST74:
 11421 0aa7 00000000 		.4byte	.LVL259
 11422 0aab 20000000 		.4byte	.LVL262
 11423 0aaf 0100     		.2byte	0x1
 11424 0ab1 51       		.byte	0x51
 11425 0ab2 20000000 		.4byte	.LVL262
 11426 0ab6 36000000 		.4byte	.LVL266
 11427 0aba 0100     		.2byte	0x1
 11428 0abc 54       		.byte	0x54
 11429 0abd 00000000 		.4byte	0
 11430 0ac1 00000000 		.4byte	0
 11431              	.LLST75:
 11432 0ac5 00000000 		.4byte	.LVL259
 11433 0ac9 1C000000 		.4byte	.LVL261
 11434 0acd 0100     		.2byte	0x1
 11435 0acf 52       		.byte	0x52
 11436 0ad0 1C000000 		.4byte	.LVL261
 11437 0ad4 36000000 		.4byte	.LVL266
 11438 0ad8 0100     		.2byte	0x1
 11439 0ada 55       		.byte	0x55
 11440 0adb 36000000 		.4byte	.LVL266
 11441 0adf 3C000000 		.4byte	.LFE537
 11442 0ae3 0400     		.2byte	0x4
 11443 0ae5 F3       		.byte	0xf3
 11444 0ae6 01       		.uleb128 0x1
 11445 0ae7 52       		.byte	0x52
 11446 0ae8 9F       		.byte	0x9f
 11447 0ae9 00000000 		.4byte	0
 11448 0aed 00000000 		.4byte	0
 11449              	.LLST76:
 11450 0af1 00000000 		.4byte	.LVL267
 11451 0af5 20000000 		.4byte	.LVL270
 11452 0af9 0100     		.2byte	0x1
 11453 0afb 50       		.byte	0x50
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 304


 11454 0afc 20000000 		.4byte	.LVL270
 11455 0b00 88000000 		.4byte	.LFE538
 11456 0b04 0400     		.2byte	0x4
 11457 0b06 F3       		.byte	0xf3
 11458 0b07 01       		.uleb128 0x1
 11459 0b08 50       		.byte	0x50
 11460 0b09 9F       		.byte	0x9f
 11461 0b0a 00000000 		.4byte	0
 11462 0b0e 00000000 		.4byte	0
 11463              	.LLST77:
 11464 0b12 06000000 		.4byte	.LVL268
 11465 0b16 7C000000 		.4byte	.LVL278
 11466 0b1a 0100     		.2byte	0x1
 11467 0b1c 54       		.byte	0x54
 11468 0b1d 00000000 		.4byte	0
 11469 0b21 00000000 		.4byte	0
 11470              	.LLST78:
 11471 0b25 6E000000 		.4byte	.LVL275
 11472 0b29 78000000 		.4byte	.LVL276
 11473 0b2d 0200     		.2byte	0x2
 11474 0b2f 31       		.byte	0x31
 11475 0b30 9F       		.byte	0x9f
 11476 0b31 7A000000 		.4byte	.LVL277
 11477 0b35 88000000 		.4byte	.LFE538
 11478 0b39 0100     		.2byte	0x1
 11479 0b3b 50       		.byte	0x50
 11480 0b3c 00000000 		.4byte	0
 11481 0b40 00000000 		.4byte	0
 11482              	.LLST79:
 11483 0b44 00000000 		.4byte	.LVL279
 11484 0b48 3B000000 		.4byte	.LVL283-1
 11485 0b4c 0100     		.2byte	0x1
 11486 0b4e 50       		.byte	0x50
 11487 0b4f 3B000000 		.4byte	.LVL283-1
 11488 0b53 84000000 		.4byte	.LFE539
 11489 0b57 0400     		.2byte	0x4
 11490 0b59 F3       		.byte	0xf3
 11491 0b5a 01       		.uleb128 0x1
 11492 0b5b 50       		.byte	0x50
 11493 0b5c 9F       		.byte	0x9f
 11494 0b5d 00000000 		.4byte	0
 11495 0b61 00000000 		.4byte	0
 11496              	.LLST80:
 11497 0b65 00000000 		.4byte	.LVL279
 11498 0b69 3B000000 		.4byte	.LVL283-1
 11499 0b6d 0100     		.2byte	0x1
 11500 0b6f 51       		.byte	0x51
 11501 0b70 3B000000 		.4byte	.LVL283-1
 11502 0b74 84000000 		.4byte	.LFE539
 11503 0b78 0400     		.2byte	0x4
 11504 0b7a F3       		.byte	0xf3
 11505 0b7b 01       		.uleb128 0x1
 11506 0b7c 51       		.byte	0x51
 11507 0b7d 9F       		.byte	0x9f
 11508 0b7e 00000000 		.4byte	0
 11509 0b82 00000000 		.4byte	0
 11510              	.LLST81:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 305


 11511 0b86 24000000 		.4byte	.LVL281
 11512 0b8a 7E000000 		.4byte	.LVL286
 11513 0b8e 0100     		.2byte	0x1
 11514 0b90 54       		.byte	0x54
 11515 0b91 00000000 		.4byte	0
 11516 0b95 00000000 		.4byte	0
 11517              	.LLST82:
 11518 0b99 00000000 		.4byte	.LVL287
 11519 0b9d 1B000000 		.4byte	.LVL289-1
 11520 0ba1 0100     		.2byte	0x1
 11521 0ba3 50       		.byte	0x50
 11522 0ba4 1B000000 		.4byte	.LVL289-1
 11523 0ba8 30000000 		.4byte	.LVL291
 11524 0bac 0100     		.2byte	0x1
 11525 0bae 54       		.byte	0x54
 11526 0baf 30000000 		.4byte	.LVL291
 11527 0bb3 34000000 		.4byte	.LFE540
 11528 0bb7 0400     		.2byte	0x4
 11529 0bb9 F3       		.byte	0xf3
 11530 0bba 01       		.uleb128 0x1
 11531 0bbb 50       		.byte	0x50
 11532 0bbc 9F       		.byte	0x9f
 11533 0bbd 00000000 		.4byte	0
 11534 0bc1 00000000 		.4byte	0
 11535              	.LLST83:
 11536 0bc5 00000000 		.4byte	.LVL293
 11537 0bc9 31000000 		.4byte	.LVL296-1
 11538 0bcd 0100     		.2byte	0x1
 11539 0bcf 50       		.byte	0x50
 11540 0bd0 31000000 		.4byte	.LVL296-1
 11541 0bd4 7C000000 		.4byte	.LVL310
 11542 0bd8 0100     		.2byte	0x1
 11543 0bda 55       		.byte	0x55
 11544 0bdb 7C000000 		.4byte	.LVL310
 11545 0bdf 80000000 		.4byte	.LFE542
 11546 0be3 0400     		.2byte	0x4
 11547 0be5 F3       		.byte	0xf3
 11548 0be6 01       		.uleb128 0x1
 11549 0be7 50       		.byte	0x50
 11550 0be8 9F       		.byte	0x9f
 11551 0be9 00000000 		.4byte	0
 11552 0bed 00000000 		.4byte	0
 11553              	.LLST84:
 11554 0bf1 00000000 		.4byte	.LVL293
 11555 0bf5 31000000 		.4byte	.LVL296-1
 11556 0bf9 0100     		.2byte	0x1
 11557 0bfb 51       		.byte	0x51
 11558 0bfc 31000000 		.4byte	.LVL296-1
 11559 0c00 64000000 		.4byte	.LVL301
 11560 0c04 0100     		.2byte	0x1
 11561 0c06 54       		.byte	0x54
 11562 0c07 64000000 		.4byte	.LVL301
 11563 0c0b 66000000 		.4byte	.LVL302
 11564 0c0f 0400     		.2byte	0x4
 11565 0c11 F3       		.byte	0xf3
 11566 0c12 01       		.uleb128 0x1
 11567 0c13 51       		.byte	0x51
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 306


 11568 0c14 9F       		.byte	0x9f
 11569 0c15 66000000 		.4byte	.LVL302
 11570 0c19 6C000000 		.4byte	.LVL304
 11571 0c1d 0100     		.2byte	0x1
 11572 0c1f 54       		.byte	0x54
 11573 0c20 6C000000 		.4byte	.LVL304
 11574 0c24 6E000000 		.4byte	.LVL305
 11575 0c28 0400     		.2byte	0x4
 11576 0c2a F3       		.byte	0xf3
 11577 0c2b 01       		.uleb128 0x1
 11578 0c2c 51       		.byte	0x51
 11579 0c2d 9F       		.byte	0x9f
 11580 0c2e 6E000000 		.4byte	.LVL305
 11581 0c32 70000000 		.4byte	.LVL306
 11582 0c36 0100     		.2byte	0x1
 11583 0c38 54       		.byte	0x54
 11584 0c39 70000000 		.4byte	.LVL306
 11585 0c3d 72000000 		.4byte	.LVL307
 11586 0c41 0400     		.2byte	0x4
 11587 0c43 F3       		.byte	0xf3
 11588 0c44 01       		.uleb128 0x1
 11589 0c45 51       		.byte	0x51
 11590 0c46 9F       		.byte	0x9f
 11591 0c47 72000000 		.4byte	.LVL307
 11592 0c4b 74000000 		.4byte	.LVL308
 11593 0c4f 0100     		.2byte	0x1
 11594 0c51 54       		.byte	0x54
 11595 0c52 74000000 		.4byte	.LVL308
 11596 0c56 80000000 		.4byte	.LFE542
 11597 0c5a 0400     		.2byte	0x4
 11598 0c5c F3       		.byte	0xf3
 11599 0c5d 01       		.uleb128 0x1
 11600 0c5e 51       		.byte	0x51
 11601 0c5f 9F       		.byte	0x9f
 11602 0c60 00000000 		.4byte	0
 11603 0c64 00000000 		.4byte	0
 11604              	.LLST85:
 11605 0c68 62000000 		.4byte	.LVL300
 11606 0c6c 66000000 		.4byte	.LVL302
 11607 0c70 0200     		.2byte	0x2
 11608 0c72 30       		.byte	0x30
 11609 0c73 9F       		.byte	0x9f
 11610 0c74 6A000000 		.4byte	.LVL303
 11611 0c78 6E000000 		.4byte	.LVL305
 11612 0c7c 0200     		.2byte	0x2
 11613 0c7e 31       		.byte	0x31
 11614 0c7f 9F       		.byte	0x9f
 11615 0c80 74000000 		.4byte	.LVL308
 11616 0c84 7C000000 		.4byte	.LVL310
 11617 0c88 0100     		.2byte	0x1
 11618 0c8a 54       		.byte	0x54
 11619 0c8b 7C000000 		.4byte	.LVL310
 11620 0c8f 80000000 		.4byte	.LFE542
 11621 0c93 0100     		.2byte	0x1
 11622 0c95 50       		.byte	0x50
 11623 0c96 00000000 		.4byte	0
 11624 0c9a 00000000 		.4byte	0
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 307


 11625              	.LLST86:
 11626 0c9e 38000000 		.4byte	.LVL297
 11627 0ca2 5E000000 		.4byte	.LVL299
 11628 0ca6 0100     		.2byte	0x1
 11629 0ca8 50       		.byte	0x50
 11630 0ca9 66000000 		.4byte	.LVL302
 11631 0cad 74000000 		.4byte	.LVL308
 11632 0cb1 0100     		.2byte	0x1
 11633 0cb3 50       		.byte	0x50
 11634 0cb4 00000000 		.4byte	0
 11635 0cb8 00000000 		.4byte	0
 11636              	.LLST87:
 11637 0cbc 3C000000 		.4byte	.LVL298
 11638 0cc0 61000000 		.4byte	.LVL300-1
 11639 0cc4 0100     		.2byte	0x1
 11640 0cc6 52       		.byte	0x52
 11641 0cc7 66000000 		.4byte	.LVL302
 11642 0ccb 74000000 		.4byte	.LVL308
 11643 0ccf 0100     		.2byte	0x1
 11644 0cd1 52       		.byte	0x52
 11645 0cd2 00000000 		.4byte	0
 11646 0cd6 00000000 		.4byte	0
 11647              	.LLST88:
 11648 0cda 00000000 		.4byte	.LVL311
 11649 0cde 0C000000 		.4byte	.LVL312
 11650 0ce2 0100     		.2byte	0x1
 11651 0ce4 50       		.byte	0x50
 11652 0ce5 00000000 		.4byte	0
 11653 0ce9 00000000 		.4byte	0
 11654              	.LLST89:
 11655 0ced 00000000 		.4byte	.LVL311
 11656 0cf1 0E000000 		.4byte	.LVL313
 11657 0cf5 0100     		.2byte	0x1
 11658 0cf7 51       		.byte	0x51
 11659 0cf8 0E000000 		.4byte	.LVL313
 11660 0cfc 12000000 		.4byte	.LVL314
 11661 0d00 0300     		.2byte	0x3
 11662 0d02 71       		.byte	0x71
 11663 0d03 70       		.sleb128 -16
 11664 0d04 9F       		.byte	0x9f
 11665 0d05 12000000 		.4byte	.LVL314
 11666 0d09 1C000000 		.4byte	.LFE545
 11667 0d0d 0400     		.2byte	0x4
 11668 0d0f F3       		.byte	0xf3
 11669 0d10 01       		.uleb128 0x1
 11670 0d11 51       		.byte	0x51
 11671 0d12 9F       		.byte	0x9f
 11672 0d13 00000000 		.4byte	0
 11673 0d17 00000000 		.4byte	0
 11674              	.LLST90:
 11675 0d1b 0C000000 		.4byte	.LVL312
 11676 0d1f 14000000 		.4byte	.LVL315
 11677 0d23 0100     		.2byte	0x1
 11678 0d25 50       		.byte	0x50
 11679 0d26 00000000 		.4byte	0
 11680 0d2a 00000000 		.4byte	0
 11681              	.LLST91:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 308


 11682 0d2e 00000000 		.4byte	.LVL316
 11683 0d32 0C000000 		.4byte	.LVL317
 11684 0d36 0100     		.2byte	0x1
 11685 0d38 50       		.byte	0x50
 11686 0d39 16000000 		.4byte	.LVL321
 11687 0d3d 18000000 		.4byte	.LVL322
 11688 0d41 0100     		.2byte	0x1
 11689 0d43 50       		.byte	0x50
 11690 0d44 18000000 		.4byte	.LVL322
 11691 0d48 20000000 		.4byte	.LFE546
 11692 0d4c 0400     		.2byte	0x4
 11693 0d4e F3       		.byte	0xf3
 11694 0d4f 01       		.uleb128 0x1
 11695 0d50 50       		.byte	0x50
 11696 0d51 9F       		.byte	0x9f
 11697 0d52 00000000 		.4byte	0
 11698 0d56 00000000 		.4byte	0
 11699              	.LLST92:
 11700 0d5a 00000000 		.4byte	.LVL316
 11701 0d5e 0E000000 		.4byte	.LVL318
 11702 0d62 0100     		.2byte	0x1
 11703 0d64 51       		.byte	0x51
 11704 0d65 0E000000 		.4byte	.LVL318
 11705 0d69 16000000 		.4byte	.LVL321
 11706 0d6d 0300     		.2byte	0x3
 11707 0d6f 71       		.byte	0x71
 11708 0d70 70       		.sleb128 -16
 11709 0d71 9F       		.byte	0x9f
 11710 0d72 16000000 		.4byte	.LVL321
 11711 0d76 20000000 		.4byte	.LFE546
 11712 0d7a 0100     		.2byte	0x1
 11713 0d7c 51       		.byte	0x51
 11714 0d7d 00000000 		.4byte	0
 11715 0d81 00000000 		.4byte	0
 11716              	.LLST93:
 11717 0d85 00000000 		.4byte	.LVL316
 11718 0d89 14000000 		.4byte	.LVL320
 11719 0d8d 0200     		.2byte	0x2
 11720 0d8f 30       		.byte	0x30
 11721 0d90 9F       		.byte	0x9f
 11722 0d91 14000000 		.4byte	.LVL320
 11723 0d95 16000000 		.4byte	.LVL321
 11724 0d99 0100     		.2byte	0x1
 11725 0d9b 50       		.byte	0x50
 11726 0d9c 16000000 		.4byte	.LVL321
 11727 0da0 18000000 		.4byte	.LVL322
 11728 0da4 0200     		.2byte	0x2
 11729 0da6 30       		.byte	0x30
 11730 0da7 9F       		.byte	0x9f
 11731 0da8 18000000 		.4byte	.LVL322
 11732 0dac 20000000 		.4byte	.LFE546
 11733 0db0 0100     		.2byte	0x1
 11734 0db2 50       		.byte	0x50
 11735 0db3 00000000 		.4byte	0
 11736 0db7 00000000 		.4byte	0
 11737              	.LLST94:
 11738 0dbb 0C000000 		.4byte	.LVL317
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 309


 11739 0dbf 12000000 		.4byte	.LVL319
 11740 0dc3 0100     		.2byte	0x1
 11741 0dc5 50       		.byte	0x50
 11742 0dc6 00000000 		.4byte	0
 11743 0dca 00000000 		.4byte	0
 11744              	.LLST95:
 11745 0dce 00000000 		.4byte	.LVL326
 11746 0dd2 09000000 		.4byte	.LVL327-1
 11747 0dd6 0100     		.2byte	0x1
 11748 0dd8 50       		.byte	0x50
 11749 0dd9 09000000 		.4byte	.LVL327-1
 11750 0ddd 78000000 		.4byte	.LVL333
 11751 0de1 0100     		.2byte	0x1
 11752 0de3 55       		.byte	0x55
 11753 0de4 78000000 		.4byte	.LVL333
 11754 0de8 80000000 		.4byte	.LFE554
 11755 0dec 0400     		.2byte	0x4
 11756 0dee F3       		.byte	0xf3
 11757 0def 01       		.uleb128 0x1
 11758 0df0 50       		.byte	0x50
 11759 0df1 9F       		.byte	0x9f
 11760 0df2 00000000 		.4byte	0
 11761 0df6 00000000 		.4byte	0
 11762              	.LLST96:
 11763 0dfa 00000000 		.4byte	.LVL326
 11764 0dfe 09000000 		.4byte	.LVL327-1
 11765 0e02 0100     		.2byte	0x1
 11766 0e04 51       		.byte	0x51
 11767 0e05 09000000 		.4byte	.LVL327-1
 11768 0e09 4A000000 		.4byte	.LVL331
 11769 0e0d 0100     		.2byte	0x1
 11770 0e0f 54       		.byte	0x54
 11771 0e10 4A000000 		.4byte	.LVL331
 11772 0e14 80000000 		.4byte	.LFE554
 11773 0e18 0400     		.2byte	0x4
 11774 0e1a F3       		.byte	0xf3
 11775 0e1b 01       		.uleb128 0x1
 11776 0e1c 51       		.byte	0x51
 11777 0e1d 9F       		.byte	0x9f
 11778 0e1e 00000000 		.4byte	0
 11779 0e22 00000000 		.4byte	0
 11780              	.LLST97:
 11781 0e26 4A000000 		.4byte	.LVL331
 11782 0e2a 78000000 		.4byte	.LVL333
 11783 0e2e 0100     		.2byte	0x1
 11784 0e30 54       		.byte	0x54
 11785 0e31 78000000 		.4byte	.LVL333
 11786 0e35 80000000 		.4byte	.LFE554
 11787 0e39 0100     		.2byte	0x1
 11788 0e3b 50       		.byte	0x50
 11789 0e3c 00000000 		.4byte	0
 11790 0e40 00000000 		.4byte	0
 11791              	.LLST98:
 11792 0e44 00000000 		.4byte	.LVL334
 11793 0e48 0D000000 		.4byte	.LVL335-1
 11794 0e4c 0100     		.2byte	0x1
 11795 0e4e 50       		.byte	0x50
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 310


 11796 0e4f 0D000000 		.4byte	.LVL335-1
 11797 0e53 9C000000 		.4byte	.LVL345
 11798 0e57 0100     		.2byte	0x1
 11799 0e59 57       		.byte	0x57
 11800 0e5a 9C000000 		.4byte	.LVL345
 11801 0e5e A4000000 		.4byte	.LFE555
 11802 0e62 0400     		.2byte	0x4
 11803 0e64 F3       		.byte	0xf3
 11804 0e65 01       		.uleb128 0x1
 11805 0e66 50       		.byte	0x50
 11806 0e67 9F       		.byte	0x9f
 11807 0e68 00000000 		.4byte	0
 11808 0e6c 00000000 		.4byte	0
 11809              	.LLST99:
 11810 0e70 00000000 		.4byte	.LVL334
 11811 0e74 0D000000 		.4byte	.LVL335-1
 11812 0e78 0100     		.2byte	0x1
 11813 0e7a 51       		.byte	0x51
 11814 0e7b 0D000000 		.4byte	.LVL335-1
 11815 0e7f 80000000 		.4byte	.LVL339
 11816 0e83 0100     		.2byte	0x1
 11817 0e85 55       		.byte	0x55
 11818 0e86 80000000 		.4byte	.LVL339
 11819 0e8a 86000000 		.4byte	.LVL342
 11820 0e8e 0400     		.2byte	0x4
 11821 0e90 F3       		.byte	0xf3
 11822 0e91 01       		.uleb128 0x1
 11823 0e92 51       		.byte	0x51
 11824 0e93 9F       		.byte	0x9f
 11825 0e94 86000000 		.4byte	.LVL342
 11826 0e98 88000000 		.4byte	.LVL343
 11827 0e9c 0100     		.2byte	0x1
 11828 0e9e 55       		.byte	0x55
 11829 0e9f 88000000 		.4byte	.LVL343
 11830 0ea3 A4000000 		.4byte	.LFE555
 11831 0ea7 0400     		.2byte	0x4
 11832 0ea9 F3       		.byte	0xf3
 11833 0eaa 01       		.uleb128 0x1
 11834 0eab 51       		.byte	0x51
 11835 0eac 9F       		.byte	0x9f
 11836 0ead 00000000 		.4byte	0
 11837 0eb1 00000000 		.4byte	0
 11838              	.LLST100:
 11839 0eb5 00000000 		.4byte	.LVL334
 11840 0eb9 0D000000 		.4byte	.LVL335-1
 11841 0ebd 0100     		.2byte	0x1
 11842 0ebf 52       		.byte	0x52
 11843 0ec0 0D000000 		.4byte	.LVL335-1
 11844 0ec4 84000000 		.4byte	.LVL341
 11845 0ec8 0100     		.2byte	0x1
 11846 0eca 54       		.byte	0x54
 11847 0ecb 84000000 		.4byte	.LVL341
 11848 0ecf 86000000 		.4byte	.LVL342
 11849 0ed3 0400     		.2byte	0x4
 11850 0ed5 F3       		.byte	0xf3
 11851 0ed6 01       		.uleb128 0x1
 11852 0ed7 52       		.byte	0x52
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 311


 11853 0ed8 9F       		.byte	0x9f
 11854 0ed9 86000000 		.4byte	.LVL342
 11855 0edd 88000000 		.4byte	.LVL343
 11856 0ee1 0100     		.2byte	0x1
 11857 0ee3 54       		.byte	0x54
 11858 0ee4 88000000 		.4byte	.LVL343
 11859 0ee8 A4000000 		.4byte	.LFE555
 11860 0eec 0400     		.2byte	0x4
 11861 0eee F3       		.byte	0xf3
 11862 0eef 01       		.uleb128 0x1
 11863 0ef0 52       		.byte	0x52
 11864 0ef1 9F       		.byte	0x9f
 11865 0ef2 00000000 		.4byte	0
 11866 0ef6 00000000 		.4byte	0
 11867              	.LLST101:
 11868 0efa 00000000 		.4byte	.LVL334
 11869 0efe 0D000000 		.4byte	.LVL335-1
 11870 0f02 0100     		.2byte	0x1
 11871 0f04 53       		.byte	0x53
 11872 0f05 0D000000 		.4byte	.LVL335-1
 11873 0f09 9C000000 		.4byte	.LVL345
 11874 0f0d 0100     		.2byte	0x1
 11875 0f0f 56       		.byte	0x56
 11876 0f10 9C000000 		.4byte	.LVL345
 11877 0f14 A4000000 		.4byte	.LFE555
 11878 0f18 0400     		.2byte	0x4
 11879 0f1a F3       		.byte	0xf3
 11880 0f1b 01       		.uleb128 0x1
 11881 0f1c 53       		.byte	0x53
 11882 0f1d 9F       		.byte	0x9f
 11883 0f1e 00000000 		.4byte	0
 11884 0f22 00000000 		.4byte	0
 11885              	.LLST102:
 11886 0f26 82000000 		.4byte	.LVL340
 11887 0f2a 86000000 		.4byte	.LVL342
 11888 0f2e 0200     		.2byte	0x2
 11889 0f30 31       		.byte	0x31
 11890 0f31 9F       		.byte	0x9f
 11891 0f32 88000000 		.4byte	.LVL343
 11892 0f36 9C000000 		.4byte	.LVL345
 11893 0f3a 0100     		.2byte	0x1
 11894 0f3c 54       		.byte	0x54
 11895 0f3d 9C000000 		.4byte	.LVL345
 11896 0f41 A4000000 		.4byte	.LFE555
 11897 0f45 0100     		.2byte	0x1
 11898 0f47 50       		.byte	0x50
 11899 0f48 00000000 		.4byte	0
 11900 0f4c 00000000 		.4byte	0
 11901              	.LLST103:
 11902 0f50 00000000 		.4byte	.LVL346
 11903 0f54 21000000 		.4byte	.LVL351-1
 11904 0f58 0100     		.2byte	0x1
 11905 0f5a 50       		.byte	0x50
 11906 0f5b 21000000 		.4byte	.LVL351-1
 11907 0f5f D6000000 		.4byte	.LVL360
 11908 0f63 0100     		.2byte	0x1
 11909 0f65 54       		.byte	0x54
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 312


 11910 0f66 D6000000 		.4byte	.LVL360
 11911 0f6a E4000000 		.4byte	.LFE556
 11912 0f6e 0400     		.2byte	0x4
 11913 0f70 F3       		.byte	0xf3
 11914 0f71 01       		.uleb128 0x1
 11915 0f72 50       		.byte	0x50
 11916 0f73 9F       		.byte	0x9f
 11917 0f74 00000000 		.4byte	0
 11918 0f78 00000000 		.4byte	0
 11919              	.LLST104:
 11920 0f7c 00000000 		.4byte	.LVL346
 11921 0f80 21000000 		.4byte	.LVL351-1
 11922 0f84 0100     		.2byte	0x1
 11923 0f86 51       		.byte	0x51
 11924 0f87 21000000 		.4byte	.LVL351-1
 11925 0f8b 46000000 		.4byte	.LVL353
 11926 0f8f 0100     		.2byte	0x1
 11927 0f91 56       		.byte	0x56
 11928 0f92 46000000 		.4byte	.LVL353
 11929 0f96 4C000000 		.4byte	.LVL354
 11930 0f9a 0400     		.2byte	0x4
 11931 0f9c F3       		.byte	0xf3
 11932 0f9d 01       		.uleb128 0x1
 11933 0f9e 51       		.byte	0x51
 11934 0f9f 9F       		.byte	0x9f
 11935 0fa0 4C000000 		.4byte	.LVL354
 11936 0fa4 6C000000 		.4byte	.LVL355
 11937 0fa8 0100     		.2byte	0x1
 11938 0faa 56       		.byte	0x56
 11939 0fab 6C000000 		.4byte	.LVL355
 11940 0faf E4000000 		.4byte	.LFE556
 11941 0fb3 0400     		.2byte	0x4
 11942 0fb5 F3       		.byte	0xf3
 11943 0fb6 01       		.uleb128 0x1
 11944 0fb7 51       		.byte	0x51
 11945 0fb8 9F       		.byte	0x9f
 11946 0fb9 00000000 		.4byte	0
 11947 0fbd 00000000 		.4byte	0
 11948              	.LLST105:
 11949 0fc1 00000000 		.4byte	.LVL346
 11950 0fc5 21000000 		.4byte	.LVL351-1
 11951 0fc9 0100     		.2byte	0x1
 11952 0fcb 52       		.byte	0x52
 11953 0fcc 21000000 		.4byte	.LVL351-1
 11954 0fd0 E4000000 		.4byte	.LFE556
 11955 0fd4 0400     		.2byte	0x4
 11956 0fd6 F3       		.byte	0xf3
 11957 0fd7 01       		.uleb128 0x1
 11958 0fd8 52       		.byte	0x52
 11959 0fd9 9F       		.byte	0x9f
 11960 0fda 00000000 		.4byte	0
 11961 0fde 00000000 		.4byte	0
 11962              	.LLST106:
 11963 0fe2 00000000 		.4byte	.LVL346
 11964 0fe6 14000000 		.4byte	.LVL348
 11965 0fea 0100     		.2byte	0x1
 11966 0fec 53       		.byte	0x53
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 313


 11967 0fed 14000000 		.4byte	.LVL348
 11968 0ff1 16000000 		.4byte	.LVL349
 11969 0ff5 0400     		.2byte	0x4
 11970 0ff7 F3       		.byte	0xf3
 11971 0ff8 01       		.uleb128 0x1
 11972 0ff9 53       		.byte	0x53
 11973 0ffa 9F       		.byte	0x9f
 11974 0ffb 16000000 		.4byte	.LVL349
 11975 0fff 21000000 		.4byte	.LVL351-1
 11976 1003 0100     		.2byte	0x1
 11977 1005 53       		.byte	0x53
 11978 1006 21000000 		.4byte	.LVL351-1
 11979 100a D6000000 		.4byte	.LVL360
 11980 100e 0100     		.2byte	0x1
 11981 1010 57       		.byte	0x57
 11982 1011 D6000000 		.4byte	.LVL360
 11983 1015 E4000000 		.4byte	.LFE556
 11984 1019 0400     		.2byte	0x4
 11985 101b F3       		.byte	0xf3
 11986 101c 01       		.uleb128 0x1
 11987 101d 53       		.byte	0x53
 11988 101e 9F       		.byte	0x9f
 11989 101f 00000000 		.4byte	0
 11990 1023 00000000 		.4byte	0
 11991              	.LLST107:
 11992 1027 1E000000 		.4byte	.LVL350
 11993 102b D6000000 		.4byte	.LVL360
 11994 102f 0100     		.2byte	0x1
 11995 1031 54       		.byte	0x54
 11996 1032 D6000000 		.4byte	.LVL360
 11997 1036 E4000000 		.4byte	.LFE556
 11998 103a 0400     		.2byte	0x4
 11999 103c F3       		.byte	0xf3
 12000 103d 01       		.uleb128 0x1
 12001 103e 50       		.byte	0x50
 12002 103f 9F       		.byte	0x9f
 12003 1040 00000000 		.4byte	0
 12004 1044 00000000 		.4byte	0
 12005              	.LLST108:
 12006 1048 02000000 		.4byte	.LVL347
 12007 104c 6C000000 		.4byte	.LVL355
 12008 1050 0200     		.2byte	0x2
 12009 1052 31       		.byte	0x31
 12010 1053 9F       		.byte	0x9f
 12011 1054 6C000000 		.4byte	.LVL355
 12012 1058 D6000000 		.4byte	.LVL360
 12013 105c 0100     		.2byte	0x1
 12014 105e 55       		.byte	0x55
 12015 105f D6000000 		.4byte	.LVL360
 12016 1063 E4000000 		.4byte	.LFE556
 12017 1067 0100     		.2byte	0x1
 12018 1069 50       		.byte	0x50
 12019 106a 00000000 		.4byte	0
 12020 106e 00000000 		.4byte	0
 12021              	.LLST109:
 12022 1072 2E000000 		.4byte	.LVL352
 12023 1076 77000000 		.4byte	.LVL356-1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 314


 12024 107a 0100     		.2byte	0x1
 12025 107c 53       		.byte	0x53
 12026 107d 00000000 		.4byte	0
 12027 1081 00000000 		.4byte	0
 12028              	.LLST110:
 12029 1085 00000000 		.4byte	.LVL361
 12030 1089 25000000 		.4byte	.LVL365-1
 12031 108d 0100     		.2byte	0x1
 12032 108f 50       		.byte	0x50
 12033 1090 25000000 		.4byte	.LVL365-1
 12034 1094 12010000 		.4byte	.LVL377
 12035 1098 0100     		.2byte	0x1
 12036 109a 54       		.byte	0x54
 12037 109b 12010000 		.4byte	.LVL377
 12038 109f 20010000 		.4byte	.LFE557
 12039 10a3 0400     		.2byte	0x4
 12040 10a5 F3       		.byte	0xf3
 12041 10a6 01       		.uleb128 0x1
 12042 10a7 50       		.byte	0x50
 12043 10a8 9F       		.byte	0x9f
 12044 10a9 00000000 		.4byte	0
 12045 10ad 00000000 		.4byte	0
 12046              	.LLST111:
 12047 10b1 00000000 		.4byte	.LVL361
 12048 10b5 25000000 		.4byte	.LVL365-1
 12049 10b9 0100     		.2byte	0x1
 12050 10bb 51       		.byte	0x51
 12051 10bc 25000000 		.4byte	.LVL365-1
 12052 10c0 B6000000 		.4byte	.LVL370
 12053 10c4 0100     		.2byte	0x1
 12054 10c6 58       		.byte	0x58
 12055 10c7 B6000000 		.4byte	.LVL370
 12056 10cb E0000000 		.4byte	.LVL373
 12057 10cf 0400     		.2byte	0x4
 12058 10d1 F3       		.byte	0xf3
 12059 10d2 01       		.uleb128 0x1
 12060 10d3 51       		.byte	0x51
 12061 10d4 9F       		.byte	0x9f
 12062 10d5 E0000000 		.4byte	.LVL373
 12063 10d9 EA000000 		.4byte	.LVL374
 12064 10dd 0100     		.2byte	0x1
 12065 10df 58       		.byte	0x58
 12066 10e0 EA000000 		.4byte	.LVL374
 12067 10e4 20010000 		.4byte	.LFE557
 12068 10e8 0400     		.2byte	0x4
 12069 10ea F3       		.byte	0xf3
 12070 10eb 01       		.uleb128 0x1
 12071 10ec 51       		.byte	0x51
 12072 10ed 9F       		.byte	0x9f
 12073 10ee 00000000 		.4byte	0
 12074 10f2 00000000 		.4byte	0
 12075              	.LLST112:
 12076 10f6 00000000 		.4byte	.LVL361
 12077 10fa 25000000 		.4byte	.LVL365-1
 12078 10fe 0100     		.2byte	0x1
 12079 1100 52       		.byte	0x52
 12080 1101 25000000 		.4byte	.LVL365-1
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 315


 12081 1105 20010000 		.4byte	.LFE557
 12082 1109 0400     		.2byte	0x4
 12083 110b F3       		.byte	0xf3
 12084 110c 01       		.uleb128 0x1
 12085 110d 52       		.byte	0x52
 12086 110e 9F       		.byte	0x9f
 12087 110f 00000000 		.4byte	0
 12088 1113 00000000 		.4byte	0
 12089              	.LLST113:
 12090 1117 00000000 		.4byte	.LVL361
 12091 111b 18000000 		.4byte	.LVL363
 12092 111f 0100     		.2byte	0x1
 12093 1121 53       		.byte	0x53
 12094 1122 18000000 		.4byte	.LVL363
 12095 1126 1A000000 		.4byte	.LVL364
 12096 112a 0400     		.2byte	0x4
 12097 112c F3       		.byte	0xf3
 12098 112d 01       		.uleb128 0x1
 12099 112e 53       		.byte	0x53
 12100 112f 9F       		.byte	0x9f
 12101 1130 1A000000 		.4byte	.LVL364
 12102 1134 25000000 		.4byte	.LVL365-1
 12103 1138 0100     		.2byte	0x1
 12104 113a 53       		.byte	0x53
 12105 113b 25000000 		.4byte	.LVL365-1
 12106 113f 12010000 		.4byte	.LVL377
 12107 1143 0100     		.2byte	0x1
 12108 1145 59       		.byte	0x59
 12109 1146 12010000 		.4byte	.LVL377
 12110 114a 20010000 		.4byte	.LFE557
 12111 114e 0400     		.2byte	0x4
 12112 1150 F3       		.byte	0xf3
 12113 1151 01       		.uleb128 0x1
 12114 1152 53       		.byte	0x53
 12115 1153 9F       		.byte	0x9f
 12116 1154 00000000 		.4byte	0
 12117 1158 00000000 		.4byte	0
 12118              	.LLST114:
 12119 115c 00000000 		.4byte	.LVL361
 12120 1160 12010000 		.4byte	.LVL377
 12121 1164 0200     		.2byte	0x2
 12122 1166 91       		.byte	0x91
 12123 1167 00       		.sleb128 0
 12124 1168 12010000 		.4byte	.LVL377
 12125 116c 20010000 		.4byte	.LFE557
 12126 1170 0200     		.2byte	0x2
 12127 1172 7D       		.byte	0x7d
 12128 1173 00       		.sleb128 0
 12129 1174 00000000 		.4byte	0
 12130 1178 00000000 		.4byte	0
 12131              	.LLST115:
 12132 117c 26000000 		.4byte	.LVL365
 12133 1180 12010000 		.4byte	.LVL377
 12134 1184 0100     		.2byte	0x1
 12135 1186 54       		.byte	0x54
 12136 1187 12010000 		.4byte	.LVL377
 12137 118b 20010000 		.4byte	.LFE557
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 316


 12138 118f 0400     		.2byte	0x4
 12139 1191 F3       		.byte	0xf3
 12140 1192 01       		.uleb128 0x1
 12141 1193 50       		.byte	0x50
 12142 1194 9F       		.byte	0x9f
 12143 1195 00000000 		.4byte	0
 12144 1199 00000000 		.4byte	0
 12145              	.LLST116:
 12146 119d 4C000000 		.4byte	.LVL366
 12147 11a1 96000000 		.4byte	.LVL368
 12148 11a5 0100     		.2byte	0x1
 12149 11a7 53       		.byte	0x53
 12150 11a8 00000000 		.4byte	0
 12151 11ac 00000000 		.4byte	0
 12152              	.LLST117:
 12153 11b0 06000000 		.4byte	.LVL362
 12154 11b4 90000000 		.4byte	.LVL367
 12155 11b8 0200     		.2byte	0x2
 12156 11ba 31       		.byte	0x31
 12157 11bb 9F       		.byte	0x9f
 12158 11bc 90000000 		.4byte	.LVL367
 12159 11c0 12010000 		.4byte	.LVL377
 12160 11c4 0100     		.2byte	0x1
 12161 11c6 55       		.byte	0x55
 12162 11c7 12010000 		.4byte	.LVL377
 12163 11cb 20010000 		.4byte	.LFE557
 12164 11cf 0100     		.2byte	0x1
 12165 11d1 50       		.byte	0x50
 12166 11d2 00000000 		.4byte	0
 12167 11d6 00000000 		.4byte	0
 12168              	.LLST118:
 12169 11da 08010000 		.4byte	.LVL375
 12170 11de 0C010000 		.4byte	.LVL376
 12171 11e2 0100     		.2byte	0x1
 12172 11e4 57       		.byte	0x57
 12173 11e5 00000000 		.4byte	0
 12174 11e9 00000000 		.4byte	0
 12175              	.LLST119:
 12176 11ed 00000000 		.4byte	.LVL378
 12177 11f1 1D000000 		.4byte	.LVL380-1
 12178 11f5 0100     		.2byte	0x1
 12179 11f7 50       		.byte	0x50
 12180 11f8 1D000000 		.4byte	.LVL380-1
 12181 11fc C0000000 		.4byte	.LVL389
 12182 1200 0100     		.2byte	0x1
 12183 1202 54       		.byte	0x54
 12184 1203 C0000000 		.4byte	.LVL389
 12185 1207 CC000000 		.4byte	.LFE558
 12186 120b 0400     		.2byte	0x4
 12187 120d F3       		.byte	0xf3
 12188 120e 01       		.uleb128 0x1
 12189 120f 50       		.byte	0x50
 12190 1210 9F       		.byte	0x9f
 12191 1211 00000000 		.4byte	0
 12192 1215 00000000 		.4byte	0
 12193              	.LLST120:
 12194 1219 00000000 		.4byte	.LVL378
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 317


 12195 121d 1D000000 		.4byte	.LVL380-1
 12196 1221 0100     		.2byte	0x1
 12197 1223 51       		.byte	0x51
 12198 1224 1D000000 		.4byte	.LVL380-1
 12199 1228 C0000000 		.4byte	.LVL389
 12200 122c 0100     		.2byte	0x1
 12201 122e 55       		.byte	0x55
 12202 122f C0000000 		.4byte	.LVL389
 12203 1233 CC000000 		.4byte	.LFE558
 12204 1237 0400     		.2byte	0x4
 12205 1239 F3       		.byte	0xf3
 12206 123a 01       		.uleb128 0x1
 12207 123b 51       		.byte	0x51
 12208 123c 9F       		.byte	0x9f
 12209 123d 00000000 		.4byte	0
 12210 1241 00000000 		.4byte	0
 12211              	.LLST121:
 12212 1245 1E000000 		.4byte	.LVL380
 12213 1249 C0000000 		.4byte	.LVL389
 12214 124d 0100     		.2byte	0x1
 12215 124f 54       		.byte	0x54
 12216 1250 C0000000 		.4byte	.LVL389
 12217 1254 CC000000 		.4byte	.LFE558
 12218 1258 0400     		.2byte	0x4
 12219 125a F3       		.byte	0xf3
 12220 125b 01       		.uleb128 0x1
 12221 125c 50       		.byte	0x50
 12222 125d 9F       		.byte	0x9f
 12223 125e 00000000 		.4byte	0
 12224 1262 00000000 		.4byte	0
 12225              	.LLST122:
 12226 1266 38000000 		.4byte	.LVL381
 12227 126a 4A000000 		.4byte	.LVL382
 12228 126e 0100     		.2byte	0x1
 12229 1270 53       		.byte	0x53
 12230 1271 00000000 		.4byte	0
 12231 1275 00000000 		.4byte	0
 12232              	.LLST123:
 12233 1279 BA000000 		.4byte	.LVL387
 12234 127d BE000000 		.4byte	.LVL388
 12235 1281 0100     		.2byte	0x1
 12236 1283 56       		.byte	0x56
 12237 1284 00000000 		.4byte	0
 12238 1288 00000000 		.4byte	0
 12239              	.LLST124:
 12240 128c 00000000 		.4byte	.LVL390
 12241 1290 0C000000 		.4byte	.LVL391
 12242 1294 0100     		.2byte	0x1
 12243 1296 50       		.byte	0x50
 12244 1297 00000000 		.4byte	0
 12245 129b 00000000 		.4byte	0
 12246              	.LLST125:
 12247 129f 0C000000 		.4byte	.LVL391
 12248 12a3 22000000 		.4byte	.LVL394
 12249 12a7 0100     		.2byte	0x1
 12250 12a9 54       		.byte	0x54
 12251 12aa 24000000 		.4byte	.LVL395
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 318


 12252 12ae 26000000 		.4byte	.LVL396
 12253 12b2 0100     		.2byte	0x1
 12254 12b4 54       		.byte	0x54
 12255 12b5 00000000 		.4byte	0
 12256 12b9 00000000 		.4byte	0
 12257              	.LLST126:
 12258 12bd 20000000 		.4byte	.LVL393
 12259 12c1 24000000 		.4byte	.LVL395
 12260 12c5 0200     		.2byte	0x2
 12261 12c7 31       		.byte	0x31
 12262 12c8 9F       		.byte	0x9f
 12263 12c9 26000000 		.4byte	.LVL396
 12264 12cd 2E000000 		.4byte	.LVL398
 12265 12d1 0100     		.2byte	0x1
 12266 12d3 54       		.byte	0x54
 12267 12d4 2E000000 		.4byte	.LVL398
 12268 12d8 34000000 		.4byte	.LFE559
 12269 12dc 0100     		.2byte	0x1
 12270 12de 50       		.byte	0x50
 12271 12df 00000000 		.4byte	0
 12272 12e3 00000000 		.4byte	0
 12273              		.section	.debug_aranges,"",%progbits
 12274 0000 9C010000 		.4byte	0x19c
 12275 0004 0200     		.2byte	0x2
 12276 0006 00000000 		.4byte	.Ldebug_info0
 12277 000a 04       		.byte	0x4
 12278 000b 00       		.byte	0
 12279 000c 0000     		.2byte	0
 12280 000e 0000     		.2byte	0
 12281 0010 00000000 		.4byte	.LFB522
 12282 0014 4C000000 		.4byte	.LFE522-.LFB522
 12283 0018 00000000 		.4byte	.LFB550
 12284 001c 2C000000 		.4byte	.LFE550-.LFB550
 12285 0020 00000000 		.4byte	.LFB549
 12286 0024 12000000 		.4byte	.LFE549-.LFB549
 12287 0028 00000000 		.4byte	.LFB513
 12288 002c 9E000000 		.4byte	.LFE513-.LFB513
 12289 0030 00000000 		.4byte	.LFB547
 12290 0034 58000000 		.4byte	.LFE547-.LFB547
 12291 0038 00000000 		.4byte	.LFB514
 12292 003c AC000000 		.4byte	.LFE514-.LFB514
 12293 0040 00000000 		.4byte	.LFB548
 12294 0044 44000000 		.4byte	.LFE548-.LFB548
 12295 0048 00000000 		.4byte	.LFB560
 12296 004c 68000000 		.4byte	.LFE560-.LFB560
 12297 0050 00000000 		.4byte	.LFB544
 12298 0054 2C000000 		.4byte	.LFE544-.LFB544
 12299 0058 00000000 		.4byte	.LFB512
 12300 005c 62000000 		.4byte	.LFE512-.LFB512
 12301 0060 00000000 		.4byte	.LFB515
 12302 0064 B0000000 		.4byte	.LFE515-.LFB515
 12303 0068 00000000 		.4byte	.LFB518
 12304 006c 20000000 		.4byte	.LFE518-.LFB518
 12305 0070 00000000 		.4byte	.LFB519
 12306 0074 30000000 		.4byte	.LFE519-.LFB519
 12307 0078 00000000 		.4byte	.LFB520
 12308 007c DC000000 		.4byte	.LFE520-.LFB520
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 319


 12309 0080 00000000 		.4byte	.LFB523
 12310 0084 88000000 		.4byte	.LFE523-.LFB523
 12311 0088 00000000 		.4byte	.LFB524
 12312 008c A4000000 		.4byte	.LFE524-.LFB524
 12313 0090 00000000 		.4byte	.LFB525
 12314 0094 7C000000 		.4byte	.LFE525-.LFB525
 12315 0098 00000000 		.4byte	.LFB526
 12316 009c 24000000 		.4byte	.LFE526-.LFB526
 12317 00a0 00000000 		.4byte	.LFB527
 12318 00a4 14000000 		.4byte	.LFE527-.LFB527
 12319 00a8 00000000 		.4byte	.LFB529
 12320 00ac 0C000000 		.4byte	.LFE529-.LFB529
 12321 00b0 00000000 		.4byte	.LFB530
 12322 00b4 14000000 		.4byte	.LFE530-.LFB530
 12323 00b8 00000000 		.4byte	.LFB531
 12324 00bc 0C000000 		.4byte	.LFE531-.LFB531
 12325 00c0 00000000 		.4byte	.LFB532
 12326 00c4 28000000 		.4byte	.LFE532-.LFB532
 12327 00c8 00000000 		.4byte	.LFB533
 12328 00cc FC000000 		.4byte	.LFE533-.LFB533
 12329 00d0 00000000 		.4byte	.LFB528
 12330 00d4 F0000000 		.4byte	.LFE528-.LFB528
 12331 00d8 00000000 		.4byte	.LFB516
 12332 00dc AC000000 		.4byte	.LFE516-.LFB516
 12333 00e0 00000000 		.4byte	.LFB517
 12334 00e4 50000000 		.4byte	.LFE517-.LFB517
 12335 00e8 00000000 		.4byte	.LFB534
 12336 00ec C8000000 		.4byte	.LFE534-.LFB534
 12337 00f0 00000000 		.4byte	.LFB521
 12338 00f4 B8000000 		.4byte	.LFE521-.LFB521
 12339 00f8 00000000 		.4byte	.LFB535
 12340 00fc 34000000 		.4byte	.LFE535-.LFB535
 12341 0100 00000000 		.4byte	.LFB536
 12342 0104 5C000000 		.4byte	.LFE536-.LFB536
 12343 0108 00000000 		.4byte	.LFB537
 12344 010c 3C000000 		.4byte	.LFE537-.LFB537
 12345 0110 00000000 		.4byte	.LFB538
 12346 0114 88000000 		.4byte	.LFE538-.LFB538
 12347 0118 00000000 		.4byte	.LFB539
 12348 011c 84000000 		.4byte	.LFE539-.LFB539
 12349 0120 00000000 		.4byte	.LFB540
 12350 0124 34000000 		.4byte	.LFE540-.LFB540
 12351 0128 00000000 		.4byte	.LFB541
 12352 012c 14000000 		.4byte	.LFE541-.LFB541
 12353 0130 00000000 		.4byte	.LFB542
 12354 0134 80000000 		.4byte	.LFE542-.LFB542
 12355 0138 00000000 		.4byte	.LFB543
 12356 013c 10000000 		.4byte	.LFE543-.LFB543
 12357 0140 00000000 		.4byte	.LFB545
 12358 0144 1C000000 		.4byte	.LFE545-.LFB545
 12359 0148 00000000 		.4byte	.LFB546
 12360 014c 20000000 		.4byte	.LFE546-.LFB546
 12361 0150 00000000 		.4byte	.LFB551
 12362 0154 0C000000 		.4byte	.LFE551-.LFB551
 12363 0158 00000000 		.4byte	.LFB552
 12364 015c 20000000 		.4byte	.LFE552-.LFB552
 12365 0160 00000000 		.4byte	.LFB553
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 320


 12366 0164 20000000 		.4byte	.LFE553-.LFB553
 12367 0168 00000000 		.4byte	.LFB554
 12368 016c 80000000 		.4byte	.LFE554-.LFB554
 12369 0170 00000000 		.4byte	.LFB555
 12370 0174 A4000000 		.4byte	.LFE555-.LFB555
 12371 0178 00000000 		.4byte	.LFB556
 12372 017c E4000000 		.4byte	.LFE556-.LFB556
 12373 0180 00000000 		.4byte	.LFB557
 12374 0184 20010000 		.4byte	.LFE557-.LFB557
 12375 0188 00000000 		.4byte	.LFB558
 12376 018c CC000000 		.4byte	.LFE558-.LFB558
 12377 0190 00000000 		.4byte	.LFB559
 12378 0194 34000000 		.4byte	.LFE559-.LFB559
 12379 0198 00000000 		.4byte	0
 12380 019c 00000000 		.4byte	0
 12381              		.section	.debug_ranges,"",%progbits
 12382              	.Ldebug_ranges0:
 12383 0000 0E000000 		.4byte	.LBB123
 12384 0004 58000000 		.4byte	.LBE123
 12385 0008 5C000000 		.4byte	.LBB127
 12386 000c DA000000 		.4byte	.LBE127
 12387 0010 00000000 		.4byte	0
 12388 0014 00000000 		.4byte	0
 12389 0018 4C000000 		.4byte	.LBB137
 12390 001c 62000000 		.4byte	.LBE137
 12391 0020 66000000 		.4byte	.LBB138
 12392 0024 6E000000 		.4byte	.LBE138
 12393 0028 76000000 		.4byte	.LBB139
 12394 002c 8C000000 		.4byte	.LBE139
 12395 0030 00000000 		.4byte	0
 12396 0034 00000000 		.4byte	0
 12397 0038 00000000 		.4byte	.LFB522
 12398 003c 4C000000 		.4byte	.LFE522
 12399 0040 00000000 		.4byte	.LFB550
 12400 0044 2C000000 		.4byte	.LFE550
 12401 0048 00000000 		.4byte	.LFB549
 12402 004c 12000000 		.4byte	.LFE549
 12403 0050 00000000 		.4byte	.LFB513
 12404 0054 9E000000 		.4byte	.LFE513
 12405 0058 00000000 		.4byte	.LFB547
 12406 005c 58000000 		.4byte	.LFE547
 12407 0060 00000000 		.4byte	.LFB514
 12408 0064 AC000000 		.4byte	.LFE514
 12409 0068 00000000 		.4byte	.LFB548
 12410 006c 44000000 		.4byte	.LFE548
 12411 0070 00000000 		.4byte	.LFB560
 12412 0074 68000000 		.4byte	.LFE560
 12413 0078 00000000 		.4byte	.LFB544
 12414 007c 2C000000 		.4byte	.LFE544
 12415 0080 00000000 		.4byte	.LFB512
 12416 0084 62000000 		.4byte	.LFE512
 12417 0088 00000000 		.4byte	.LFB515
 12418 008c B0000000 		.4byte	.LFE515
 12419 0090 00000000 		.4byte	.LFB518
 12420 0094 20000000 		.4byte	.LFE518
 12421 0098 00000000 		.4byte	.LFB519
 12422 009c 30000000 		.4byte	.LFE519
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 321


 12423 00a0 00000000 		.4byte	.LFB520
 12424 00a4 DC000000 		.4byte	.LFE520
 12425 00a8 00000000 		.4byte	.LFB523
 12426 00ac 88000000 		.4byte	.LFE523
 12427 00b0 00000000 		.4byte	.LFB524
 12428 00b4 A4000000 		.4byte	.LFE524
 12429 00b8 00000000 		.4byte	.LFB525
 12430 00bc 7C000000 		.4byte	.LFE525
 12431 00c0 00000000 		.4byte	.LFB526
 12432 00c4 24000000 		.4byte	.LFE526
 12433 00c8 00000000 		.4byte	.LFB527
 12434 00cc 14000000 		.4byte	.LFE527
 12435 00d0 00000000 		.4byte	.LFB529
 12436 00d4 0C000000 		.4byte	.LFE529
 12437 00d8 00000000 		.4byte	.LFB530
 12438 00dc 14000000 		.4byte	.LFE530
 12439 00e0 00000000 		.4byte	.LFB531
 12440 00e4 0C000000 		.4byte	.LFE531
 12441 00e8 00000000 		.4byte	.LFB532
 12442 00ec 28000000 		.4byte	.LFE532
 12443 00f0 00000000 		.4byte	.LFB533
 12444 00f4 FC000000 		.4byte	.LFE533
 12445 00f8 00000000 		.4byte	.LFB528
 12446 00fc F0000000 		.4byte	.LFE528
 12447 0100 00000000 		.4byte	.LFB516
 12448 0104 AC000000 		.4byte	.LFE516
 12449 0108 00000000 		.4byte	.LFB517
 12450 010c 50000000 		.4byte	.LFE517
 12451 0110 00000000 		.4byte	.LFB534
 12452 0114 C8000000 		.4byte	.LFE534
 12453 0118 00000000 		.4byte	.LFB521
 12454 011c B8000000 		.4byte	.LFE521
 12455 0120 00000000 		.4byte	.LFB535
 12456 0124 34000000 		.4byte	.LFE535
 12457 0128 00000000 		.4byte	.LFB536
 12458 012c 5C000000 		.4byte	.LFE536
 12459 0130 00000000 		.4byte	.LFB537
 12460 0134 3C000000 		.4byte	.LFE537
 12461 0138 00000000 		.4byte	.LFB538
 12462 013c 88000000 		.4byte	.LFE538
 12463 0140 00000000 		.4byte	.LFB539
 12464 0144 84000000 		.4byte	.LFE539
 12465 0148 00000000 		.4byte	.LFB540
 12466 014c 34000000 		.4byte	.LFE540
 12467 0150 00000000 		.4byte	.LFB541
 12468 0154 14000000 		.4byte	.LFE541
 12469 0158 00000000 		.4byte	.LFB542
 12470 015c 80000000 		.4byte	.LFE542
 12471 0160 00000000 		.4byte	.LFB543
 12472 0164 10000000 		.4byte	.LFE543
 12473 0168 00000000 		.4byte	.LFB545
 12474 016c 1C000000 		.4byte	.LFE545
 12475 0170 00000000 		.4byte	.LFB546
 12476 0174 20000000 		.4byte	.LFE546
 12477 0178 00000000 		.4byte	.LFB551
 12478 017c 0C000000 		.4byte	.LFE551
 12479 0180 00000000 		.4byte	.LFB552
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 322


 12480 0184 20000000 		.4byte	.LFE552
 12481 0188 00000000 		.4byte	.LFB553
 12482 018c 20000000 		.4byte	.LFE553
 12483 0190 00000000 		.4byte	.LFB554
 12484 0194 80000000 		.4byte	.LFE554
 12485 0198 00000000 		.4byte	.LFB555
 12486 019c A4000000 		.4byte	.LFE555
 12487 01a0 00000000 		.4byte	.LFB556
 12488 01a4 E4000000 		.4byte	.LFE556
 12489 01a8 00000000 		.4byte	.LFB557
 12490 01ac 20010000 		.4byte	.LFE557
 12491 01b0 00000000 		.4byte	.LFB558
 12492 01b4 CC000000 		.4byte	.LFE558
 12493 01b8 00000000 		.4byte	.LFB559
 12494 01bc 34000000 		.4byte	.LFE559
 12495 01c0 00000000 		.4byte	0
 12496 01c4 00000000 		.4byte	0
 12497              		.section	.debug_line,"",%progbits
 12498              	.Ldebug_line0:
 12499 0000 860D0000 		.section	.debug_str,"MS",%progbits,1
 12499      02000604 
 12499      00000201 
 12499      FB0E0D00 
 12499      01010101 
 12500              	.LASF66:
 12501 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 12501      6843746C 
 12501      4D61696E 
 12501      57733146 
 12501      72657100 
 12502              	.LASF172:
 12503 0014 75784E75 		.ascii	"uxNumberOfItems\000"
 12503      6D626572 
 12503      4F664974 
 12503      656D7300 
 12504              	.LASF349:
 12505 0024 76506F72 		.ascii	"vPortExitCritical\000"
 12505      74457869 
 12505      74437269 
 12505      74696361 
 12505      6C00
 12506              	.LASF337:
 12507 0036 63795F64 		.ascii	"cy_device\000"
 12507      65766963 
 12507      6500
 12508              	.LASF183:
 12509 0040 7854494D 		.ascii	"xTIME_OUT\000"
 12509      455F4F55 
 12509      5400
 12510              	.LASF93:
 12511 004a 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 12511      73436D30 
 12511      436C6F63 
 12511      6B43746C 
 12511      4F666673 
 12512              	.LASF52:
 12513 0061 70657269 		.ascii	"periClockNr\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 323


 12513      436C6F63 
 12513      6B4E7200 
 12514              	.LASF121:
 12515 006d 6D617374 		.ascii	"masterStatus\000"
 12515      65725374 
 12515      61747573 
 12515      00
 12516              	.LASF329:
 12517 007a 78536368 		.ascii	"xSchedulerRunning\000"
 12517      6564756C 
 12517      65725275 
 12517      6E6E696E 
 12517      6700
 12518              	.LASF356:
 12519 008c 78506F72 		.ascii	"xPortStartScheduler\000"
 12519      74537461 
 12519      72745363 
 12519      68656475 
 12519      6C657200 
 12520              	.LASF196:
 12521 00a0 75785072 		.ascii	"uxPriority\000"
 12521      696F7269 
 12521      747900
 12522              	.LASF271:
 12523 00ab 7078436F 		.ascii	"pxConstList\000"
 12523      6E73744C 
 12523      69737400 
 12524              	.LASF143:
 12525 00b7 74785374 		.ascii	"txStatus\000"
 12525      61747573 
 12525      00
 12526              	.LASF25:
 12527 00c0 70657269 		.ascii	"periBase\000"
 12527      42617365 
 12527      00
 12528              	.LASF192:
 12529 00c9 74736B54 		.ascii	"tskTaskControlBlock\000"
 12529      61736B43 
 12529      6F6E7472 
 12529      6F6C426C 
 12529      6F636B00 
 12530              	.LASF260:
 12531 00dd 75785065 		.ascii	"uxPendedCounts\000"
 12531      6E646564 
 12531      436F756E 
 12531      747300
 12532              	.LASF291:
 12533 00ec 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 12533      6B536574 
 12533      54687265 
 12533      61644C6F 
 12533      63616C53 
 12534              	.LASF305:
 12535 010e 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 12535      7473546F 
 12535      436C6561 
 12535      724F6E45 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 324


 12535      78697400 
 12536              	.LASF101:
 12537 0122 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 12537      73436D30 
 12537      4E6D6943 
 12537      746C4F66 
 12537      66736574 
 12538              	.LASF364:
 12539 0137 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 12539      736B4765 
 12539      744E756D 
 12539      6265724F 
 12539      66546173 
 12540              	.LASF71:
 12541 014e 64774368 		.ascii	"dwChSize\000"
 12541      53697A65 
 12541      00
 12542              	.LASF314:
 12543 0157 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 12543      67686572 
 12543      5072696F 
 12543      72697479 
 12543      5461736B 
 12544              	.LASF177:
 12545 0171 654E6F41 		.ascii	"eNoAction\000"
 12545      6374696F 
 12545      6E00
 12546              	.LASF128:
 12547 017b 736C6176 		.ascii	"slaveStatus\000"
 12547      65537461 
 12547      74757300 
 12548              	.LASF318:
 12549 0187 7844656C 		.ascii	"xDelayedTaskList1\000"
 12549      61796564 
 12549      5461736B 
 12549      4C697374 
 12549      3100
 12550              	.LASF0:
 12551 0199 756E7369 		.ascii	"unsigned int\000"
 12551      676E6564 
 12551      20696E74 
 12551      00
 12552              	.LASF275:
 12553 01a6 70784576 		.ascii	"pxEventList\000"
 12553      656E744C 
 12553      69737400 
 12554              	.LASF116:
 12555 01b2 63795F63 		.ascii	"cy_cb_scb_i2c_handle_events_t\000"
 12555      625F7363 
 12555      625F6932 
 12555      635F6861 
 12555      6E646C65 
 12556              	.LASF126:
 12557 01d0 6D617374 		.ascii	"masterBufferIdx\000"
 12557      65724275 
 12557      66666572 
 12557      49647800 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 325


 12558              	.LASF173:
 12559 01e0 7078496E 		.ascii	"pxIndex\000"
 12559      64657800 
 12560              	.LASF22:
 12561 01e8 75696E74 		.ascii	"uint32_t\000"
 12561      33325F74 
 12561      00
 12562              	.LASF53:
 12563 01f1 736D6966 		.ascii	"smifDeviceNr\000"
 12563      44657669 
 12563      63654E72 
 12563      00
 12564              	.LASF83:
 12565 01fe 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 12565      44697643 
 12565      6D645061 
 12565      54797065 
 12565      53656C50 
 12566              	.LASF324:
 12567 0215 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 12567      6C657465 
 12567      64546173 
 12567      6B735761 
 12567      6974696E 
 12568              	.LASF11:
 12569 0232 5F5F696E 		.ascii	"__int32_t\000"
 12569      7433325F 
 12569      7400
 12570              	.LASF162:
 12571 023c 784C4953 		.ascii	"xLIST_ITEM\000"
 12571      545F4954 
 12571      454D00
 12572              	.LASF317:
 12573 0247 70785265 		.ascii	"pxReadyTasksLists\000"
 12573      61647954 
 12573      61736B73 
 12573      4C697374 
 12573      7300
 12574              	.LASF156:
 12575 0259 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 12575      74635F73 
 12575      63625F75 
 12575      6172745F 
 12575      636F6E74 
 12576              	.LASF23:
 12577 0273 63707573 		.ascii	"cpussBase\000"
 12577      73426173 
 12577      6500
 12578              	.LASF134:
 12579 027d 736C6176 		.ascii	"slaveRxBuffer\000"
 12579      65527842 
 12579      75666665 
 12579      7200
 12580              	.LASF47:
 12581 028b 63707573 		.ascii	"cpussFmIrq\000"
 12581      73466D49 
 12581      727100
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 326


 12582              	.LASF138:
 12583 0296 63624164 		.ascii	"cbAddr\000"
 12583      647200
 12584              	.LASF171:
 12585 029d 784C4953 		.ascii	"xLIST\000"
 12585      5400
 12586              	.LASF113:
 12587 02a3 43595F53 		.ascii	"CY_SCB_I2C_ACK\000"
 12587      43425F49 
 12587      32435F41 
 12587      434B00
 12588              	.LASF312:
 12589 02b2 75634F72 		.ascii	"ucOriginalNotifyState\000"
 12589      6967696E 
 12589      616C4E6F 
 12589      74696679 
 12589      53746174 
 12590              	.LASF283:
 12591 02c8 76546173 		.ascii	"vTaskSetTimeOutState\000"
 12591      6B536574 
 12591      54696D65 
 12591      4F757453 
 12591      74617465 
 12592              	.LASF255:
 12593 02dd 78546173 		.ascii	"xTaskIncrementTick\000"
 12593      6B496E63 
 12593      72656D65 
 12593      6E745469 
 12593      636B00
 12594              	.LASF115:
 12595 02f0 63795F65 		.ascii	"cy_en_scb_i2c_command_t\000"
 12595      6E5F7363 
 12595      625F6932 
 12595      635F636F 
 12595      6D6D616E 
 12596              	.LASF79:
 12597 0308 70657269 		.ascii	"periTrGrSize\000"
 12597      54724772 
 12597      53697A65 
 12597      00
 12598              	.LASF82:
 12599 0315 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 12599      44697643 
 12599      6D645061 
 12599      44697653 
 12599      656C506F 
 12600              	.LASF59:
 12601 032b 63727970 		.ascii	"cryptoMemSize\000"
 12601      746F4D65 
 12601      6D53697A 
 12601      6500
 12602              	.LASF319:
 12603 0339 7844656C 		.ascii	"xDelayedTaskList2\000"
 12603      61796564 
 12603      5461736B 
 12603      4C697374 
 12603      3200
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 327


 12604              	.LASF105:
 12605 034b 63707573 		.ascii	"cpussRam1Ctl0\000"
 12605      7352616D 
 12605      3143746C 
 12605      3000
 12606              	.LASF207:
 12607 0359 76506F72 		.ascii	"vPortSetBASEPRI\000"
 12607      74536574 
 12607      42415345 
 12607      50524900 
 12608              	.LASF347:
 12609 0369 76506F72 		.ascii	"vPortEnterCritical\000"
 12609      74456E74 
 12609      65724372 
 12609      69746963 
 12609      616C00
 12610              	.LASF107:
 12611 037c 69706353 		.ascii	"ipcStructSize\000"
 12611      74727563 
 12611      7453697A 
 12611      6500
 12612              	.LASF114:
 12613 038a 43595F53 		.ascii	"CY_SCB_I2C_NAK\000"
 12613      43425F49 
 12613      32435F4E 
 12613      414B00
 12614              	.LASF117:
 12615 0399 63795F63 		.ascii	"cy_cb_scb_i2c_handle_addr_t\000"
 12615      625F7363 
 12615      625F6932 
 12615      635F6861 
 12615      6E646C65 
 12616              	.LASF359:
 12617 03b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12617      43313120 
 12617      352E342E 
 12617      31203230 
 12617      31363036 
 12618 03e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 12618      20726576 
 12618      6973696F 
 12618      6E203233 
 12618      37373135 
 12619 041b 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 12619      70202D6D 
 12619      6670753D 
 12619      66707634 
 12619      2D73702D 
 12620 044e 65637469 		.ascii	"ections -ffat-lto-objects\000"
 12620      6F6E7320 
 12620      2D666661 
 12620      742D6C74 
 12620      6F2D6F62 
 12621              	.LASF41:
 12622 0468 70726F74 		.ascii	"protVersion\000"
 12622      56657273 
 12622      696F6E00 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 328


 12623              	.LASF141:
 12624 0474 63795F73 		.ascii	"cy_stc_scb_i2c_context\000"
 12624      74635F73 
 12624      63625F69 
 12624      32635F63 
 12624      6F6E7465 
 12625              	.LASF190:
 12626 048b 756C5061 		.ascii	"ulParameters\000"
 12626      72616D65 
 12626      74657273 
 12626      00
 12627              	.LASF245:
 12628 0498 78546173 		.ascii	"xTaskToResume\000"
 12628      6B546F52 
 12628      6573756D 
 12628      6500
 12629              	.LASF81:
 12630 04a6 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 12630      44697643 
 12630      6D645479 
 12630      70655365 
 12630      6C506F73 
 12631              	.LASF287:
 12632 04bb 70785469 		.ascii	"pxTicksToWait\000"
 12632      636B7354 
 12632      6F576169 
 12632      7400
 12633              	.LASF98:
 12634 04c9 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 12634      73547269 
 12634      6D52616D 
 12634      43746C4F 
 12634      66667365 
 12635              	.LASF355:
 12636 04df 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 12636      65724372 
 12636      65617465 
 12636      54696D65 
 12636      72546173 
 12637              	.LASF130:
 12638 04f5 736C6176 		.ascii	"slaveTxBuffer\000"
 12638      65547842 
 12638      75666665 
 12638      7200
 12639              	.LASF202:
 12640 0503 74736B54 		.ascii	"tskTCB\000"
 12640      434200
 12641              	.LASF132:
 12642 050a 736C6176 		.ascii	"slaveTxBufferIdx\000"
 12642      65547842 
 12642      75666665 
 12642      72496478 
 12642      00
 12643              	.LASF313:
 12644 051b 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 12644      6B47656E 
 12644      65726963 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 329


 12644      4E6F7469 
 12644      66794672 
 12645              	.LASF160:
 12646 0535 55426173 		.ascii	"UBaseType_t\000"
 12646      65547970 
 12646      655F7400 
 12647              	.LASF350:
 12648 0541 75784C69 		.ascii	"uxListRemove\000"
 12648      73745265 
 12648      6D6F7665 
 12648      00
 12649              	.LASF243:
 12650 054e 78596965 		.ascii	"xYieldRequired\000"
 12650      6C645265 
 12650      71756972 
 12650      656400
 12651              	.LASF361:
 12652 055d 433A5C55 		.ascii	"C:\\Users\\arnau\\Documents\\Projet-final-pulse-oxi"
 12652      73657273 
 12652      5C61726E 
 12652      61755C44 
 12652      6F63756D 
 12653 058c 6D657465 		.ascii	"meter\\Communication BMI160\\MotionSensor.cydsn\000"
 12653      725C436F 
 12653      6D6D756E 
 12653      69636174 
 12653      696F6E20 
 12654              	.LASF146:
 12655 05ba 72785269 		.ascii	"rxRingBufSize\000"
 12655      6E674275 
 12655      6653697A 
 12655      6500
 12656              	.LASF91:
 12657 05c8 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 12657      50727443 
 12657      66674F75 
 12657      744F6666 
 12657      73657400 
 12658              	.LASF205:
 12659 05dc 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 12659      6967696E 
 12659      616C4241 
 12659      53455052 
 12659      4900
 12660              	.LASF307:
 12661 05ee 78546173 		.ascii	"xTaskGenericNotify\000"
 12661      6B47656E 
 12661      65726963 
 12661      4E6F7469 
 12661      667900
 12662              	.LASF110:
 12663 0601 666C6F61 		.ascii	"float\000"
 12663      7400
 12664              	.LASF280:
 12665 0607 7078556E 		.ascii	"pxUnblockedTCB\000"
 12665      626C6F63 
 12665      6B656454 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 330


 12665      434200
 12666              	.LASF34:
 12667 0616 63727970 		.ascii	"cryptoVersion\000"
 12667      746F5665 
 12667      7273696F 
 12667      6E00
 12668              	.LASF231:
 12669 0624 75735374 		.ascii	"usStackDepth\000"
 12669      61636B44 
 12669      65707468 
 12669      00
 12670              	.LASF55:
 12671 0631 65704D6F 		.ascii	"epMonitorNr\000"
 12671      6E69746F 
 12671      724E7200 
 12672              	.LASF301:
 12673 063d 78436C65 		.ascii	"xClearCountOnExit\000"
 12673      6172436F 
 12673      756E744F 
 12673      6E457869 
 12673      7400
 12674              	.LASF142:
 12675 064f 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 12675      74635F73 
 12675      63625F75 
 12675      6172745F 
 12675      636F6E74 
 12676              	.LASF19:
 12677 0667 696E7431 		.ascii	"int16_t\000"
 12677      365F7400 
 12678              	.LASF90:
 12679 066f 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 12679      50727443 
 12679      6667496E 
 12679      4F666673 
 12679      657400
 12680              	.LASF288:
 12681 0682 78456C61 		.ascii	"xElapsedTime\000"
 12681      70736564 
 12681      54696D65 
 12681      00
 12682              	.LASF180:
 12683 068f 65536574 		.ascii	"eSetValueWithOverwrite\000"
 12683      56616C75 
 12683      65576974 
 12683      684F7665 
 12683      72777269 
 12684              	.LASF15:
 12685 06a6 6C6F6E67 		.ascii	"long long unsigned int\000"
 12685      206C6F6E 
 12685      6720756E 
 12685      7369676E 
 12685      65642069 
 12686              	.LASF252:
 12687 06bd 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 12687      6B476574 
 12687      5469636B 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 331


 12687      436F756E 
 12687      7446726F 
 12688              	.LASF92:
 12689 06d6 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 12689      50727443 
 12689      66675369 
 12689      6F4F6666 
 12689      73657400 
 12690              	.LASF304:
 12691 06ea 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 12691      7473546F 
 12691      436C6561 
 12691      724F6E45 
 12691      6E747279 
 12692              	.LASF46:
 12693 06ff 63707573 		.ascii	"cpussIpc0Irq\000"
 12693      73497063 
 12693      30497271 
 12693      00
 12694              	.LASF84:
 12695 070c 70657269 		.ascii	"periDiv8CtlOffset\000"
 12695      44697638 
 12695      43746C4F 
 12695      66667365 
 12695      7400
 12696              	.LASF322:
 12697 071e 7850656E 		.ascii	"xPendingReadyList\000"
 12697      64696E67 
 12697      52656164 
 12697      794C6973 
 12697      7400
 12698              	.LASF165:
 12699 0730 70785072 		.ascii	"pxPrevious\000"
 12699      6576696F 
 12699      757300
 12700              	.LASF323:
 12701 073b 78546173 		.ascii	"xTasksWaitingTermination\000"
 12701      6B735761 
 12701      6974696E 
 12701      67546572 
 12701      6D696E61 
 12702              	.LASF26:
 12703 0754 75646242 		.ascii	"udbBase\000"
 12703      61736500 
 12704              	.LASF131:
 12705 075c 736C6176 		.ascii	"slaveTxBufferSize\000"
 12705      65547842 
 12705      75666665 
 12705      7253697A 
 12705      6500
 12706              	.LASF296:
 12707 076e 70765265 		.ascii	"pvReturn\000"
 12707      7475726E 
 12707      00
 12708              	.LASF257:
 12709 0777 70785465 		.ascii	"pxTemp\000"
 12709      6D7000
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 332


 12710              	.LASF129:
 12711 077e 736C6176 		.ascii	"slaveRdBufEmpty\000"
 12711      65526442 
 12711      7566456D 
 12711      70747900 
 12712              	.LASF353:
 12713 078e 7076506F 		.ascii	"pvPortMalloc\000"
 12713      72744D61 
 12713      6C6C6F63 
 12713      00
 12714              	.LASF289:
 12715 079b 76546173 		.ascii	"vTaskSuspendAll\000"
 12715      6B537573 
 12715      70656E64 
 12715      416C6C00 
 12716              	.LASF199:
 12717 07ab 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 12717      72656164 
 12717      4C6F6361 
 12717      6C53746F 
 12717      72616765 
 12718              	.LASF144:
 12719 07c8 72785374 		.ascii	"rxStatus\000"
 12719      61747573 
 12719      00
 12720              	.LASF149:
 12721 07d1 72784275 		.ascii	"rxBuf\000"
 12721      6600
 12722              	.LASF68:
 12723 07d7 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 12723      6843746C 
 12723      4D61696E 
 12723      57733346 
 12723      72657100 
 12724              	.LASF50:
 12725 07eb 73727373 		.ascii	"srssNumPll\000"
 12725      4E756D50 
 12725      6C6C00
 12726              	.LASF182:
 12727 07f6 654E6F74 		.ascii	"eNotifyAction\000"
 12727      69667941 
 12727      6374696F 
 12727      6E00
 12728              	.LASF4:
 12729 0804 73697A65 		.ascii	"size_t\000"
 12729      5F7400
 12730              	.LASF61:
 12731 080b 666C6173 		.ascii	"flashPipeRequired\000"
 12731      68506970 
 12731      65526571 
 12731      75697265 
 12731      6400
 12732              	.LASF137:
 12733 081d 63624576 		.ascii	"cbEvents\000"
 12733      656E7473 
 12733      00
 12734              	.LASF265:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 333


 12735 0826 76546173 		.ascii	"vTaskDelay\000"
 12735      6B44656C 
 12735      617900
 12736              	.LASF179:
 12737 0831 65496E63 		.ascii	"eIncrement\000"
 12737      72656D65 
 12737      6E7400
 12738              	.LASF111:
 12739 083c 646F7562 		.ascii	"double\000"
 12739      6C6500
 12740              	.LASF169:
 12741 0843 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 12741      495F4C49 
 12741      53545F49 
 12741      54454D00 
 12742              	.LASF278:
 12743 0853 78576169 		.ascii	"xWaitIndefinitely\000"
 12743      74496E64 
 12743      6566696E 
 12743      6974656C 
 12743      7900
 12744              	.LASF327:
 12745 0865 78546963 		.ascii	"xTickCount\000"
 12745      6B436F75 
 12745      6E7400
 12746              	.LASF65:
 12747 0870 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 12747      6843746C 
 12747      4D61696E 
 12747      57733046 
 12747      72657100 
 12748              	.LASF230:
 12749 0884 70727649 		.ascii	"prvIdleTask\000"
 12749      646C6554 
 12749      61736B00 
 12750              	.LASF118:
 12751 0890 75736552 		.ascii	"useRxFifo\000"
 12751      78466966 
 12751      6F00
 12752              	.LASF249:
 12753 089a 76546173 		.ascii	"vTaskEndScheduler\000"
 12753      6B456E64 
 12753      53636865 
 12753      64756C65 
 12753      7200
 12754              	.LASF234:
 12755 08ac 75785461 		.ascii	"uxTaskPriorityGet\000"
 12755      736B5072 
 12755      696F7269 
 12755      74794765 
 12755      7400
 12756              	.LASF228:
 12757 08be 78436F6E 		.ascii	"xConstTickCount\000"
 12757      73745469 
 12757      636B436F 
 12757      756E7400 
 12758              	.LASF29:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 334


 12759 08ce 6770696F 		.ascii	"gpioBase\000"
 12759      42617365 
 12759      00
 12760              	.LASF348:
 12761 08d7 764C6973 		.ascii	"vListInsertEnd\000"
 12761      74496E73 
 12761      65727445 
 12761      6E6400
 12762              	.LASF325:
 12763 08e6 78537573 		.ascii	"xSuspendedTaskList\000"
 12763      70656E64 
 12763      65645461 
 12763      736B4C69 
 12763      737400
 12764              	.LASF215:
 12765 08f9 70634E61 		.ascii	"pcName\000"
 12765      6D6500
 12766              	.LASF292:
 12767 0900 78546173 		.ascii	"xTaskToSet\000"
 12767      6B546F53 
 12767      657400
 12768              	.LASF321:
 12769 090b 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 12769      6572666C 
 12769      6F774465 
 12769      6C617965 
 12769      64546173 
 12770              	.LASF194:
 12771 0925 78537461 		.ascii	"xStateListItem\000"
 12771      74654C69 
 12771      73744974 
 12771      656D00
 12772              	.LASF274:
 12773 0934 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 12773      6B506C61 
 12773      63654F6E 
 12773      4576656E 
 12773      744C6973 
 12774              	.LASF56:
 12775 094a 75646250 		.ascii	"udbPresent\000"
 12775      72657365 
 12775      6E7400
 12776              	.LASF112:
 12777 0955 5F426F6F 		.ascii	"_Bool\000"
 12777      6C00
 12778              	.LASF74:
 12779 095b 64775374 		.ascii	"dwStatusChIdxPos\000"
 12779      61747573 
 12779      43684964 
 12779      78506F73 
 12779      00
 12780              	.LASF9:
 12781 096c 5F5F7569 		.ascii	"__uint16_t\000"
 12781      6E743136 
 12781      5F7400
 12782              	.LASF200:
 12783 0977 756C4E6F 		.ascii	"ulNotifiedValue\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 335


 12783      74696669 
 12783      65645661 
 12783      6C756500 
 12784              	.LASF49:
 12785 0987 73727373 		.ascii	"srssNumClkpath\000"
 12785      4E756D43 
 12785      6C6B7061 
 12785      746800
 12786              	.LASF127:
 12787 0996 6D617374 		.ascii	"masterNumBytes\000"
 12787      65724E75 
 12787      6D427974 
 12787      657300
 12788              	.LASF281:
 12789 09a5 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 12789      6B52656D 
 12789      6F766546 
 12789      726F6D55 
 12789      6E6F7264 
 12790              	.LASF45:
 12791 09c7 63707573 		.ascii	"cpussFlashPaSize\000"
 12791      73466C61 
 12791      73685061 
 12791      53697A65 
 12791      00
 12792              	.LASF24:
 12793 09d8 666C6173 		.ascii	"flashcBase\000"
 12793      68634261 
 12793      736500
 12794              	.LASF158:
 12795 09e3 53746163 		.ascii	"StackType_t\000"
 12795      6B547970 
 12795      655F7400 
 12796              	.LASF17:
 12797 09ef 63686172 		.ascii	"char\000"
 12797      00
 12798              	.LASF168:
 12799 09f4 4C697374 		.ascii	"ListItem_t\000"
 12799      4974656D 
 12799      5F7400
 12800              	.LASF181:
 12801 09ff 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 12801      56616C75 
 12801      65576974 
 12801      686F7574 
 12801      4F766572 
 12802              	.LASF148:
 12803 0a19 72785269 		.ascii	"rxRingBufTail\000"
 12803      6E674275 
 12803      66546169 
 12803      6C00
 12804              	.LASF303:
 12805 0a27 78546173 		.ascii	"xTaskNotifyWait\000"
 12805      6B4E6F74 
 12805      69667957 
 12805      61697400 
 12806              	.LASF201:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 336


 12807 0a37 75634E6F 		.ascii	"ucNotifyState\000"
 12807      74696679 
 12807      53746174 
 12807      6500
 12808              	.LASF216:
 12809 0a45 756C5374 		.ascii	"ulStackDepth\000"
 12809      61636B44 
 12809      65707468 
 12809      00
 12810              	.LASF184:
 12811 0a52 784F7665 		.ascii	"xOverflowCount\000"
 12811      72666C6F 
 12811      77436F75 
 12811      6E7400
 12812              	.LASF57:
 12813 0a61 73797350 		.ascii	"sysPmSimoPresent\000"
 12813      6D53696D 
 12813      6F507265 
 12813      73656E74 
 12813      00
 12814              	.LASF125:
 12815 0a72 6D617374 		.ascii	"masterBufferSize\000"
 12815      65724275 
 12815      66666572 
 12815      53697A65 
 12815      00
 12816              	.LASF264:
 12817 0a83 7853686F 		.ascii	"xShouldDelay\000"
 12817      756C6444 
 12817      656C6179 
 12817      00
 12818              	.LASF186:
 12819 0a90 54696D65 		.ascii	"TimeOut_t\000"
 12819      4F75745F 
 12819      7400
 12820              	.LASF174:
 12821 0a9a 784C6973 		.ascii	"xListEnd\000"
 12821      74456E64 
 12821      00
 12822              	.LASF300:
 12823 0aa3 756C5461 		.ascii	"ulTaskNotifyTake\000"
 12823      736B4E6F 
 12823      74696679 
 12823      54616B65 
 12823      00
 12824              	.LASF151:
 12825 0ab4 72784275 		.ascii	"rxBufIdx\000"
 12825      66496478 
 12825      00
 12826              	.LASF170:
 12827 0abd 4D696E69 		.ascii	"MiniListItem_t\000"
 12827      4C697374 
 12827      4974656D 
 12827      5F7400
 12828              	.LASF277:
 12829 0acc 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 12829      6B506C61 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 337


 12829      63654F6E 
 12829      4576656E 
 12829      744C6973 
 12830              	.LASF155:
 12831 0aec 696E6974 		.ascii	"initKey\000"
 12831      4B657900 
 12832              	.LASF222:
 12833 0af4 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 12833      64644E65 
 12833      77546173 
 12833      6B546F52 
 12833      65616479 
 12834              	.LASF75:
 12835 0b0d 64775374 		.ascii	"dwStatusChIdxMsk\000"
 12835      61747573 
 12835      43684964 
 12835      784D736B 
 12835      00
 12836              	.LASF18:
 12837 0b1e 75696E74 		.ascii	"uint8_t\000"
 12837      385F7400 
 12838              	.LASF219:
 12839 0b26 70784E65 		.ascii	"pxNewTCB\000"
 12839      77544342 
 12839      00
 12840              	.LASF133:
 12841 0b2f 736C6176 		.ascii	"slaveTxBufferCnt\000"
 12841      65547842 
 12841      75666665 
 12841      72436E74 
 12841      00
 12842              	.LASF80:
 12843 0b40 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 12843      44697643 
 12843      6D644469 
 12843      7653656C 
 12843      4D736B00 
 12844              	.LASF214:
 12845 0b54 70785461 		.ascii	"pxTaskCode\000"
 12845      736B436F 
 12845      646500
 12846              	.LASF86:
 12847 0b5f 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 12847      44697631 
 12847      365F3543 
 12847      746C4F66 
 12847      66736574 
 12848              	.LASF191:
 12849 0b74 4D656D6F 		.ascii	"MemoryRegion_t\000"
 12849      72795265 
 12849      67696F6E 
 12849      5F7400
 12850              	.LASF334:
 12851 0b83 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 12851      74546173 
 12851      6B556E62 
 12851      6C6F636B 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 338


 12851      54696D65 
 12852              	.LASF140:
 12853 0b98 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 12853      625F7363 
 12853      625F7561 
 12853      72745F68 
 12853      616E646C 
 12854              	.LASF362:
 12855 0bb7 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 12855      72745261 
 12855      69736542 
 12855      41534550 
 12855      524900
 12856              	.LASF345:
 12857 0bca 7078506F 		.ascii	"pxPortInitialiseStack\000"
 12857      7274496E 
 12857      69746961 
 12857      6C697365 
 12857      53746163 
 12858              	.LASF104:
 12859 0be0 63707573 		.ascii	"cpussRam0Ctl0\000"
 12859      7352616D 
 12859      3043746C 
 12859      3000
 12860              	.LASF1:
 12861 0bee 6C6F6E67 		.ascii	"long long int\000"
 12861      206C6F6E 
 12861      6720696E 
 12861      7400
 12862              	.LASF31:
 12863 0bfc 69706342 		.ascii	"ipcBase\000"
 12863      61736500 
 12864              	.LASF72:
 12865 0c04 64774368 		.ascii	"dwChCtlPrioPos\000"
 12865      43746C50 
 12865      72696F50 
 12865      6F7300
 12866              	.LASF32:
 12867 0c13 63727970 		.ascii	"cryptoBase\000"
 12867      746F4261 
 12867      736500
 12868              	.LASF235:
 12869 0c1e 75785265 		.ascii	"uxReturn\000"
 12869      7475726E 
 12869      00
 12870              	.LASF87:
 12871 0c27 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 12871      44697632 
 12871      345F3543 
 12871      746C4F66 
 12871      66736574 
 12872              	.LASF302:
 12873 0c3c 756C5265 		.ascii	"ulReturn\000"
 12873      7475726E 
 12873      00
 12874              	.LASF62:
 12875 0c45 666C6173 		.ascii	"flashWriteDelay\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 339


 12875      68577269 
 12875      74654465 
 12875      6C617900 
 12876              	.LASF204:
 12877 0c55 756C4E65 		.ascii	"ulNewBASEPRI\000"
 12877      77424153 
 12877      45505249 
 12877      00
 12878              	.LASF189:
 12879 0c62 756C4C65 		.ascii	"ulLengthInBytes\000"
 12879      6E677468 
 12879      496E4279 
 12879      74657300 
 12880              	.LASF159:
 12881 0c72 42617365 		.ascii	"BaseType_t\000"
 12881      54797065 
 12881      5F7400
 12882              	.LASF119:
 12883 0c7d 75736554 		.ascii	"useTxFifo\000"
 12883      78466966 
 12883      6F00
 12884              	.LASF269:
 12885 0c87 756C4368 		.ascii	"ulCheckValue\000"
 12885      65636B56 
 12885      616C7565 
 12885      00
 12886              	.LASF7:
 12887 0c94 5F5F696E 		.ascii	"__int16_t\000"
 12887      7431365F 
 12887      7400
 12888              	.LASF210:
 12889 0c9e 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 12889      65736574 
 12889      4E657874 
 12889      5461736B 
 12889      556E626C 
 12890              	.LASF185:
 12891 0cba 7854696D 		.ascii	"xTimeOnEntering\000"
 12891      654F6E45 
 12891      6E746572 
 12891      696E6700 
 12892              	.LASF240:
 12893 0cca 75784E65 		.ascii	"uxNewPriority\000"
 12893      77507269 
 12893      6F726974 
 12893      7900
 12894              	.LASF28:
 12895 0cd8 6873696F 		.ascii	"hsiomBase\000"
 12895      6D426173 
 12895      6500
 12896              	.LASF164:
 12897 0ce2 70784E65 		.ascii	"pxNext\000"
 12897      787400
 12898              	.LASF311:
 12899 0ce9 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 12899      72657669 
 12899      6F75734E 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 340


 12899      6F746966 
 12899      69636174 
 12900              	.LASF343:
 12901 0d06 6D656D73 		.ascii	"memset\000"
 12901      657400
 12902              	.LASF284:
 12903 0d0d 70785469 		.ascii	"pxTimeOut\000"
 12903      6D654F75 
 12903      7400
 12904              	.LASF78:
 12905 0d17 70657269 		.ascii	"periTrGrOffset\000"
 12905      54724772 
 12905      4F666673 
 12905      657400
 12906              	.LASF48:
 12907 0d26 63707573 		.ascii	"cpussNotConnectedIrq\000"
 12907      734E6F74 
 12907      436F6E6E 
 12907      65637465 
 12907      64497271 
 12908              	.LASF147:
 12909 0d3b 72785269 		.ascii	"rxRingBufHead\000"
 12909      6E674275 
 12909      66486561 
 12909      6400
 12910              	.LASF44:
 12911 0d49 63707573 		.ascii	"cpussDwChNr\000"
 12911      73447743 
 12911      684E7200 
 12912              	.LASF250:
 12913 0d55 78546173 		.ascii	"xTaskGetTickCount\000"
 12913      6B476574 
 12913      5469636B 
 12913      436F756E 
 12913      7400
 12914              	.LASF236:
 12915 0d67 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 12915      736B5072 
 12915      696F7269 
 12915      74794765 
 12915      7446726F 
 12916              	.LASF153:
 12917 0d80 74784275 		.ascii	"txBufSize\000"
 12917      6653697A 
 12917      6500
 12918              	.LASF285:
 12919 0d8a 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 12919      6B496E74 
 12919      65726E61 
 12919      6C536574 
 12919      54696D65 
 12920              	.LASF42:
 12921 0da7 63707573 		.ascii	"cpussIpcNr\000"
 12921      73497063 
 12921      4E7200
 12922              	.LASF333:
 12923 0db2 75785461 		.ascii	"uxTaskNumber\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 341


 12923      736B4E75 
 12923      6D626572 
 12923      00
 12924              	.LASF352:
 12925 0dbf 76417070 		.ascii	"vApplicationIdleHook\000"
 12925      6C696361 
 12925      74696F6E 
 12925      49646C65 
 12925      486F6F6B 
 12926              	.LASF176:
 12927 0dd4 5461736B 		.ascii	"TaskHandle_t\000"
 12927      48616E64 
 12927      6C655F74 
 12927      00
 12928              	.LASF310:
 12929 0de1 65416374 		.ascii	"eAction\000"
 12929      696F6E00 
 12930              	.LASF363:
 12931 0de9 756C4E65 		.ascii	"ulNewMaskValue\000"
 12931      774D6173 
 12931      6B56616C 
 12931      756500
 12932              	.LASF54:
 12933 0df8 70617373 		.ascii	"passSarChannels\000"
 12933      53617243 
 12933      68616E6E 
 12933      656C7300 
 12934              	.LASF299:
 12935 0e08 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 12935      736B5265 
 12935      73657445 
 12935      76656E74 
 12935      4974656D 
 12936              	.LASF106:
 12937 0e22 63707573 		.ascii	"cpussRam2Ctl0\000"
 12937      7352616D 
 12937      3243746C 
 12937      3000
 12938              	.LASF239:
 12939 0e30 76546173 		.ascii	"vTaskPrioritySet\000"
 12939      6B507269 
 12939      6F726974 
 12939      79536574 
 12939      00
 12940              	.LASF122:
 12941 0e41 6D617374 		.ascii	"masterPause\000"
 12941      65725061 
 12941      75736500 
 12942              	.LASF175:
 12943 0e4d 4C697374 		.ascii	"List_t\000"
 12943      5F7400
 12944              	.LASF254:
 12945 0e54 78546173 		.ascii	"xTaskToQuery\000"
 12945      6B546F51 
 12945      75657279 
 12945      00
 12946              	.LASF152:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 342


 12947 0e61 74784275 		.ascii	"txBuf\000"
 12947      6600
 12948              	.LASF161:
 12949 0e67 5469636B 		.ascii	"TickType_t\000"
 12949      54797065 
 12949      5F7400
 12950              	.LASF308:
 12951 0e72 78546173 		.ascii	"xTaskToNotify\000"
 12951      6B546F4E 
 12951      6F746966 
 12951      7900
 12952              	.LASF212:
 12953 0e80 78546173 		.ascii	"xTask\000"
 12953      6B00
 12954              	.LASF339:
 12955 0e86 44454255 		.ascii	"DEBUG_UART_context\000"
 12955      475F5541 
 12955      52545F63 
 12955      6F6E7465 
 12955      787400
 12956              	.LASF135:
 12957 0e99 736C6176 		.ascii	"slaveRxBufferSize\000"
 12957      65527842 
 12957      75666665 
 12957      7253697A 
 12957      6500
 12958              	.LASF10:
 12959 0eab 73686F72 		.ascii	"short unsigned int\000"
 12959      7420756E 
 12959      7369676E 
 12959      65642069 
 12959      6E7400
 12960              	.LASF178:
 12961 0ebe 65536574 		.ascii	"eSetBits\000"
 12961      42697473 
 12961      00
 12962              	.LASF145:
 12963 0ec7 72785269 		.ascii	"rxRingBuf\000"
 12963      6E674275 
 12963      6600
 12964              	.LASF2:
 12965 0ed1 6C6F6E67 		.ascii	"long double\000"
 12965      20646F75 
 12965      626C6500 
 12966              	.LASF187:
 12967 0edd 784D454D 		.ascii	"xMEMORY_REGION\000"
 12967      4F52595F 
 12967      52454749 
 12967      4F4E00
 12968              	.LASF20:
 12969 0eec 75696E74 		.ascii	"uint16_t\000"
 12969      31365F74 
 12969      00
 12970              	.LASF238:
 12971 0ef5 76546173 		.ascii	"vTaskDelete\000"
 12971      6B44656C 
 12971      65746500 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 343


 12972              	.LASF77:
 12973 0f01 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 12973      5472436D 
 12973      64477253 
 12973      656C4D73 
 12973      6B00
 12974              	.LASF124:
 12975 0f13 6D617374 		.ascii	"masterBuffer\000"
 12975      65724275 
 12975      66666572 
 12975      00
 12976              	.LASF267:
 12977 0f20 76546173 		.ascii	"vTaskSwitchContext\000"
 12977      6B537769 
 12977      74636843 
 12977      6F6E7465 
 12977      787400
 12978              	.LASF332:
 12979 0f33 784E756D 		.ascii	"xNumOfOverflows\000"
 12979      4F664F76 
 12979      6572666C 
 12979      6F777300 
 12980              	.LASF167:
 12981 0f43 7076436F 		.ascii	"pvContainer\000"
 12981      6E746169 
 12981      6E657200 
 12982              	.LASF51:
 12983 0f4f 73727373 		.ascii	"srssNumHfroot\000"
 12983      4E756D48 
 12983      66726F6F 
 12983      7400
 12984              	.LASF73:
 12985 0f5d 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 12985      43746C50 
 12985      7265656D 
 12985      70746162 
 12985      6C65506F 
 12986              	.LASF35:
 12987 0f73 64775665 		.ascii	"dwVersion\000"
 12987      7273696F 
 12987      6E00
 12988              	.LASF341:
 12989 0f7d 70784375 		.ascii	"pxCurrentTCB\000"
 12989      7272656E 
 12989      74544342 
 12989      00
 12990              	.LASF6:
 12991 0f8a 756E7369 		.ascii	"unsigned char\000"
 12991      676E6564 
 12991      20636861 
 12991      7200
 12992              	.LASF16:
 12993 0f98 73697A65 		.ascii	"sizetype\000"
 12993      74797065 
 12993      00
 12994              	.LASF102:
 12995 0fa1 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 344


 12995      73436D34 
 12995      4E6D6943 
 12995      746C4F66 
 12995      66736574 
 12996              	.LASF96:
 12997 0fb6 63707573 		.ascii	"cpussCm0StatusOffset\000"
 12997      73436D30 
 12997      53746174 
 12997      75734F66 
 12997      66736574 
 12998              	.LASF358:
 12999 0fcb 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 12999      6C696361 
 12999      74696F6E 
 12999      53746163 
 12999      6B4F7665 
 13000              	.LASF8:
 13001 0fe9 73686F72 		.ascii	"short int\000"
 13001      7420696E 
 13001      7400
 13002              	.LASF85:
 13003 0ff3 70657269 		.ascii	"periDiv16CtlOffset\000"
 13003      44697631 
 13003      3643746C 
 13003      4F666673 
 13003      657400
 13004              	.LASF344:
 13005 1006 764C6973 		.ascii	"vListInitialiseItem\000"
 13005      74496E69 
 13005      7469616C 
 13005      69736549 
 13005      74656D00 
 13006              	.LASF213:
 13007 101a 70727649 		.ascii	"prvInitialiseNewTask\000"
 13007      6E697469 
 13007      616C6973 
 13007      654E6577 
 13007      5461736B 
 13008              	.LASF217:
 13009 102f 70765061 		.ascii	"pvParameters\000"
 13009      72616D65 
 13009      74657273 
 13009      00
 13010              	.LASF163:
 13011 103c 78497465 		.ascii	"xItemValue\000"
 13011      6D56616C 
 13011      756500
 13012              	.LASF12:
 13013 1047 6C6F6E67 		.ascii	"long int\000"
 13013      20696E74 
 13013      00
 13014              	.LASF33:
 13015 1050 63707573 		.ascii	"cpussVersion\000"
 13015      73566572 
 13015      73696F6E 
 13015      00
 13016              	.LASF338:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 345


 13017 105d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13017      52784275 
 13017      66666572 
 13017      00
 13018              	.LASF37:
 13019 106a 6770696F 		.ascii	"gpioVersion\000"
 13019      56657273 
 13019      696F6E00 
 13020              	.LASF258:
 13021 1076 78546173 		.ascii	"xTaskResumeAll\000"
 13021      6B526573 
 13021      756D6541 
 13021      6C6C00
 13022              	.LASF315:
 13023 1085 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 13023      6B4E6F74 
 13023      69667947 
 13023      69766546 
 13023      726F6D49 
 13024              	.LASF320:
 13025 109c 70784465 		.ascii	"pxDelayedTaskList\000"
 13025      6C617965 
 13025      64546173 
 13025      6B4C6973 
 13025      7400
 13026              	.LASF36:
 13027 10ae 666C6173 		.ascii	"flashcVersion\000"
 13027      68635665 
 13027      7273696F 
 13027      6E00
 13028              	.LASF58:
 13029 10bc 70726F74 		.ascii	"protBusMasterMask\000"
 13029      4275734D 
 13029      61737465 
 13029      724D6173 
 13029      6B00
 13030              	.LASF27:
 13031 10ce 70726F74 		.ascii	"protBase\000"
 13031      42617365 
 13031      00
 13032              	.LASF229:
 13033 10d7 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 13033      61736B49 
 13033      73546173 
 13033      6B537573 
 13033      70656E64 
 13034              	.LASF154:
 13035 10ee 74784C65 		.ascii	"txLeftToTransmit\000"
 13035      6674546F 
 13035      5472616E 
 13035      736D6974 
 13035      00
 13036              	.LASF256:
 13037 10ff 78537769 		.ascii	"xSwitchRequired\000"
 13037      74636852 
 13037      65717569 
 13037      72656400 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 346


 13038              	.LASF197:
 13039 110f 70785374 		.ascii	"pxStack\000"
 13039      61636B00 
 13040              	.LASF232:
 13041 1117 78546173 		.ascii	"xTaskToDelete\000"
 13041      6B546F44 
 13041      656C6574 
 13041      6500
 13042              	.LASF309:
 13043 1125 756C5661 		.ascii	"ulValue\000"
 13043      6C756500 
 13044              	.LASF273:
 13045 112d 78546173 		.ascii	"xTaskToSuspend\000"
 13045      6B546F53 
 13045      75737065 
 13045      6E6400
 13046              	.LASF286:
 13047 113c 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 13047      6B436865 
 13047      636B466F 
 13047      7254696D 
 13047      654F7574 
 13048              	.LASF357:
 13049 1151 76506F72 		.ascii	"vPortEndScheduler\000"
 13049      74456E64 
 13049      53636865 
 13049      64756C65 
 13049      7200
 13050              	.LASF342:
 13051 1163 76506F72 		.ascii	"vPortFree\000"
 13051      74467265 
 13051      6500
 13052              	.LASF328:
 13053 116d 7578546F 		.ascii	"uxTopReadyPriority\000"
 13053      70526561 
 13053      64795072 
 13053      696F7269 
 13053      747900
 13054              	.LASF262:
 13055 1180 70785072 		.ascii	"pxPreviousWakeTime\000"
 13055      6576696F 
 13055      75735761 
 13055      6B655469 
 13055      6D6500
 13056              	.LASF97:
 13057 1193 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 13057      73436D34 
 13057      50777243 
 13057      746C4F66 
 13057      66736574 
 13058              	.LASF5:
 13059 11a8 5F5F7569 		.ascii	"__uint8_t\000"
 13059      6E74385F 
 13059      7400
 13060              	.LASF136:
 13061 11b2 736C6176 		.ascii	"slaveRxBufferIdx\000"
 13061      65527842 
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 347


 13061      75666665 
 13061      72496478 
 13061      00
 13062              	.LASF293:
 13063 11c3 78496E64 		.ascii	"xIndex\000"
 13063      657800
 13064              	.LASF335:
 13065 11ca 7849646C 		.ascii	"xIdleTaskHandle\000"
 13065      65546173 
 13065      6B48616E 
 13065      646C6500 
 13066              	.LASF88:
 13067 11da 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 13067      50727449 
 13067      6E747243 
 13067      66674F66 
 13067      66736574 
 13068              	.LASF94:
 13069 11ef 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 13069      73436D34 
 13069      436C6F63 
 13069      6B43746C 
 13069      4F666673 
 13070              	.LASF246:
 13071 1206 78546173 		.ascii	"xTaskResumeFromISR\000"
 13071      6B526573 
 13071      756D6546 
 13071      726F6D49 
 13071      535200
 13072              	.LASF306:
 13073 1219 70756C4E 		.ascii	"pulNotificationValue\000"
 13073      6F746966 
 13073      69636174 
 13073      696F6E56 
 13073      616C7565 
 13074              	.LASF99:
 13075 122e 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 13075      73547269 
 13075      6D526F6D 
 13075      43746C4F 
 13075      66667365 
 13076              	.LASF100:
 13077 1244 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 13077      73537973 
 13077      5469636B 
 13077      43746C4F 
 13077      66667365 
 13078              	.LASF208:
 13079 125a 78526574 		.ascii	"xReturn\000"
 13079      75726E00 
 13080              	.LASF38:
 13081 1262 6873696F 		.ascii	"hsiomVersion\000"
 13081      6D566572 
 13081      73696F6E 
 13081      00
 13082              	.LASF290:
 13083 126f 76546173 		.ascii	"vTaskMissedYield\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 348


 13083      6B4D6973 
 13083      73656459 
 13083      69656C64 
 13083      00
 13084              	.LASF330:
 13085 1280 75785065 		.ascii	"uxPendedTicks\000"
 13085      6E646564 
 13085      5469636B 
 13085      7300
 13086              	.LASF14:
 13087 128e 6C6F6E67 		.ascii	"long unsigned int\000"
 13087      20756E73 
 13087      69676E65 
 13087      6420696E 
 13087      7400
 13088              	.LASF206:
 13089 12a0 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 13089      74526169 
 13089      73654241 
 13089      53455052 
 13089      4900
 13090              	.LASF103:
 13091 12b2 63707573 		.ascii	"cpussRomCtl\000"
 13091      73526F6D 
 13091      43746C00 
 13092              	.LASF123:
 13093 12be 6D617374 		.ascii	"masterRdDir\000"
 13093      65725264 
 13093      44697200 
 13094              	.LASF253:
 13095 12ca 70635461 		.ascii	"pcTaskGetName\000"
 13095      736B4765 
 13095      744E616D 
 13095      6500
 13096              	.LASF21:
 13097 12d8 696E7433 		.ascii	"int32_t\000"
 13097      325F7400 
 13098              	.LASF251:
 13099 12e0 78546963 		.ascii	"xTicks\000"
 13099      6B7300
 13100              	.LASF248:
 13101 12e7 76546173 		.ascii	"vTaskStartScheduler\000"
 13101      6B537461 
 13101      72745363 
 13101      68656475 
 13101      6C657200 
 13102              	.LASF226:
 13103 12fb 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 13103      426C6F63 
 13103      6B496E64 
 13103      6566696E 
 13103      6974656C 
 13104              	.LASF157:
 13105 1311 5461736B 		.ascii	"TaskFunction_t\000"
 13105      46756E63 
 13105      74696F6E 
 13105      5F7400
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 349


 13106              	.LASF268:
 13107 1320 70756C53 		.ascii	"pulStack\000"
 13107      7461636B 
 13107      00
 13108              	.LASF295:
 13109 1329 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 13109      736B4765 
 13109      74546872 
 13109      6561644C 
 13109      6F63616C 
 13110              	.LASF188:
 13111 134c 70764261 		.ascii	"pvBaseAddress\000"
 13111      73654164 
 13111      64726573 
 13111      7300
 13112              	.LASF266:
 13113 135a 78546963 		.ascii	"xTicksToDelay\000"
 13113      6B73546F 
 13113      44656C61 
 13113      7900
 13114              	.LASF198:
 13115 1368 70635461 		.ascii	"pcTaskName\000"
 13115      736B4E61 
 13115      6D6500
 13116              	.LASF276:
 13117 1373 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 13117      6B506C61 
 13117      63654F6E 
 13117      556E6F72 
 13117      64657265 
 13118              	.LASF13:
 13119 1392 5F5F7569 		.ascii	"__uint32_t\000"
 13119      6E743332 
 13119      5F7400
 13120              	.LASF108:
 13121 139d 6970634C 		.ascii	"ipcLockStatusOffset\000"
 13121      6F636B53 
 13121      74617475 
 13121      734F6666 
 13121      73657400 
 13122              	.LASF346:
 13123 13b1 764C6973 		.ascii	"vListInitialise\000"
 13123      74496E69 
 13123      7469616C 
 13123      69736500 
 13124              	.LASF354:
 13125 13c1 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 13125      7456616C 
 13125      69646174 
 13125      65496E74 
 13125      65727275 
 13126              	.LASF351:
 13127 13e0 764C6973 		.ascii	"vListInsert\000"
 13127      74496E73 
 13127      65727400 
 13128              	.LASF270:
 13129 13ec 7578546F 		.ascii	"uxTopPriority\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 350


 13129      70507269 
 13129      6F726974 
 13129      7900
 13130              	.LASF261:
 13131 13fa 76546173 		.ascii	"vTaskDelayUntil\000"
 13131      6B44656C 
 13131      6179556E 
 13131      74696C00 
 13132              	.LASF195:
 13133 140a 78457665 		.ascii	"xEventListItem\000"
 13133      6E744C69 
 13133      73744974 
 13133      656D00
 13134              	.LASF64:
 13135 1419 666C6173 		.ascii	"flashEraseDelay\000"
 13135      68457261 
 13135      73654465 
 13135      6C617900 
 13136              	.LASF242:
 13137 1429 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 13137      696F7269 
 13137      74795573 
 13137      65644F6E 
 13137      456E7472 
 13138              	.LASF203:
 13139 143f 5443425F 		.ascii	"TCB_t\000"
 13139      7400
 13140              	.LASF225:
 13141 1445 78546963 		.ascii	"xTicksToWait\000"
 13141      6B73546F 
 13141      57616974 
 13141      00
 13142              	.LASF166:
 13143 1452 70764F77 		.ascii	"pvOwner\000"
 13143      6E657200 
 13144              	.LASF211:
 13145 145a 70727644 		.ascii	"prvDeleteTCB\000"
 13145      656C6574 
 13145      65544342 
 13145      00
 13146              	.LASF272:
 13147 1467 76546173 		.ascii	"vTaskSuspend\000"
 13147      6B537573 
 13147      70656E64 
 13147      00
 13148              	.LASF360:
 13149 1474 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 13149      72617465 
 13149      645F536F 
 13149      75726365 
 13149      5C50536F 
 13150 14a2 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 13150      75726365 
 13150      5C746173 
 13150      6B732E63 
 13150      00
 13151              	.LASF259:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 351


 13152 14b3 78416C72 		.ascii	"xAlreadyYielded\000"
 13152      65616479 
 13152      5969656C 
 13152      64656400 
 13153              	.LASF297:
 13154 14c3 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 13154      6B476574 
 13154      43757272 
 13154      656E7454 
 13154      61736B48 
 13155              	.LASF120:
 13156 14dd 73746174 		.ascii	"state\000"
 13156      6500
 13157              	.LASF233:
 13158 14e3 78546173 		.ascii	"xTaskCreate\000"
 13158      6B437265 
 13158      61746500 
 13159              	.LASF237:
 13160 14ef 75785361 		.ascii	"uxSavedInterruptState\000"
 13160      76656449 
 13160      6E746572 
 13160      72757074 
 13160      53746174 
 13161              	.LASF220:
 13162 1505 78526567 		.ascii	"xRegions\000"
 13162      696F6E73 
 13162      00
 13163              	.LASF224:
 13164 150e 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 13164      64644375 
 13164      7272656E 
 13164      74546173 
 13164      6B546F44 
 13165              	.LASF60:
 13166 152d 666C6173 		.ascii	"flashRwwRequired\000"
 13166      68527777 
 13166      52657175 
 13166      69726564 
 13166      00
 13167              	.LASF89:
 13168 153e 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 13168      50727443 
 13168      66674F66 
 13168      66736574 
 13168      00
 13169              	.LASF326:
 13170 154f 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 13170      7272656E 
 13170      744E756D 
 13170      6265724F 
 13170      66546173 
 13171              	.LASF263:
 13172 1566 7854696D 		.ascii	"xTimeIncrement\000"
 13172      65496E63 
 13172      72656D65 
 13172      6E7400
 13173              	.LASF3:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 352


 13174 1575 7369676E 		.ascii	"signed char\000"
 13174      65642063 
 13174      68617200 
 13175              	.LASF70:
 13176 1581 64774368 		.ascii	"dwChOffset\000"
 13176      4F666673 
 13176      657400
 13177              	.LASF43:
 13178 158c 63707573 		.ascii	"cpussIpcIrqNr\000"
 13178      73497063 
 13178      4972714E 
 13178      7200
 13179              	.LASF227:
 13180 159a 7854696D 		.ascii	"xTimeToWake\000"
 13180      65546F57 
 13180      616B6500 
 13181              	.LASF316:
 13182 15a6 78546173 		.ascii	"xTaskNotifyStateClear\000"
 13182      6B4E6F74 
 13182      69667953 
 13182      74617465 
 13182      436C6561 
 13183              	.LASF209:
 13184 15bc 70785443 		.ascii	"pxTCB\000"
 13184      4200
 13185              	.LASF95:
 13186 15c2 63707573 		.ascii	"cpussCm4StatusOffset\000"
 13186      73436D34 
 13186      53746174 
 13186      75734F66 
 13186      66736574 
 13187              	.LASF109:
 13188 15d7 63795F73 		.ascii	"cy_stc_device_t\000"
 13188      74635F64 
 13188      65766963 
 13188      655F7400 
 13189              	.LASF298:
 13190 15e7 78546173 		.ascii	"xTaskGetSchedulerState\000"
 13190      6B476574 
 13190      53636865 
 13190      64756C65 
 13190      72537461 
 13191              	.LASF40:
 13192 15fe 70657269 		.ascii	"periVersion\000"
 13192      56657273 
 13192      696F6E00 
 13193              	.LASF340:
 13194 160a 4932436D 		.ascii	"I2Cm_context\000"
 13194      5F636F6E 
 13194      74657874 
 13194      00
 13195              	.LASF30:
 13196 1617 70617373 		.ascii	"passBase\000"
 13196      42617365 
 13196      00
 13197              	.LASF67:
 13198 1620 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 353


 13198      6843746C 
 13198      4D61696E 
 13198      57733246 
 13198      72657100 
 13199              	.LASF336:
 13200 1634 75785363 		.ascii	"uxSchedulerSuspended\000"
 13200      68656475 
 13200      6C657253 
 13200      75737065 
 13200      6E646564 
 13201              	.LASF139:
 13202 1649 63795F73 		.ascii	"cy_stc_scb_i2c_context_t\000"
 13202      74635F73 
 13202      63625F69 
 13202      32635F63 
 13202      6F6E7465 
 13203              	.LASF69:
 13204 1662 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 13204      6843746C 
 13204      4D61696E 
 13204      57733446 
 13204      72657100 
 13205              	.LASF193:
 13206 1676 7078546F 		.ascii	"pxTopOfStack\000"
 13206      704F6653 
 13206      7461636B 
 13206      00
 13207              	.LASF244:
 13208 1683 76546173 		.ascii	"vTaskResume\000"
 13208      6B526573 
 13208      756D6500 
 13209              	.LASF221:
 13210 168f 70727649 		.ascii	"prvInitialiseTaskLists\000"
 13210      6E697469 
 13210      616C6973 
 13210      65546173 
 13210      6B4C6973 
 13211              	.LASF282:
 13212 16a6 70784576 		.ascii	"pxEventListItem\000"
 13212      656E744C 
 13212      69737449 
 13212      74656D00 
 13213              	.LASF294:
 13214 16b6 70765661 		.ascii	"pvValue\000"
 13214      6C756500 
 13215              	.LASF218:
 13216 16be 70784372 		.ascii	"pxCreatedTask\000"
 13216      65617465 
 13216      64546173 
 13216      6B00
 13217              	.LASF223:
 13218 16cc 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 13218      6865636B 
 13218      5461736B 
 13218      73576169 
 13218      74696E67 
 13219              	.LASF247:
ARM GAS  C:\Users\arnau\AppData\Local\Temp\cc7VN0xw.s 			page 354


 13220 16ec 75785361 		.ascii	"uxSavedInterruptStatus\000"
 13220      76656449 
 13220      6E746572 
 13220      72757074 
 13220      53746174 
 13221              	.LASF39:
 13222 1703 69706356 		.ascii	"ipcVersion\000"
 13222      65727369 
 13222      6F6E00
 13223              	.LASF279:
 13224 170e 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 13224      6B52656D 
 13224      6F766546 
 13224      726F6D45 
 13224      76656E74 
 13225              	.LASF63:
 13226 1727 666C6173 		.ascii	"flashProgramDelay\000"
 13226      6850726F 
 13226      6772616D 
 13226      44656C61 
 13226      7900
 13227              	.LASF76:
 13228 1739 70657269 		.ascii	"periTrCmdOffset\000"
 13228      5472436D 
 13228      644F6666 
 13228      73657400 
 13229              	.LASF150:
 13230 1749 72784275 		.ascii	"rxBufSize\000"
 13230      6653697A 
 13230      6500
 13231              	.LASF241:
 13232 1753 75784375 		.ascii	"uxCurrentBasePriority\000"
 13232      7272656E 
 13232      74426173 
 13232      65507269 
 13232      6F726974 
 13233              	.LASF331:
 13234 1769 78596965 		.ascii	"xYieldPending\000"
 13234      6C645065 
 13234      6E64696E 
 13234      6700
 13235              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
